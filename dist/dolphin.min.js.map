{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/dolphin.js","bower_components/core.js/library/fn/map.js","bower_components/core.js/library/modules/$.assert.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.def.js","bower_components/core.js/library/modules/$.fw.js","bower_components/core.js/library/modules/$.iter-detect.js","bower_components/core.js/library/modules/$.iter.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.species.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.unscope.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/web.dom.iterable.js","src/classrepo.js","src/polyfills.js","src/utils.js"],"names":[],"mappingsjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhpGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dolphin.min.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jslint browserify: true */\n/* global Platform */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar opendolphin = (typeof window !== \"undefined\" ? window.opendolphin : typeof global !== \"undefined\" ? global.opendolphin : null);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\n\n\nexports.connect = function(url, config) {\n    return new Dolphin(url, config);\n};\n\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar DOLPHIN_LIST_ADD_FROM_SERVER = '@@@ LIST_ADD_FROM_SERVER @@@';\nvar DOLPHIN_LIST_DEL_FROM_SERVER = '@@@ LIST_DEL_FROM_SERVER @@@';\nvar DOLPHIN_LIST_SET_FROM_SERVER = '@@@ LIST_SET_FROM_SERVER @@@';\nvar DOLPHIN_LIST_ADD_FROM_CLIENT = '@@@ LIST_ADD_FROM_CLIENT @@@';\nvar DOLPHIN_LIST_DEL_FROM_CLIENT = '@@@ LIST_DEL_FROM_CLIENT @@@';\nvar DOLPHIN_LIST_SET_FROM_CLIENT = '@@@ LIST_SET_FROM_CLIENT @@@';\n\n\nfunction onModelAdded(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.registerClass(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_SERVER:\n            dolphin.classRepository.addListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL_FROM_SERVER:\n            dolphin.classRepository.delListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET_FROM_SERVER:\n            dolphin.classRepository.setListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_CLIENT:\n        case DOLPHIN_LIST_DEL_FROM_CLIENT:\n        case DOLPHIN_LIST_SET_FROM_CLIENT:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.load(model);\n            var handlerList = dolphin.addedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            dolphin.allAddedHandlers.forEach(function(handler) {\n                handler(bean);\n            });\n            break;\n    }\n}\n\nfunction onModelRemoved(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_SERVER:\n        case DOLPHIN_LIST_DEL_FROM_SERVER:\n        case DOLPHIN_LIST_SET_FROM_SERVER:\n        case DOLPHIN_LIST_ADD_FROM_CLIENT:\n        case DOLPHIN_LIST_DEL_FROM_CLIENT:\n        case DOLPHIN_LIST_SET_FROM_CLIENT:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.unload(model);\n            if (exists(bean)) {\n                var handlerList = dolphin.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    handlerList.forEach(function(handler) {\n                        handler(bean);\n                    });\n                }\n                dolphin.allRemovedHandlers.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            break;\n    }\n\n}\n\n\n\nfunction Dolphin(url, config) {\n    var _this = this;\n    var observeInterval = 50;\n    this.dolphin = opendolphin.dolphin(url, true, 4);\n    if (exists(config)) {\n        if (config.serverPush) {\n            this.dolphin.startPushListening('ServerPushController:longPoll', 'ServerPushController:release');\n        }\n        if (config.observeInterval) {\n            observeInterval = config.observeInterval;\n        }\n    }\n    this.classRepository = new ClassRepository();\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    setInterval(Platform.performMicrotaskCheckpoint, observeInterval);\n\n    this.dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        if (event.eventType === opendolphin.Type.ADDED) {\n            onModelAdded(_this, model);\n        } else if (event.eventType === opendolphin.Type.REMOVED) {\n            onModelRemoved(_this, model);\n        }\n    });\n}\n\n\nDolphin.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.onAdded = function(type, eventHandler) {\n    // TODO: Probably safer to use copy-on-write here [DP-6]\n    if (!exists(eventHandler)) {\n        this.allAddedHandlers.push(type);\n    } else {\n        var handlerList = this.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n            this.addedHandlers.set(type, handlerList);\n        }\n        handlerList.push(eventHandler);\n    }\n\n    // TODO: Return subscription [DP-6]\n    return null;\n};\n\n\nDolphin.prototype.onRemoved = function(type, eventHandler) {\n    // TODO: Probably safer to use copy-on-write here [DP-6]\n    if (!exists(eventHandler)) {\n        this.allRemovedHandlers.push(type);\n    } else {\n        var handlerList = this.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n            this.removedHandlers.set(type, handlerList);\n        }\n        handlerList.push(eventHandler);\n    }\n\n    // TODO: Return subscription [DP-6]\n    return null;\n};\n\n\nDolphin.prototype.send = function(command, params) {\n    if (exists(params)) {\n        var attributes = [];\n        for (var prop in params) {\n            if (params.hasOwnProperty(prop)) {\n                var param = this.classRepository.mapParamToDolphin(params[prop]);\n                attributes.push(this.dolphin.attribute(prop, null, param.value, 'VALUE'));\n                attributes.push(this.dolphin.attribute(prop, null, param.type, 'VALUE_TYPE'));\n            }\n        }\n        this.dolphin.presentationModel.apply(this.dolphin, [null, '@@@ DOLPHIN_PARAMETER @@@'].concat(attributes));\n    }\n    this.dolphin.send(command);\n\n    // TODO: Return promise [DP-8]\n    return null;\n};\n","require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nmodule.exports = require('../modules/$').core.Map;","var $ = require('./$');\nfunction assert(condition, msg1, msg2){\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\n}\nassert.def = $.assertDefined;\nassert.fn = function(it){\n  if(!$.isFunction(it))throw TypeError(it + ' is not a function!');\n  return it;\n};\nassert.obj = function(it){\n  if(!$.isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\nassert.inst = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\nmodule.exports = assert;","var $        = require('./$')\n  , TAG      = require('./$.wks')('toStringTag')\n  , toString = {}.toString;\nfunction cof(it){\n  return toString.call(it).slice(8, -1);\n}\ncof.classof = function(it){\n  var O, T;\n  return it == undefined ? it === undefined ? 'Undefined' : 'Null'\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : cof(O);\n};\ncof.set = function(it, tag, stat){\n  if(it && !$.has(it = stat ? it : it.prototype, TAG))$.hide(it, TAG, tag);\n};\nmodule.exports = cof;","'use strict';\nvar $        = require('./$')\n  , ctx      = require('./$.ctx')\n  , safe     = require('./$.uid').safe\n  , assert   = require('./$.assert')\n  , $iter    = require('./$.iter')\n  , has      = $.has\n  , set      = $.set\n  , isObject = $.isObject\n  , hide     = $.hide\n  , step     = $iter.step\n  , isFrozen = Object.isFrozen || $.core.Object.isFrozen\n  , ID       = safe('id')\n  , O1       = safe('O1')\n  , LAST     = safe('last')\n  , FIRST    = safe('first')\n  , ITER     = safe('iter')\n  , SIZE     = $.DESC ? safe('size') : 'size'\n  , id       = 0;\n\nfunction fastKey(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\n  // can't set id to frozen object\n  if(isFrozen(it))return 'F';\n  if(!has(it, ID)){\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n}\n\nfunction getEntry(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index != 'F')return that[O1][index];\n  // frozen object case\n  for(entry = that[FIRST]; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n}\n\nmodule.exports = {\n  getConstructor: function(NAME, IS_MAP, ADDER){\n    function C(iterable){\n      var that = assert.inst(this, C, NAME);\n      set(that, O1, $.create(null));\n      set(that, SIZE, 0);\n      set(that, LAST, undefined);\n      set(that, FIRST, undefined);\n      if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n    }\n    $.mix(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that[FIRST] = that[LAST] = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that[O1][entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that[FIRST] == entry)that[FIRST] = next;\n          if(that[LAST] == entry)that[LAST] = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments[1], 3)\n          , entry;\n        while(entry = entry ? entry.n : this[FIRST]){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if($.DESC)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return assert.def(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that[LAST] = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that[LAST],          // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that[FIRST])that[FIRST] = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index != 'F')that[O1][index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  getIterConstructor: function(){\n    return function(iterated, kind){\n      set(this, ITER, {o: iterated, k: kind});\n    };\n  },\n  next: function(){\n    var iter  = this[ITER]\n      , kind  = iter.k\n      , entry = iter.l;\n    // revert to the last existing entry\n    while(entry && entry.r)entry = entry.p;\n    // get next entry\n    if(!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])){\n      // or finish the iteration\n      iter.o = undefined;\n      return step(1);\n    }\n    // return step by kind\n    if(kind == 'key'  )return step(0, entry.k);\n    if(kind == 'value')return step(0, entry.v);\n    return step(0, [entry.k, entry.v]);\n  }\n};","'use strict';\nvar $     = require('./$')\n  , $def  = require('./$.def')\n  , $iter = require('./$.iter')\n  , assertInstance = require('./$.assert').inst;\n\nmodule.exports = function(NAME, methods, common, IS_MAP, isWeak){\n  var Base  = $.g[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  function fixMethod(KEY, CHAIN){\n    var method = proto[KEY];\n    if($.FW)proto[KEY] = function(a, b){\n      var result = method.call(this, a === 0 ? 0 : a, b);\n      return CHAIN ? this : result;\n    };\n  }\n  if(!$.isFunction(C) || !(isWeak || !$iter.BUGGY && proto.forEach && proto.entries)){\n    // create collection constructor\n    C = common.getConstructor(NAME, IS_MAP, ADDER);\n    $.mix(C.prototype, methods);\n  } else {\n    var inst  = new C\n      , chain = inst[ADDER](isWeak ? {} : -0, 1)\n      , buggyZero;\n    // wrap for init collections from iterable\n    if(!require('./$.iter-detect')(function(iter){ new C(iter); })){ // eslint-disable-line no-new\n      C = function(iterable){\n        assertInstance(this, C, NAME);\n        var that = new Base;\n        if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      };\n      C.prototype = proto;\n      if($.FW)proto.constructor = C;\n    }\n    isWeak || inst.forEach(function(val, key){\n      buggyZero = 1 / key === -Infinity;\n    });\n    // fix converting -0 key to +0\n    if(buggyZero){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    // + fix .add & .set for chaining\n    if(buggyZero || chain !== inst)fixMethod(ADDER, true);\n  }\n\n  require('./$.cof').set(C, NAME);\n  require('./$.species')(C);\n\n  O[NAME] = C;\n  $def($def.G + $def.W + $def.F * (C != Base), O);\n\n  // add .keys, .values, .entries, [@@iterator]\n  // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n  if(!isWeak)$iter.std(\n    C, NAME,\n    common.getIterConstructor(), common.next,\n    IS_MAP ? 'key+value' : 'value' , !IS_MAP, true\n  );\n\n  return C;\n};","// Optional / simple context binding\nvar assertFunction = require('./$.assert').fn;\nmodule.exports = function(fn, that, length){\n  assertFunction(fn);\n  if(~length && that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  } return function(/* ...args */){\n      return fn.apply(that, arguments);\n    };\n};","var $          = require('./$')\n  , global     = $.g\n  , core       = $.core\n  , isFunction = $.isFunction;\nfunction ctx(fn, that){\n  return function(){\n    return fn.apply(that, arguments);\n  };\n}\n// type bitmap\n$def.F = 1;  // forced\n$def.G = 2;  // global\n$def.S = 4;  // static\n$def.P = 8;  // proto\n$def.B = 16; // bind\n$def.W = 32; // wrap\nfunction $def(type, name, source){\n  var key, own, out, exp\n    , isGlobal = type & $def.G\n    , target   = isGlobal ? global : type & $def.S\n        ? global[name] : (global[name] || {}).prototype\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\n  if(isGlobal)source = name;\n  for(key in source){\n    // contains in native\n    own = !(type & $def.F) && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    if(isGlobal && !isFunction(target[key]))exp = source[key];\n    // bind timers to global for call from export context\n    else if(type & $def.B && own)exp = ctx(out, global);\n    // wrap global constructors for prevent change them in library\n    else if(type & $def.W && target[key] == out)!function(C){\n      exp = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      exp.prototype = C.prototype;\n    }(out);\n    else exp = type & $def.P && isFunction(out) ? ctx(Function.call, out) : out;\n    // export\n    $.hide(exports, key, exp);\n  }\n}\nmodule.exports = $def;","module.exports = function($){\n  $.FW   = false;\n  $.path = $.core;\n  return $;\n};","var SYMBOL_ITERATOR = require('./$.wks')('iterator')\n  , SAFE_CLOSING    = false;\ntry {\n  var riter = [7][SYMBOL_ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\nmodule.exports = function(exec){\n  if(!SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[SYMBOL_ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[SYMBOL_ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","'use strict';\nvar $                 = require('./$')\n  , ctx               = require('./$.ctx')\n  , cof               = require('./$.cof')\n  , $def              = require('./$.def')\n  , assertObject      = require('./$.assert').obj\n  , SYMBOL_ITERATOR   = require('./$.wks')('iterator')\n  , FF_ITERATOR       = '@@iterator'\n  , Iterators         = {}\n  , IteratorPrototype = {};\n// Safari has byggy iterators w/o `next`\nvar BUGGY = 'keys' in [] && !('next' in [].keys());\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nsetIterator(IteratorPrototype, $.that);\nfunction setIterator(O, value){\n  $.hide(O, SYMBOL_ITERATOR, value);\n  // Add iterator for FF iterator protocol\n  if(FF_ITERATOR in [])$.hide(O, FF_ITERATOR, value);\n}\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\n  var proto = Constructor.prototype\n    , iter  = proto[SYMBOL_ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT] || value;\n  // Define iterator\n  if($.FW)setIterator(proto, iter);\n  if(iter !== value){\n    var iterProto = $.getProto(iter.call(new Constructor));\n    // Set @@toStringTag to native iterators\n    cof.set(iterProto, NAME + ' Iterator', true);\n    // FF fix\n    if($.FW)$.has(proto, FF_ITERATOR) && setIterator(iterProto, $.that);\n  }\n  // Plug for library\n  Iterators[NAME] = iter;\n  // FF & v8 fix\n  Iterators[NAME + ' Iterator'] = $.that;\n  return iter;\n}\nfunction getIterator(it){\n  var Symbol  = $.g.Symbol\n    , ext     = it[Symbol && Symbol.iterator || FF_ITERATOR]\n    , getIter = ext || it[SYMBOL_ITERATOR] || Iterators[cof.classof(it)];\n  return assertObject(getIter.call(it));\n}\nfunction closeIterator(iterator){\n  var ret = iterator['return'];\n  if(ret !== undefined)assertObject(ret.call(iterator));\n}\nfunction stepCall(iterator, fn, value, entries){\n  try {\n    return entries ? fn(assertObject(value)[0], value[1]) : fn(value);\n  } catch(e){\n    closeIterator(iterator);\n    throw e;\n  }\n}\nvar $iter = module.exports = {\n  BUGGY: BUGGY,\n  Iterators: Iterators,\n  prototype: IteratorPrototype,\n  step: function(done, value){\n    return {value: value, done: !!done};\n  },\n  stepCall: stepCall,\n  close: closeIterator,\n  is: function(it){\n    var O      = Object(it)\n      , Symbol = $.g.Symbol\n      , SYM    = Symbol && Symbol.iterator || FF_ITERATOR;\n    return SYM in O || SYMBOL_ITERATOR in O || $.has(Iterators, cof.classof(O));\n  },\n  get: getIterator,\n  set: setIterator,\n  create: function(Constructor, NAME, next, proto){\n    Constructor.prototype = $.create(proto || $iter.prototype, {next: $.desc(1, next)});\n    cof.set(Constructor, NAME + ' Iterator');\n  },\n  define: defineIterator,\n  std: function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCE){\n    function createIter(kind){\n      return function(){\n        return new Constructor(this, kind);\n      };\n    }\n    $iter.create(Constructor, NAME, next);\n    var entries = createIter('key+value')\n      , values  = createIter('value')\n      , proto   = Base.prototype\n      , methods, key;\n    if(DEFAULT == 'value')values = defineIterator(Base, NAME, values, 'values');\n    else entries = defineIterator(Base, NAME, entries, 'entries');\n    if(DEFAULT){\n      methods = {\n        entries: entries,\n        keys:    IS_SET ? values : createIter('key'),\n        values:  values\n      };\n      $def($def.P + $def.F * BUGGY, NAME, methods);\n      if(FORCE)for(key in methods){\n        if(!(key in proto))$.hide(proto, key, methods[key]);\n      }\n    }\n  },\n  forOf: function(iterable, entries, fn, that){\n    var iterator = getIterator(iterable)\n      , f = ctx(fn, that, entries ? 2 : 1)\n      , step;\n    while(!(step = iterator.next()).done){\n      if(stepCall(iterator, f, step.value, entries) === false){\n        return closeIterator(iterator);\n      }\n    }\n  }\n};","'use strict';\nvar global = typeof self != 'undefined' ? self : Function('return this')()\n  , core   = {}\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = {}.hasOwnProperty\n  , ceil  = Math.ceil\n  , floor = Math.floor\n  , max   = Math.max\n  , min   = Math.min;\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\nvar DESC = !!function(){\n  try {\n    return defineProperty({}, 'a', {get: function(){ return 2; }}).a == 2;\n  } catch(e){ /* empty */ }\n}();\nvar hide = createDefiner(1);\n// 7.1.4 ToInteger\nfunction toInteger(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n}\nfunction desc(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n}\nfunction simpleSet(object, key, value){\n  object[key] = value;\n  return object;\n}\nfunction createDefiner(bitmap){\n  return DESC ? function(object, key, value){\n    return $.setDesc(object, key, desc(bitmap, value)); // eslint-disable-line no-use-before-define\n  } : simpleSet;\n}\n\nfunction isObject(it){\n  return it !== null && (typeof it == 'object' || typeof it == 'function');\n}\nfunction isFunction(it){\n  return typeof it == 'function';\n}\nfunction assertDefined(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n}\n\nvar $ = module.exports = require('./$.fw')({\n  g: global,\n  core: core,\n  html: global.document && document.documentElement,\n  // http://jsperf.com/core-js-isobject\n  isObject:   isObject,\n  isFunction: isFunction,\n  it: function(it){\n    return it;\n  },\n  that: function(){\n    return this;\n  },\n  // 7.1.4 ToInteger\n  toInteger: toInteger,\n  // 7.1.15 ToLength\n  toLength: function(it){\n    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  },\n  toIndex: function(index, length){\n    index = toInteger(index);\n    return index < 0 ? max(index + length, 0) : min(index, length);\n  },\n  has: function(it, key){\n    return hasOwnProperty.call(it, key);\n  },\n  create:     Object.create,\n  getProto:   Object.getPrototypeOf,\n  DESC:       DESC,\n  desc:       desc,\n  getDesc:    Object.getOwnPropertyDescriptor,\n  setDesc:    defineProperty,\n  getKeys:    Object.keys,\n  getNames:   Object.getOwnPropertyNames,\n  getSymbols: Object.getOwnPropertySymbols,\n  // Dummy, fix for not array-like ES3 string in es5 module\n  assertDefined: assertDefined,\n  ES5Object: Object,\n  toObject: function(it){\n    return $.ES5Object(assertDefined(it));\n  },\n  hide: hide,\n  def: createDefiner(0),\n  set: global.Symbol ? simpleSet : hide,\n  mix: function(target, src){\n    for(var key in src)hide(target, key, src[key]);\n    return target;\n  },\n  each: [].forEach\n});\nif(typeof __e != 'undefined')__e = core;\nif(typeof __g != 'undefined')__g = global;","var $ = require('./$');\nmodule.exports = function(C){\n  if($.DESC && $.FW)$.setDesc(C, require('./$.wks')('species'), {\n    configurable: true,\n    get: $.that\n  });\n};","'use strict';\n// true  -> String#at\n// false -> String#codePointAt\nvar $ = require('./$');\nmodule.exports = function(TO_STRING){\n  return function(pos){\n    var s = String($.assertDefined(this))\n      , i = $.toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l\n      || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n        ? TO_STRING ? s.charAt(i) : a\n        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var sid = 0;\nfunction uid(key){\n  return 'Symbol(' + key + ')_' + (++sid + Math.random()).toString(36);\n}\nuid.safe = require('./$').g.Symbol || uid;\nmodule.exports = uid;","// 22.1.3.31 Array.prototype[@@unscopables]\nvar $           = require('./$')\n  , UNSCOPABLES = require('./$.wks')('unscopables');\nif($.FW && !(UNSCOPABLES in []))$.hide(Array.prototype, UNSCOPABLES, {});\nmodule.exports = function(key){\n  if($.FW)[][UNSCOPABLES][key] = true;\n};","var global = require('./$').g\n  , store  = {};\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    global.Symbol && global.Symbol[name] || require('./$.uid').safe('Symbol.' + name));\n};","var $          = require('./$')\n  , setUnscope = require('./$.unscope')\n  , ITER       = require('./$.uid').safe('iter')\n  , $iter      = require('./$.iter')\n  , step       = $iter.step\n  , Iterators  = $iter.Iterators;\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\n$iter.std(Array, 'Array', function(iterated, kind){\n  $.set(this, ITER, {o: $.toObject(iterated), i: 0, k: kind});\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , kind  = iter.k\n    , index = iter.i++;\n  if(!O || index >= O.length){\n    iter.o = undefined;\n    return step(1);\n  }\n  if(kind == 'key'  )return step(0, index);\n  if(kind == 'value')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'value');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\nsetUnscope('keys');\nsetUnscope('values');\nsetUnscope('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","var set   = require('./$').set\n  , at    = require('./$.string-at')(true)\n  , ITER  = require('./$.uid').safe('iter')\n  , $iter = require('./$.iter')\n  , step  = $iter.step;\n\n// 21.1.3.27 String.prototype[@@iterator]()\n$iter.std(String, 'String', function(iterated){\n  set(this, ITER, {o: String(iterated), i: 0});\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , index = iter.i\n    , point;\n  if(index >= O.length)return step(1);\n  point = at.call(O, index);\n  iter.i += point.length;\n  return step(0, point);\n});","require('./es6.array.iterator');\nvar $           = require('./$')\n  , Iterators   = require('./$.iter').Iterators\n  , ITERATOR    = require('./$.wks')('iterator')\n  , ArrayValues = Iterators.Array\n  , NodeList    = $.g.NodeList;\nif($.FW && NodeList && !(ITERATOR in NodeList.prototype)){\n  $.hide(NodeList.prototype, ITERATOR, ArrayValues);\n}\nIterators.NodeList = ArrayValues;","/*jslint browserify: true */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar opendolphin = (typeof window !== \"undefined\" ? window.opendolphin : typeof global !== \"undefined\" ? global.opendolphin : null);\nvar ObjectObserver = (typeof window !== \"undefined\" ? window.ObjectObserver : typeof global !== \"undefined\" ? global.ObjectObserver : null);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nfunction fromDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction modifyList(bean, attribute, from, count, newElements) {\n    var list = bean[attribute];\n    if (!exists(list)) {\n        bean[attribute] = list = [];\n    } else if (!Array.isArray(list)) {\n        bean[attribute] = list = [list];\n    }\n    if (typeof newElements === 'undefined') {\n        list.splice(from, count);\n    } else {\n        list.splice(from, count, newElements);\n    }\n}\n\n\nfunction ClassRepository() {\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n}\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return attribute.tag === opendolphin.Tag.value();\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                bean[attribute.propertyName] = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n            }\n        });\n    });\n    var observer = new ObjectObserver(bean);\n    observer.open(function (added, removed, changed) {\n        Object.keys(added).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], added[property]);\n                attribute.setValue(value);\n            }\n        });\n        Object.keys(removed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                attribute.setValue(null);\n            }\n        });\n        Object.keys(changed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], changed[property]);\n                attribute.setValue(value);\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 0, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            modifyList(bean, attribute.value, from.value, to.value - from.value);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 1, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function (object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n"]}