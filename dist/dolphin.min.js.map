{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/dolphin.js","dolphin.min.js","bower_components/core.js/library/fn/map.js","bower_components/core.js/library/fn/promise.js","bower_components/core.js/library/modules/$.assert.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.def.js","bower_components/core.js/library/modules/$.fw.js","bower_components/core.js/library/modules/$.invoke.js","bower_components/core.js/library/modules/$.iter-detect.js","bower_components/core.js/library/modules/$.iter.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.species.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.task.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.unscope.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.promise.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/web.dom.iterable.js","src/classrepo.js","src/newclassrepo.js","src/polyfills.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","onModelAdded","model","type","presentationModelType","DOLPHIN_BEAN","classRepository","registerClass","DOLPHIN_LIST_ADD","addListEntry","opendolphin","deletePresentationModel","DOLPHIN_LIST_DEL","delListEntry","DOLPHIN_LIST_SET","setListEntry","bean","load","handlerList","addedHandlers","get","exists","forEach","handler","allAddedHandlers","onModelRemoved","unregisterClass","unload","removedHandlers","allRemovedHandlers","finalizeOpenDolphin","config","useNewClassRepository","observeInterval","serverPush","startPushListening","NewClassRepository","ClassRepository","onBeanUpdate","propertyName","newValue","oldValue","updatedHandlers","allUpdatedHandlers","onArrayUpdate","index","count","newElement","arrayUpdatedHandlers","allArrayUpdatedHandlers","shutdownRequested","loop","setTimeout","Platform","performMicrotaskCheckpoint","shutdown","getClientModelStore","onModelStoreChange","event","clientPresentationModel","sourceSystem","findAttributeByPropertyName","SOURCE_SYSTEM","value","SOURCE_SYSTEM_SERVER","eventType","Type","ADDED","REMOVED","Dolphin","url","reset","Map","makeDolphin","slackMS","build","Promise","connect","connect2","resolve","reject","req","XMLHttpRequest","withCredentials","onload","status","statusText","onerror","open","send","SOURCE_SYSTEM_CLIENT","prototype","notifyBeanChange","notifyArrayChange","removedElements","isManaged","create","add","addAll","collection","remove","removeAll","removeIf","predicate","onAdded","eventHandler","set","concat","unsubscribe","filter","onRemoved","command","params","attributes","attribute","prop","hasOwnProperty","param","mapParamToDolphin","push","presentationModel","apply","localDolphin","onFinished","../bower_components/core.js/library/fn/map","../bower_components/core.js/library/fn/promise","./classrepo.js","./newclassrepo.js","./polyfills.js","./utils.js",2,"core","../modules/$","../modules/es6.map","../modules/es6.string.iterator","../modules/web.dom.iterable",3,"../modules/es6.promise",4,"assert","condition","msg1","msg2","TypeError","$","def","assertDefined","fn","it","isFunction","obj","isObject","inst","Constructor","name","./$",5,"cof","toString","slice","TAG","classof","O","T","undefined","Object","tag","stat","has","hide","./$.wks",6,"fastKey","isFrozen","ID","id","getEntry","that","key","entry","O1","FIRST","k","ctx","safe","$iter","step","LAST","ITER","SIZE","DESC","getConstructor","NAME","IS_MAP","ADDER","C","iterable","forOf","mix","clear","data","p","delete","next","prev","callbackfn","arguments","v","setDesc","getIterConstructor","iterated","kind","iter","./$.assert","./$.ctx","./$.iter","./$.uid",7,"$def","assertInstance","methods","common","isWeak","fixMethod","KEY","CHAIN","method","proto","FW","b","result","Base","BUGGY","entries","buggyZero","chain","constructor","val","Infinity","G","W","F","std","./$.cof","./$.def","./$.iter-detect","./$.species",8,"assertFunction","c",9,"source","own","out","exp","isGlobal","target","S","B","P","Function",10,"path",11,"args","un",12,"SYMBOL_ITERATOR","SAFE_CLOSING","riter","Array","from","exec","arr",13,"setIterator","FF_ITERATOR","defineIterator","DEFAULT","iterProto","getProto","Iterators","getIterator","Symbol","ext","iterator","getIter","assertObject","closeIterator","ret","stepCall","IteratorPrototype","keys","done","close","is","SYM","desc","IS_SET","FORCE","createIter","values",14,"toInteger","isNaN","floor","ceil","bitmap","enumerable","configurable","writable","simpleSet","object","createDefiner","defineProperty","Math","max","min","html","document","documentElement","toLength","toIndex","getPrototypeOf","getDesc","getOwnPropertyDescriptor","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","ES5Object","toObject","src","each","__e","__g","./$.fw",15,16,"TO_STRING","pos","String","charCodeAt","charAt",17,"run","queue","listner","defer","channel","port","invoke","process","setTask","setImmediate","clearTask","clearImmediate","postMessage","addEventListener","MessageChannel","counter","ONREADYSTATECHANGE","nextTick","importScripts","port2","port1","onmessage","createElement","appendChild","removeChild","./$.invoke",18,"uid","sid","random",19,"UNSCOPABLES",20,"store",21,"setUnscope","Arguments","./$.unscope",22,"strong","./$.collection","./$.collection-strong",23,"SPECIES","isThenable","then","isUnhandled","promise","react","record","RECORD","h","fail","notify","isReject","asap","ok","emit","console","error","cb","rej","PROMISE","res","err","$reject","d","$resolve","wrapper","test","executor","onFulfilled","onRejected","catch","x","all","remaining","results","race","./$.task",24,"at","point","./$.string-at",25,"ITERATOR","ArrayValues","NodeList","./es6.array.iterator",26,"fromDolphin","beanFromDolphin","toDolphin","beanToDolphin","modifyList","newElements","list","isArray","splice","classes","classInfos","ObjectObserver","UNKNOWN","BASIC_TYPE","classInfo","onValueChange","_this","Tag","observer","added","removed","changed","property","setValue","element","to",27,"sendListAdd","modelId","sendListRemove","validateList","propertyUpdateHandlers","block","blocked","isBlocked","unblock","arrayUpdateHandlers","findPresentationModelById","getValue","array","search",28,"callback","thisArg","len","kValue","fun",29],"mappings":"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","file":"dolphin.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map  = require('../bower_components/core.js/library/fn/map');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\n\nvar exists = require('./utils.js').exists;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\nvar NewClassRepository = require('./newclassrepo.js').ClassRepository;\n\n\nexports.connect = function(url, config) {\n    var dolphin = new Dolphin(url, true);\n    finalizeOpenDolphin(dolphin, config, false);\n    return dolphin;\n};\n\nexports.connect2 = function(url, config) {\n    var dolphin = new Dolphin(url, false);\n\n    return new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status == 200) {\n                finalizeOpenDolphin(dolphin, config, true);\n                resolve(dolphin);\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n};\n\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\nfunction onModelAdded(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.registerClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            dolphin.classRepository.addListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            dolphin.classRepository.delListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            dolphin.classRepository.setListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        default:\n            var bean = dolphin.classRepository.load(model);\n            var handlerList = dolphin.addedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean);\n                });\n            }\n            dolphin.allAddedHandlers.forEach(function (handler) {\n                handler(bean);\n            });\n            break;\n    }\n}\n\nfunction onModelRemoved(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.unload(model);\n            if (exists(bean)) {\n                var handlerList = dolphin.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    handlerList.forEach(function(handler) {\n                        handler(bean);\n                    });\n                }\n                dolphin.allRemovedHandlers.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            break;\n    }\n\n}\n\n\n\nfunction finalizeOpenDolphin(dolphin, config, useNewClassRepository) {\n    var observeInterval = 50;\n    if (exists(config)) {\n        if (config.serverPush) {\n            dolphin.opendolphin.startPushListening('ServerPushController:longPoll', 'ServerPushController:release');\n        }\n        if (config.observeInterval) {\n            observeInterval = config.observeInterval;\n        }\n    }\n    dolphin.classRepository = useNewClassRepository? new NewClassRepository(dolphin.opendolphin) : new ClassRepository();\n\n    if (useNewClassRepository) {\n        dolphin.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n            var handlerList = dolphin.updatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean, propertyName, newValue, oldValue);\n                });\n            }\n            dolphin.allUpdatedHandlers.forEach(function (handler) {\n                handler(bean, propertyName, newValue, oldValue);\n            });\n        });\n        dolphin.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n            var handlerList = dolphin.arrayUpdatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean, propertyName, index, count, newElement);\n                });\n            }\n            dolphin.allArrayUpdatedHandlers.forEach(function (handler) {\n                handler(bean, propertyName, index, count, newElement);\n            });\n        });\n    } else {\n        var shutdownRequested = false;\n        (function loop() {\n            setTimeout(function () {\n                Platform.performMicrotaskCheckpoint();\n                if (!shutdownRequested) {\n                    loop();\n                }\n            }, observeInterval);\n        })();\n        dolphin.shutdown = function () {\n            shutdownRequested = true;\n        };\n    }\n\n    dolphin.opendolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                onModelAdded(dolphin, model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                onModelRemoved(dolphin, model);\n            }\n        }\n    });\n}\n\n\nfunction Dolphin(url, reset) {\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    this.opendolphin = opendolphin.makeDolphin().url(url).reset(reset).slackMS(4).build();\n}\n\n\nDolphin.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nDolphin.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nDolphin.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.send = function(command, params) {\n    if (exists(params)) {\n\n        var attributes = [\n            this.opendolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT)\n        ];\n        for (var prop in params) {\n            if (params.hasOwnProperty(prop)) {\n                var param = this.classRepository.mapParamToDolphin(params[prop]);\n                attributes.push(this.opendolphin.attribute(prop, null, param.value, 'VALUE'));\n                attributes.push(this.opendolphin.attribute(prop, null, param.type, 'VALUE_TYPE'));\n            }\n        }\n        this.opendolphin.presentationModel.apply(this.opendolphin, [null, '@@@ DOLPHIN_PARAMETER @@@'].concat(attributes));\n    }\n\n    var localDolphin = this.opendolphin;\n    return new Promise(function(resolve) {\n        localDolphin.send(command, { onFinished: function() {resolve();} });\n    });\n};\n",null,"require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nmodule.exports = require('../modules/$').core.Map;","require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/$').core.Promise;","var $ = require('./$');\nfunction assert(condition, msg1, msg2){\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\n}\nassert.def = $.assertDefined;\nassert.fn = function(it){\n  if(!$.isFunction(it))throw TypeError(it + ' is not a function!');\n  return it;\n};\nassert.obj = function(it){\n  if(!$.isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\nassert.inst = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\nmodule.exports = assert;","var $        = require('./$')\n  , TAG      = require('./$.wks')('toStringTag')\n  , toString = {}.toString;\nfunction cof(it){\n  return toString.call(it).slice(8, -1);\n}\ncof.classof = function(it){\n  var O, T;\n  return it == undefined ? it === undefined ? 'Undefined' : 'Null'\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : cof(O);\n};\ncof.set = function(it, tag, stat){\n  if(it && !$.has(it = stat ? it : it.prototype, TAG))$.hide(it, TAG, tag);\n};\nmodule.exports = cof;","'use strict';\nvar $        = require('./$')\n  , ctx      = require('./$.ctx')\n  , safe     = require('./$.uid').safe\n  , assert   = require('./$.assert')\n  , $iter    = require('./$.iter')\n  , has      = $.has\n  , set      = $.set\n  , isObject = $.isObject\n  , hide     = $.hide\n  , step     = $iter.step\n  , isFrozen = Object.isFrozen || $.core.Object.isFrozen\n  , ID       = safe('id')\n  , O1       = safe('O1')\n  , LAST     = safe('last')\n  , FIRST    = safe('first')\n  , ITER     = safe('iter')\n  , SIZE     = $.DESC ? safe('size') : 'size'\n  , id       = 0;\n\nfunction fastKey(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\n  // can't set id to frozen object\n  if(isFrozen(it))return 'F';\n  if(!has(it, ID)){\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n}\n\nfunction getEntry(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index != 'F')return that[O1][index];\n  // frozen object case\n  for(entry = that[FIRST]; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n}\n\nmodule.exports = {\n  getConstructor: function(NAME, IS_MAP, ADDER){\n    function C(iterable){\n      var that = assert.inst(this, C, NAME);\n      set(that, O1, $.create(null));\n      set(that, SIZE, 0);\n      set(that, LAST, undefined);\n      set(that, FIRST, undefined);\n      if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n    }\n    $.mix(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that[FIRST] = that[LAST] = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that[O1][entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that[FIRST] == entry)that[FIRST] = next;\n          if(that[LAST] == entry)that[LAST] = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments[1], 3)\n          , entry;\n        while(entry = entry ? entry.n : this[FIRST]){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if($.DESC)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return assert.def(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that[LAST] = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that[LAST],          // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that[FIRST])that[FIRST] = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index != 'F')that[O1][index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  getIterConstructor: function(){\n    return function(iterated, kind){\n      set(this, ITER, {o: iterated, k: kind});\n    };\n  },\n  next: function(){\n    var iter  = this[ITER]\n      , kind  = iter.k\n      , entry = iter.l;\n    // revert to the last existing entry\n    while(entry && entry.r)entry = entry.p;\n    // get next entry\n    if(!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])){\n      // or finish the iteration\n      iter.o = undefined;\n      return step(1);\n    }\n    // return step by kind\n    if(kind == 'key'  )return step(0, entry.k);\n    if(kind == 'value')return step(0, entry.v);\n    return step(0, [entry.k, entry.v]);\n  }\n};","'use strict';\nvar $     = require('./$')\n  , $def  = require('./$.def')\n  , $iter = require('./$.iter')\n  , assertInstance = require('./$.assert').inst;\n\nmodule.exports = function(NAME, methods, common, IS_MAP, isWeak){\n  var Base  = $.g[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  function fixMethod(KEY, CHAIN){\n    var method = proto[KEY];\n    if($.FW)proto[KEY] = function(a, b){\n      var result = method.call(this, a === 0 ? 0 : a, b);\n      return CHAIN ? this : result;\n    };\n  }\n  if(!$.isFunction(C) || !(isWeak || !$iter.BUGGY && proto.forEach && proto.entries)){\n    // create collection constructor\n    C = common.getConstructor(NAME, IS_MAP, ADDER);\n    $.mix(C.prototype, methods);\n  } else {\n    var inst  = new C\n      , chain = inst[ADDER](isWeak ? {} : -0, 1)\n      , buggyZero;\n    // wrap for init collections from iterable\n    if(!require('./$.iter-detect')(function(iter){ new C(iter); })){ // eslint-disable-line no-new\n      C = function(iterable){\n        assertInstance(this, C, NAME);\n        var that = new Base;\n        if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      };\n      C.prototype = proto;\n      if($.FW)proto.constructor = C;\n    }\n    isWeak || inst.forEach(function(val, key){\n      buggyZero = 1 / key === -Infinity;\n    });\n    // fix converting -0 key to +0\n    if(buggyZero){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    // + fix .add & .set for chaining\n    if(buggyZero || chain !== inst)fixMethod(ADDER, true);\n  }\n\n  require('./$.cof').set(C, NAME);\n  require('./$.species')(C);\n\n  O[NAME] = C;\n  $def($def.G + $def.W + $def.F * (C != Base), O);\n\n  // add .keys, .values, .entries, [@@iterator]\n  // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n  if(!isWeak)$iter.std(\n    C, NAME,\n    common.getIterConstructor(), common.next,\n    IS_MAP ? 'key+value' : 'value' , !IS_MAP, true\n  );\n\n  return C;\n};","// Optional / simple context binding\nvar assertFunction = require('./$.assert').fn;\nmodule.exports = function(fn, that, length){\n  assertFunction(fn);\n  if(~length && that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  } return function(/* ...args */){\n      return fn.apply(that, arguments);\n    };\n};","var $          = require('./$')\n  , global     = $.g\n  , core       = $.core\n  , isFunction = $.isFunction;\nfunction ctx(fn, that){\n  return function(){\n    return fn.apply(that, arguments);\n  };\n}\n// type bitmap\n$def.F = 1;  // forced\n$def.G = 2;  // global\n$def.S = 4;  // static\n$def.P = 8;  // proto\n$def.B = 16; // bind\n$def.W = 32; // wrap\nfunction $def(type, name, source){\n  var key, own, out, exp\n    , isGlobal = type & $def.G\n    , target   = isGlobal ? global : type & $def.S\n        ? global[name] : (global[name] || {}).prototype\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\n  if(isGlobal)source = name;\n  for(key in source){\n    // contains in native\n    own = !(type & $def.F) && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    if(isGlobal && !isFunction(target[key]))exp = source[key];\n    // bind timers to global for call from export context\n    else if(type & $def.B && own)exp = ctx(out, global);\n    // wrap global constructors for prevent change them in library\n    else if(type & $def.W && target[key] == out)!function(C){\n      exp = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      exp.prototype = C.prototype;\n    }(out);\n    else exp = type & $def.P && isFunction(out) ? ctx(Function.call, out) : out;\n    // export\n    $.hide(exports, key, exp);\n  }\n}\nmodule.exports = $def;","module.exports = function($){\n  $.FW   = false;\n  $.path = $.core;\n  return $;\n};","// Fast apply\n// http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n    case 5: return un ? fn(args[0], args[1], args[2], args[3], args[4])\n                      : fn.call(that, args[0], args[1], args[2], args[3], args[4]);\n  } return              fn.apply(that, args);\n};","var SYMBOL_ITERATOR = require('./$.wks')('iterator')\n  , SAFE_CLOSING    = false;\ntry {\n  var riter = [7][SYMBOL_ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\nmodule.exports = function(exec){\n  if(!SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[SYMBOL_ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[SYMBOL_ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","'use strict';\nvar $                 = require('./$')\n  , ctx               = require('./$.ctx')\n  , cof               = require('./$.cof')\n  , $def              = require('./$.def')\n  , assertObject      = require('./$.assert').obj\n  , SYMBOL_ITERATOR   = require('./$.wks')('iterator')\n  , FF_ITERATOR       = '@@iterator'\n  , Iterators         = {}\n  , IteratorPrototype = {};\n// Safari has byggy iterators w/o `next`\nvar BUGGY = 'keys' in [] && !('next' in [].keys());\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nsetIterator(IteratorPrototype, $.that);\nfunction setIterator(O, value){\n  $.hide(O, SYMBOL_ITERATOR, value);\n  // Add iterator for FF iterator protocol\n  if(FF_ITERATOR in [])$.hide(O, FF_ITERATOR, value);\n}\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\n  var proto = Constructor.prototype\n    , iter  = proto[SYMBOL_ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT] || value;\n  // Define iterator\n  if($.FW)setIterator(proto, iter);\n  if(iter !== value){\n    var iterProto = $.getProto(iter.call(new Constructor));\n    // Set @@toStringTag to native iterators\n    cof.set(iterProto, NAME + ' Iterator', true);\n    // FF fix\n    if($.FW)$.has(proto, FF_ITERATOR) && setIterator(iterProto, $.that);\n  }\n  // Plug for library\n  Iterators[NAME] = iter;\n  // FF & v8 fix\n  Iterators[NAME + ' Iterator'] = $.that;\n  return iter;\n}\nfunction getIterator(it){\n  var Symbol  = $.g.Symbol\n    , ext     = it[Symbol && Symbol.iterator || FF_ITERATOR]\n    , getIter = ext || it[SYMBOL_ITERATOR] || Iterators[cof.classof(it)];\n  return assertObject(getIter.call(it));\n}\nfunction closeIterator(iterator){\n  var ret = iterator['return'];\n  if(ret !== undefined)assertObject(ret.call(iterator));\n}\nfunction stepCall(iterator, fn, value, entries){\n  try {\n    return entries ? fn(assertObject(value)[0], value[1]) : fn(value);\n  } catch(e){\n    closeIterator(iterator);\n    throw e;\n  }\n}\nvar $iter = module.exports = {\n  BUGGY: BUGGY,\n  Iterators: Iterators,\n  prototype: IteratorPrototype,\n  step: function(done, value){\n    return {value: value, done: !!done};\n  },\n  stepCall: stepCall,\n  close: closeIterator,\n  is: function(it){\n    var O      = Object(it)\n      , Symbol = $.g.Symbol\n      , SYM    = Symbol && Symbol.iterator || FF_ITERATOR;\n    return SYM in O || SYMBOL_ITERATOR in O || $.has(Iterators, cof.classof(O));\n  },\n  get: getIterator,\n  set: setIterator,\n  create: function(Constructor, NAME, next, proto){\n    Constructor.prototype = $.create(proto || $iter.prototype, {next: $.desc(1, next)});\n    cof.set(Constructor, NAME + ' Iterator');\n  },\n  define: defineIterator,\n  std: function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCE){\n    function createIter(kind){\n      return function(){\n        return new Constructor(this, kind);\n      };\n    }\n    $iter.create(Constructor, NAME, next);\n    var entries = createIter('key+value')\n      , values  = createIter('value')\n      , proto   = Base.prototype\n      , methods, key;\n    if(DEFAULT == 'value')values = defineIterator(Base, NAME, values, 'values');\n    else entries = defineIterator(Base, NAME, entries, 'entries');\n    if(DEFAULT){\n      methods = {\n        entries: entries,\n        keys:    IS_SET ? values : createIter('key'),\n        values:  values\n      };\n      $def($def.P + $def.F * BUGGY, NAME, methods);\n      if(FORCE)for(key in methods){\n        if(!(key in proto))$.hide(proto, key, methods[key]);\n      }\n    }\n  },\n  forOf: function(iterable, entries, fn, that){\n    var iterator = getIterator(iterable)\n      , f = ctx(fn, that, entries ? 2 : 1)\n      , step;\n    while(!(step = iterator.next()).done){\n      if(stepCall(iterator, f, step.value, entries) === false){\n        return closeIterator(iterator);\n      }\n    }\n  }\n};","'use strict';\nvar global = typeof self != 'undefined' ? self : Function('return this')()\n  , core   = {}\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = {}.hasOwnProperty\n  , ceil  = Math.ceil\n  , floor = Math.floor\n  , max   = Math.max\n  , min   = Math.min;\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\nvar DESC = !!function(){\n  try {\n    return defineProperty({}, 'a', {get: function(){ return 2; }}).a == 2;\n  } catch(e){ /* empty */ }\n}();\nvar hide = createDefiner(1);\n// 7.1.4 ToInteger\nfunction toInteger(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n}\nfunction desc(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n}\nfunction simpleSet(object, key, value){\n  object[key] = value;\n  return object;\n}\nfunction createDefiner(bitmap){\n  return DESC ? function(object, key, value){\n    return $.setDesc(object, key, desc(bitmap, value)); // eslint-disable-line no-use-before-define\n  } : simpleSet;\n}\n\nfunction isObject(it){\n  return it !== null && (typeof it == 'object' || typeof it == 'function');\n}\nfunction isFunction(it){\n  return typeof it == 'function';\n}\nfunction assertDefined(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n}\n\nvar $ = module.exports = require('./$.fw')({\n  g: global,\n  core: core,\n  html: global.document && document.documentElement,\n  // http://jsperf.com/core-js-isobject\n  isObject:   isObject,\n  isFunction: isFunction,\n  it: function(it){\n    return it;\n  },\n  that: function(){\n    return this;\n  },\n  // 7.1.4 ToInteger\n  toInteger: toInteger,\n  // 7.1.15 ToLength\n  toLength: function(it){\n    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  },\n  toIndex: function(index, length){\n    index = toInteger(index);\n    return index < 0 ? max(index + length, 0) : min(index, length);\n  },\n  has: function(it, key){\n    return hasOwnProperty.call(it, key);\n  },\n  create:     Object.create,\n  getProto:   Object.getPrototypeOf,\n  DESC:       DESC,\n  desc:       desc,\n  getDesc:    Object.getOwnPropertyDescriptor,\n  setDesc:    defineProperty,\n  getKeys:    Object.keys,\n  getNames:   Object.getOwnPropertyNames,\n  getSymbols: Object.getOwnPropertySymbols,\n  // Dummy, fix for not array-like ES3 string in es5 module\n  assertDefined: assertDefined,\n  ES5Object: Object,\n  toObject: function(it){\n    return $.ES5Object(assertDefined(it));\n  },\n  hide: hide,\n  def: createDefiner(0),\n  set: global.Symbol ? simpleSet : hide,\n  mix: function(target, src){\n    for(var key in src)hide(target, key, src[key]);\n    return target;\n  },\n  each: [].forEach\n});\nif(typeof __e != 'undefined')__e = core;\nif(typeof __g != 'undefined')__g = global;","var $ = require('./$');\nmodule.exports = function(C){\n  if($.DESC && $.FW)$.setDesc(C, require('./$.wks')('species'), {\n    configurable: true,\n    get: $.that\n  });\n};","'use strict';\n// true  -> String#at\n// false -> String#codePointAt\nvar $ = require('./$');\nmodule.exports = function(TO_STRING){\n  return function(pos){\n    var s = String($.assertDefined(this))\n      , i = $.toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l\n      || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n        ? TO_STRING ? s.charAt(i) : a\n        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","'use strict';\nvar $      = require('./$')\n  , ctx    = require('./$.ctx')\n  , cof    = require('./$.cof')\n  , invoke = require('./$.invoke')\n  , global             = $.g\n  , isFunction         = $.isFunction\n  , html               = $.html\n  , document           = global.document\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , postMessage        = global.postMessage\n  , addEventListener   = global.addEventListener\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nfunction run(){\n  var id = +this;\n  if($.has(queue, id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n}\nfunction listner(event){\n  run.call(event.data);\n}\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!isFunction(setTask) || !isFunction(clearTask)){\n  setTask = function(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(isFunction(fn) ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(cof(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Modern browsers, skip implementation for WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is object\n  } else if(addEventListener && isFunction(postMessage) && !global.importScripts){\n    defer = function(id){\n      postMessage(id, '*');\n    };\n    addEventListener('message', listner, false);\n  // WebWorkers\n  } else if(isFunction(MessageChannel)){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // IE8-\n  } else if(document && ONREADYSTATECHANGE in document.createElement('script')){\n    defer = function(id){\n      html.appendChild(document.createElement('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","var sid = 0;\nfunction uid(key){\n  return 'Symbol(' + key + ')_' + (++sid + Math.random()).toString(36);\n}\nuid.safe = require('./$').g.Symbol || uid;\nmodule.exports = uid;","// 22.1.3.31 Array.prototype[@@unscopables]\nvar $           = require('./$')\n  , UNSCOPABLES = require('./$.wks')('unscopables');\nif($.FW && !(UNSCOPABLES in []))$.hide(Array.prototype, UNSCOPABLES, {});\nmodule.exports = function(key){\n  if($.FW)[][UNSCOPABLES][key] = true;\n};","var global = require('./$').g\n  , store  = {};\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    global.Symbol && global.Symbol[name] || require('./$.uid').safe('Symbol.' + name));\n};","var $          = require('./$')\n  , setUnscope = require('./$.unscope')\n  , ITER       = require('./$.uid').safe('iter')\n  , $iter      = require('./$.iter')\n  , step       = $iter.step\n  , Iterators  = $iter.Iterators;\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\n$iter.std(Array, 'Array', function(iterated, kind){\n  $.set(this, ITER, {o: $.toObject(iterated), i: 0, k: kind});\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , kind  = iter.k\n    , index = iter.i++;\n  if(!O || index >= O.length){\n    iter.o = undefined;\n    return step(1);\n  }\n  if(kind == 'key'  )return step(0, index);\n  if(kind == 'value')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'value');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\nsetUnscope('keys');\nsetUnscope('values');\nsetUnscope('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $       = require('./$')\n  , ctx     = require('./$.ctx')\n  , cof     = require('./$.cof')\n  , $def    = require('./$.def')\n  , assert  = require('./$.assert')\n  , $iter   = require('./$.iter')\n  , SPECIES = require('./$.wks')('species')\n  , RECORD  = require('./$.uid').safe('record')\n  , forOf   = $iter.forOf\n  , PROMISE = 'Promise'\n  , global  = $.g\n  , process = global.process\n  , asap    = process && process.nextTick || require('./$.task').set\n  , P       = global[PROMISE]\n  , Base    = P\n  , isFunction     = $.isFunction\n  , isObject       = $.isObject\n  , assertFunction = assert.fn\n  , assertObject   = assert.obj\n  , test;\n\n// helpers\nfunction getConstructor(C){\n  var S = assertObject(C)[SPECIES];\n  return S != undefined ? S : C;\n}\nfunction isThenable(it){\n  var then;\n  if(isObject(it))then = it.then;\n  return isFunction(then) ? then : false;\n}\nfunction isUnhandled(promise){\n  var record = promise[RECORD]\n    , chain  = record.c\n    , i      = 0\n    , react;\n  if(record.h)return false;\n  while(chain.length > i){\n    react = chain[i++];\n    if(react.fail || !isUnhandled(react.P))return false;\n  } return true;\n}\nfunction notify(record, isReject){\n  var chain = record.c;\n  if(isReject || chain.length)asap(function(){\n    var promise = record.p\n      , value   = record.v\n      , ok      = record.s == 1\n      , i       = 0;\n    if(isReject && isUnhandled(promise)){\n      setTimeout(function(){\n        if(isUnhandled(promise)){\n          if(cof(process) == 'process'){\n            process.emit('unhandledRejection', value, promise);\n          } else if(global.console && isFunction(console.error)){\n            console.error('Unhandled promise rejection', value);\n          }\n        }\n      }, 1e3);\n    } else while(chain.length > i)!function(react){\n      var cb = ok ? react.ok : react.fail\n        , ret, then;\n      try {\n        if(cb){\n          if(!ok)record.h = true;\n          ret = cb === true ? value : cb(value);\n          if(ret === react.P){\n            react.rej(TypeError(PROMISE + '-chain cycle'));\n          } else if(then = isThenable(ret)){\n            then.call(ret, react.res, react.rej);\n          } else react.res(ret);\n        } else react.rej(value);\n      } catch(err){\n        react.rej(err);\n      }\n    }(chain[i++]);\n    chain.length = 0;\n  });\n}\nfunction $reject(value){\n  var record = this;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  record.v = value;\n  record.s = 2;\n  notify(record, true);\n}\nfunction $resolve(value){\n  var record = this\n    , then, wrapper;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  try {\n    if(then = isThenable(value)){\n      wrapper = {r: record, d: false}; // wrap\n      then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n    } else {\n      record.v = value;\n      record.s = 1;\n      notify(record);\n    }\n  } catch(err){\n    $reject.call(wrapper || {r: record, d: false}, err); // wrap\n  }\n}\n\n// constructor polyfill\nif(!(isFunction(P) && isFunction(P.resolve) && P.resolve(test = new P(function(){})) == test)){\n  // 25.4.3.1 Promise(executor)\n  P = function Promise(executor){\n    assertFunction(executor);\n    var record = {\n      p: assert.inst(this, P, PROMISE),       // <- promise\n      c: [],                                  // <- chain\n      s: 0,                                   // <- state\n      d: false,                               // <- done\n      v: undefined,                           // <- value\n      h: false                                // <- handled rejection\n    };\n    $.hide(this, RECORD, record);\n    try {\n      executor(ctx($resolve, record, 1), ctx($reject, record, 1));\n    } catch(err){\n      $reject.call(record, err);\n    }\n  };\n  $.mix(P.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var S = assertObject(assertObject(this).constructor)[SPECIES];\n      var react = {\n        ok:   isFunction(onFulfilled) ? onFulfilled : true,\n        fail: isFunction(onRejected)  ? onRejected  : false\n      };\n      var promise = react.P = new (S != undefined ? S : P)(function(res, rej){\n        react.res = assertFunction(res);\n        react.rej = assertFunction(rej);\n      });\n      var record = this[RECORD];\n      record.c.push(react);\n      record.s && notify(record);\n      return promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n}\n\n// export\n$def($def.G + $def.W + $def.F * (P != Base), {Promise: P});\ncof.set(P, PROMISE);\nrequire('./$.species')(P);\n\n// statics\n$def($def.S, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    return new (getConstructor(this))(function(res, rej){\n      rej(r);\n    });\n  },\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    return isObject(x) && RECORD in x && $.getProto(x) === this.prototype\n      ? x : new (getConstructor(this))(function(res){\n        res(x);\n      });\n  }\n});\n$def($def.S + $def.F * !require('./$.iter-detect')(function(iter){\n  P.all(iter)['catch'](function(){});\n}), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C      = getConstructor(this)\n      , values = [];\n    return new C(function(res, rej){\n      forOf(iterable, false, values.push, values);\n      var remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        C.resolve(promise).then(function(value){\n          results[index] = value;\n          --remaining || res(results);\n        }, rej);\n      });\n      else res(results);\n    });\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C = getConstructor(this);\n    return new C(function(res, rej){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(res, rej);\n      });\n    });\n  }\n});","var set   = require('./$').set\n  , at    = require('./$.string-at')(true)\n  , ITER  = require('./$.uid').safe('iter')\n  , $iter = require('./$.iter')\n  , step  = $iter.step;\n\n// 21.1.3.27 String.prototype[@@iterator]()\n$iter.std(String, 'String', function(iterated){\n  set(this, ITER, {o: String(iterated), i: 0});\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , index = iter.i\n    , point;\n  if(index >= O.length)return step(1);\n  point = at.call(O, index);\n  iter.i += point.length;\n  return step(0, point);\n});","require('./es6.array.iterator');\nvar $           = require('./$')\n  , Iterators   = require('./$.iter').Iterators\n  , ITERATOR    = require('./$.wks')('iterator')\n  , ArrayValues = Iterators.Array\n  , NodeList    = $.g.NodeList;\nif($.FW && NodeList && !(ITERATOR in NodeList.prototype)){\n  $.hide(NodeList.prototype, ITERATOR, ArrayValues);\n}\nIterators.NodeList = ArrayValues;","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar ObjectObserver = (window.ObjectObserver);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nfunction fromDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction modifyList(bean, attribute, from, count, newElements) {\n    var list = bean[attribute];\n    if (!exists(list)) {\n        bean[attribute] = list = [];\n    } else if (!Array.isArray(list)) {\n        bean[attribute] = list = [list];\n    }\n    if (typeof newElements === 'undefined') {\n        list.splice(from, count);\n    } else {\n        list.splice(from, count, newElements);\n    }\n}\n\n\nfunction ClassRepository() {\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n}\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return attribute.tag === opendolphin.Tag.value();\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                bean[attribute.propertyName] = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n            }\n        });\n    });\n    var observer = new ObjectObserver(bean);\n    observer.open(function (added, removed, changed) {\n        Object.keys(added).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], added[property]);\n                attribute.setValue(value);\n            }\n        });\n        Object.keys(removed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                attribute.setValue(null);\n            }\n        });\n        Object.keys(changed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], changed[property]);\n                attribute.setValue(value);\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 0, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            modifyList(bean, attribute.value, from.value, to.value - from.value);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 1, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar ObjectObserver = (window.ObjectObserver);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return value === null? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object'? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            handler(type, bean, propertyName, [], undefined);\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    var modelId = this.beanToDolphin.get(bean);\n    var model = this.dolphin.findPresentationModelById(modelId);\n    var classInfo = this.classes.get(model.presentationModelType);\n    var type = classInfo[propertyName];\n    var attribute = model.findAttributeByPropertyName(propertyName);\n    var oldValue = attribute.getValue();\n    attribute.setValue(toDolphin(this, newValue));\n    return fromDolphin(this, type, oldValue);\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (Array.isArray(removedElements) && removedElements.length > 0) {\n        sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n    }\n    for (var i = index; i < index + count; i++) {\n        sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n    }\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(_this, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n                _this.propertyUpdateHandlers.forEach(function(handler) {\n                    handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 0, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, from.value, to.value - from.value);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 1, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\n\n\n\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n"],"sourceRoot":"/source/"}