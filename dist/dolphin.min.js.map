{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/dolphin.js","dolphin.min.js","bower_components/core.js/library/fn/map.js","bower_components/core.js/library/modules/$.assert.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.def.js","bower_components/core.js/library/modules/$.fw.js","bower_components/core.js/library/modules/$.iter-detect.js","bower_components/core.js/library/modules/$.iter.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.species.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.unscope.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/observe-js/src/observe.js","src/classrepo.js","src/polyfills.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"onModelAdded","model","type","presentationModelType","DOLPHIN_BEAN","classRepository","registerClass","DOLPHIN_LIST_ADD_FROM_SERVER","addListEntry","getClientModelStore","deletePresentationModel","DOLPHIN_LIST_DEL_FROM_SERVER","delListEntry","DOLPHIN_LIST_SET_FROM_SERVER","setListEntry","DOLPHIN_LIST_ADD_FROM_CLIENT","DOLPHIN_LIST_DEL_FROM_CLIENT","DOLPHIN_LIST_SET_FROM_CLIENT","bean","load","handlerList","addedHandlers","get","exists","forEach","handler","allAddedHandlers","onModelRemoved","unregisterClass","unload","removedHandlers","allRemovedHandlers","Dolphin","url","config","_this","observeInterval","opendolphin","serverPush","startPushListening","ClassRepository","Map","setInterval","Platform","performMicrotaskCheckpoint","onModelStoreChange","event","clientPresentationModel","eventType","Type","ADDED","REMOVED","connect","prototype","isManaged","create","add","addAll","collection","remove","removeAll","removeIf","predicate","onAdded","eventHandler","set","push","onRemoved","send","command","params","attributes","prop","hasOwnProperty","param","mapParamToDolphin","attribute","value","presentationModel","apply","concat","./classrepo.js","./polyfills.js","./utils.js",2,"core","../modules/$","../modules/es6.map","../modules/es6.string.iterator","../modules/web.dom.iterable",3,"assert","condition","msg1","msg2","TypeError","$","def","assertDefined","fn","it","isFunction","obj","isObject","inst","Constructor","name","./$",4,"cof","toString","slice","TAG","classof","O","T","undefined","Object","tag","stat","has","hide","./$.wks",5,"fastKey","isFrozen","ID","id","getEntry","that","key","entry","index","O1","FIRST","k","ctx","safe","$iter","step","LAST","ITER","SIZE","DESC","getConstructor","NAME","IS_MAP","ADDER","C","iterable","forOf","mix","clear","data","p","delete","next","prev","callbackfn","arguments","v","setDesc","getIterConstructor","iterated","kind","iter","./$.assert","./$.ctx","./$.iter","./$.uid",6,"$def","assertInstance","methods","common","isWeak","fixMethod","KEY","CHAIN","method","proto","FW","b","result","Base","BUGGY","entries","buggyZero","chain","constructor","val","Infinity","G","W","F","std","./$.cof","./$.def","./$.iter-detect","./$.species",7,"assertFunction","c",8,"source","own","out","exp","isGlobal","target","S","B","P","Function",9,"path",10,"SYMBOL_ITERATOR","SAFE_CLOSING","riter","Array","from","exec","arr",11,"setIterator","FF_ITERATOR","defineIterator","DEFAULT","iterProto","getProto","Iterators","getIterator","Symbol","ext","iterator","getIter","assertObject","closeIterator","ret","stepCall","IteratorPrototype","keys","done","close","is","SYM","desc","IS_SET","FORCE","createIter","values",12,"toInteger","isNaN","floor","ceil","bitmap","enumerable","configurable","writable","simpleSet","object","createDefiner","defineProperty","Math","max","min","html","document","documentElement","toLength","toIndex","getPrototypeOf","getDesc","getOwnPropertyDescriptor","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","ES5Object","toObject","src","each","__e","__g","./$.fw",13,14,"TO_STRING","pos","String","charCodeAt","charAt",15,"uid","sid","random",16,"UNSCOPABLES",17,"store",18,"setUnscope","Arguments","./$.unscope",19,"strong","./$.collection","./$.collection-strong",20,"at","point","./$.string-at",21,"ITERATOR","ArrayValues","NodeList","./es6.array.iterator",22,"detectObjectObserve","callback","recs","records","observe","test","deliverChangeRecords","unobserve","detectEval","chrome","app","runtime","navigator","getDeviceStorage","ex","isIndex","toNumber","areSameValue","left","right","numberIsNaN","getPathCharType","char","noop","parsePath","maybeUnescapeQuote","nextChar","mode","newChar","actions","append","transition","action","typeMap","pathStateMachine","isIdent","identRegExp","Path","parts","privateToken","constructorIsPrivate","hasEval","getValueFrom","compiledGetValueFromFn","getPath","pathString","pathCache","invalidPath","formatAccessor","replace","dirtyCheck","observer","cycles","MAX_DIRTY_CHECK_CYCLES","check_","testingExposeCycleCount","dirtyCheckCycleCount","objectIsEmpty","diffIsEmpty","diff","added","removed","changed","diffObjectFromOldObject","oldObject","newValue","isArray","runEOMTasks","eomTasks","newObservedObject","state_","OPENED","discardRecords","first","open","obs","arrayObserve","deliver","discard","observedObjectCache","getObservedObject","dir","pop","newObservedSet","rootObj","rootObjProps","objects","indexOf","allRootObjNonObservedProps","rec","observers","iterateObjects_","observerCount","record",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":46662,"endcol":20,"endline":1584,"pos":46652,"col":10,"line":1584,"value":"rootObject","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":46662,"endcol":20,"endline":1584,"pos":46652,"col":10,"line":1584,"value":"rootObject","type":"name"},"name":"rootObject"},"rootObject","Observer","unobservedCount","observedSetCache","lastObservedSet","getObservedSet","UNOPENED","callback_","target_","directObserver_","value_","id_","nextObserverId","addToAll","_allObserversCount","collectObservers","allObservers","removeFromAll","ObjectObserver","oldObject_","ArrayObserver","array","PathObserver","object_","path_","CompoundObserver","reportChangesOnOpen","reportChangesOnOpen_","observed_","identFn","ObserverTransform","observable","getValueFn","setValueFn","dontPassThroughSet","observable_","getValueFn_","setValueFn_","dontPassThroughSet_","diffObjectFromChangeRecords","changeRecords","oldValues","expectedRecordTypes","oldValue","console","error","newSplice","addedCount","ArraySplice","calcSplices","current","currentStart","currentEnd","old","oldStart","oldEnd","arraySplice","intersect","start1","end1","start2","end2","mergeSplice","splices","splice","inserted","insertionOffset","intersectCount","deleteCount","prepend","offset","createInitialSplices","JSON","stringify","projectArraySplices","hasObserve","Number","createObject","__proto__","newObject","identStart","identPart","RegExp","beforePath","ws","ident","[","eof","inPath",".","beforeIdent","inIdent","0","number","beforeElement","'","\"","afterZero","]","inIndex","inSingleQuote","else","inDoubleQuote","afterElement","valid","directObserver","iterateObjects","str","setValueFrom","runEOM","Promise","resolve","then","CLOSED","RESETTING","connect_","disconnect_","report_","changes","_errorThrownDuringCallback","stack","discardChanges","runningMicrotaskCheckpoint","anyChanged","toCheck","clearObservers","copyObject","copy","skipChanges","property","applySplices","previous","spliceArgs","addIndex","setValue","observerSentinel","needsDirectObserver","addPath","addObserver","startReset","finishReset","observedCallback_","update","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcEditDistances","rowCount","columnCount","distances","j","equals","north","west","spliceOperationsFromEditDistances","edits","northWest","reverse","prefixCount","suffixCount","minLength","sharedPrefix","sharedSuffix","ops","oldIndex","searchLength","index1","index2","count","calculateSplices","currentValue","previousValue","expose","nodeType","runEOM_","observerSentinel_","hasObjectObserve",23,"fromDolphin","beanFromDolphin","toDolphin","beanToDolphin","modifyList","newElements","list","classes","classInfos","UNKNOWN","BASIC_TYPE","classInfo","propertyName","onValueChange","filter","Tag","findAttributeByPropertyName","element","to","../bower_components/core.js/library/fn/map","../bower_components/observe-js/src/observe.js",24,"thisArg","len","kValue","fun","res",25],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCEA,YAsBA,SAAA0B,GAAAjB,EAAAkB,GACA,GAAAC,GAAAD,EAAAE,qBACA,QAAAD,GACA,IAAAE,GACArB,EAAAsB,gBAAAC,cAAAL,EACA,MACA,KAAAM,GACAxB,EAAAsB,gBAAAG,aAAAP,GACAlB,EAAAA,QAAA0B,sBAAAC,wBAAAT,EACA,MACA,KAAAU,GACA5B,EAAAsB,gBAAAO,aAAAX,GACAlB,EAAAA,QAAA0B,sBAAAC,wBAAAT,EACA,MACA,KAAAY,GACA9B,EAAAsB,gBAAAS,aAAAb,GACAlB,EAAAA,QAAA0B,sBAAAC,wBAAAT,EACA,MACA,KAAAc,GACA,IAAAC,GACA,IAAAC,GAEA,KACA,SACA,GAAAC,GAAAnC,EAAAsB,gBAAAc,KAAAlB,GACAmB,EAAArC,EAAAsC,cAAAC,IAAApB,EACAqB,GAAAH,IACAA,EAAAI,QAAA,SAAAC,GACAA,EAAAP,KAGAnC,EAAA2C,iBAAAF,QAAA,SAAAC,GACAA,EAAAP,MAMA,QAAAS,GAAA5C,EAAAkB,GACA,GAAAC,GAAAD,EAAAE,qBACA,QAAAD,GACA,IAAAE,GACArB,EAAAsB,gBAAAuB,gBAAA3B,EACA,MACA,KAAAM,GACA,IAAAI,GACA,IAAAE,GACA,IAAAE,GACA,IAAAC,GACA,IAAAC,GAEA,KACA,SACA,GAAAC,GAAAnC,EAAAsB,gBAAAwB,OAAA5B,EACA,IAAAsB,EAAAL,GAAA,CACA,GAAAE,GAAArC,EAAA+C,gBAAAR,IAAApB,EACAqB,GAAAH,IACAA,EAAAI,QAAA,SAAAC,GACAA,EAAAP,KAGAnC,EAAAgD,mBAAAP,QAAA,SAAAC,GACAA,EAAAP,OAUA,QAAAc,GAAAC,EAAAC,GACA,GAAAC,GAAArD,KACAsD,EAAA,EACAtD,MAAAC,QAAAsD,YAAAtD,QAAAkD,GAAA,EAAA,GACAV,EAAAW,KACAA,EAAAI,YACAxD,KAAAC,QAAAwD,mBAAA,gCAAA,gCAEAL,EAAAE,kBACAA,EAAAF,EAAAE,kBAGAtD,KAAAuB,gBAAA,GAAAmC,GACA1D,KAAAuC,cAAA,GAAAoB,KACA3D,KAAAgD,gBAAA,GAAAW,KACA3D,KAAA4C,oBACA5C,KAAAiD,sBACAW,YAAAC,SAAAC,2BAAAR,GAEAtD,KAAAC,QAAA0B,sBAAAoC,mBAAA,SAAAC,GACA,GAAA7C,GAAA6C,EAAAC,uBACAD,GAAAE,YAAAX,YAAAY,KAAAC,MACAlD,EAAAmC,EAAAlC,GACA6C,EAAAE,YAAAX,YAAAY,KAAAE,SACAxB,EAAAQ,EAAAlC,KApHAT,EAAA,iBAEA,IAAA+B,GAAA/B,EAAA,cAAA+B,OACAiB,EAAAhD,EAAA,kBAAAgD,eAGAlE,GAAA8E,QAAA,SAAAnB,EAAAC,GACA,MAAA,IAAAF,GAAAC,EAAAC,GAIA,IAAA9B,GAAA,uBACAG,EAAA,+BACAI,EAAA,+BACAE,EAAA,+BACAE,EAAA,+BACAC,EAAA,+BACAC,EAAA,8BAyGAe,GAAAqB,UAAAC,UAAA,SAAApC,GAEA,KAAA,IAAAxB,OAAA,wBAIAsC,EAAAqB,UAAAE,OAAA,SAAArD,GAEA,KAAA,IAAAR,OAAA,wBAIAsC,EAAAqB,UAAAG,IAAA,SAAAtD,EAAAgB,GAEA,KAAA,IAAAxB,OAAA,wBAIAsC,EAAAqB,UAAAI,OAAA,SAAAvD,EAAAwD,GAEA,KAAA,IAAAhE,OAAA,wBAIAsC,EAAAqB,UAAAM,OAAA,SAAAzC,GAEA,KAAA,IAAAxB,OAAA,wBAIAsC,EAAAqB,UAAAO,UAAA,SAAAF,GAEA,KAAA,IAAAhE,OAAA,wBAIAsC,EAAAqB,UAAAQ,SAAA,SAAAC,GAEA,KAAA,IAAApE,OAAA,wBAIAsC,EAAAqB,UAAAU,QAAA,SAAA7D,EAAA8D,GAEA,GAAAzC,EAAAyC,GAEA,CACA,GAAA5C,GAAAtC,KAAAuC,cAAAC,IAAApB,EACAqB,GAAAH,KACAA,KACAtC,KAAAuC,cAAA4C,IAAA/D,EAAAkB,IAEAA,EAAA8C,KAAAF,OAPAlF,MAAA4C,iBAAAwC,KAAAhE,EAWA,OAAA,OAIA8B,EAAAqB,UAAAc,UAAA,SAAAjE,EAAA8D,GAEA,GAAAzC,EAAAyC,GAEA,CACA,GAAA5C,GAAAtC,KAAAgD,gBAAAR,IAAApB,EACAqB,GAAAH,KACAA,KACAtC,KAAAgD,gBAAAmC,IAAA/D,EAAAkB,IAEAA,EAAA8C,KAAAF,OAPAlF,MAAAiD,mBAAAmC,KAAAhE,EAWA,OAAA,OAIA8B,EAAAqB,UAAAe,KAAA,SAAAC,EAAAC,GACA,GAAA/C,EAAA+C,GAAA,CACA,GAAAC,KACA,KAAA,GAAAC,KAAAF,GACA,GAAAA,EAAAG,eAAAD,GAAA,CACA,GAAAE,GAAA5F,KAAAuB,gBAAAsE,kBAAAL,EAAAE,GACAD,GAAAL,KAAApF,KAAAC,QAAA6F,UAAAJ,EAAA,KAAAE,EAAAG,MAAA,UACAN,EAAAL,KAAApF,KAAAC,QAAA6F,UAAAJ,EAAA,KAAAE,EAAAxE,KAAA,eAGApB,KAAAC,QAAA+F,kBAAAC,MAAAjG,KAAAC,SAAA,KAAA,6BAAAiG,OAAAT,IAKA,MAHAzF,MAAAC,QAAAqF,KAAAC,GAGA,QCIGY,iBAAiB,GAAGC,iBAAiB,GAAGC,aAAa,KAAKC,GAAG,SAAS5F,EAAQjB,EAAOD,GC/NxFkB,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAjB,EAAAD,QAAAkB,EAAA,gBAAA6F,KAAA5C,MDiOG6C,eAAe,GAAGC,qBAAqB,GAAGC,iCAAiC,GAAGC,8BAA8B,KAAKC,GAAG,SAASlG,EAAQjB,EAAOD,GEnO/I,QAAAqH,GAAAC,EAAAC,EAAAC,GACA,IAAAF,EAAA,KAAAG,WAAAD,EAAAD,EAAAC,EAAAD,GAFA,GAAAG,GAAAxG,EAAA,MAIAmG,GAAAM,IAAAD,EAAAE,cACAP,EAAAQ,GAAA,SAAAC,GACA,IAAAJ,EAAAK,WAAAD,GAAA,KAAAL,WAAAK,EAAA,sBACA,OAAAA,IAEAT,EAAAW,IAAA,SAAAF,GACA,IAAAJ,EAAAO,SAAAH,GAAA,KAAAL,WAAAK,EAAA,qBACA,OAAAA,IAEAT,EAAAa,KAAA,SAAAJ,EAAAK,EAAAC,GACA,KAAAN,YAAAK,IAAA,KAAAV,WAAAW,EAAA,4BACA,OAAAN,IAEA7H,EAAAD,QAAAqH,IFsOGgB,MAAM,KAAKC,GAAG,SAASpH,EAAQjB,EAAOD,GGpPzC,QAAAuI,GAAAT,GACA,MAAAU,GAAAjH,KAAAuG,GAAAW,MAAA,EAAA,IAJA,GAAAf,GAAAxG,EAAA,OACAwH,EAAAxH,EAAA,WAAA,eACAsH,KAAAA,QAIAD,GAAAI,QAAA,SAAAb,GACA,GAAAc,GAAAC,CACA,OAAAC,SAAAhB,EAAAgB,SAAAhB,EAAA,YAAA,OACA,iBAAAe,GAAAD,EAAAG,OAAAjB,IAAAY,IAAAG,EAAAN,EAAAK,IAEAL,EAAA5C,IAAA,SAAAmC,EAAAkB,EAAAC,GACAnB,IAAAJ,EAAAwB,IAAApB,EAAAmB,EAAAnB,EAAAA,EAAA/C,UAAA2D,IAAAhB,EAAAyB,KAAArB,EAAAY,EAAAM,IAEA/I,EAAAD,QAAAuI,IHyPGF,MAAM,GAAGe,UAAU,KAAKC,GAAG,SAASnI,EAAQjB,EAAOD,GIvQtD,YAoBA,SAAAsJ,GAAAxB,EAAA7C,GAEA,IAAAgD,EAAAH,GAAA,OAAA,gBAAAA,GAAA,IAAA,KAAAA,CAEA,IAAAyB,EAAAzB,GAAA,MAAA,GACA,KAAAoB,EAAApB,EAAA0B,GAAA,CAEA,IAAAvE,EAAA,MAAA,GAEAkE,GAAArB,EAAA0B,IAAAC,GAEA,MAAA,IAAA3B,EAAA0B,GAGA,QAAAE,GAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAR,EAAAM,EACA,IAAA,KAAAE,EAAA,MAAAH,GAAAI,GAAAD,EAEA,KAAAD,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAjJ,EACA,GAAAiJ,EAAAI,GAAAL,EAAA,MAAAC,GAvCA,GAAAnC,GAAAxG,EAAA,OACAgJ,EAAAhJ,EAAA,WACAiJ,EAAAjJ,EAAA,WAAAiJ,KACA9C,EAAAnG,EAAA,cACAkJ,EAAAlJ,EAAA,YACAgI,EAAAxB,EAAAwB,IACAvD,EAAA+B,EAAA/B,IACAsC,EAAAP,EAAAO,SACAkB,EAAAzB,EAAAyB,KACAkB,EAAAD,EAAAC,KACAd,EAAAR,OAAAQ,UAAA7B,EAAAX,KAAAgC,OAAAQ,SACAC,EAAAW,EAAA,MACAJ,EAAAI,EAAA,MACAG,EAAAH,EAAA,QACAH,EAAAG,EAAA,SACAI,EAAAJ,EAAA,QACAK,EAAA9C,EAAA+C,KAAAN,EAAA,QAAA,OACAV,EAAA,CA0BAxJ,GAAAD,SACA0K,eAAA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,GAAAC,GACA,GAAApB,GAAAtC,EAAAa,KAAA1H,KAAAsK,EAAAH,EACAhF,GAAAgE,EAAAI,EAAArC,EAAAzC,OAAA,OACAU,EAAAgE,EAAAa,EAAA,GACA7E,EAAAgE,EAAAW,EAAAxB,QACAnD,EAAAgE,EAAAK,EAAAlB,QACAA,QAAAiC,GAAAX,EAAAY,MAAAD,EAAAH,EAAAjB,EAAAkB,GAAAlB,GAqDA,MAnDAjC,GAAAuD,IAAAH,EAAA/F,WAGAmG,MAAA,WACA,IAAA,GAAAvB,GAAAnJ,KAAA2K,EAAAxB,EAAAI,GAAAF,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAjJ,EACAiJ,EAAAhJ,GAAA,EACAgJ,EAAAuB,IAAAvB,EAAAuB,EAAAvB,EAAAuB,EAAAxK,EAAAkI,cACAqC,GAAAtB,EAAA1I,EAEAwI,GAAAK,GAAAL,EAAAW,GAAAxB,OACAa,EAAAa,GAAA,GAIAa,SAAA,SAAAzB,GACA,GAAAD,GAAAnJ,KACAqJ,EAAAH,EAAAC,EAAAC,EACA,IAAAC,EAAA,CACA,GAAAyB,GAAAzB,EAAAjJ,EACA2K,EAAA1B,EAAAuB,QACAzB,GAAAI,GAAAF,EAAA1I,GACA0I,EAAAhJ,GAAA,EACA0K,IAAAA,EAAA3K,EAAA0K,GACAA,IAAAA,EAAAF,EAAAG,GACA5B,EAAAK,IAAAH,IAAAF,EAAAK,GAAAsB,GACA3B,EAAAW,IAAAT,IAAAF,EAAAW,GAAAiB,GACA5B,EAAAa,KACA,QAAAX,GAIA3G,QAAA,SAAAsI,GAGA,IAFA,GACA3B,GADA9J,EAAAmK,EAAAsB,EAAAC,UAAA,GAAA,GAEA5B,EAAAA,EAAAA,EAAAjJ,EAAAJ,KAAAwJ,IAGA,IAFAjK,EAAA8J,EAAA6B,EAAA7B,EAAAI,EAAAzJ,MAEAqJ,GAAAA,EAAAhJ,GAAAgJ,EAAAA,EAAAuB,GAKAlC,IAAA,SAAAU,GACA,QAAAF,EAAAlJ,KAAAoJ,MAGAlC,EAAA+C,MAAA/C,EAAAiE,QAAAb,EAAA/F,UAAA,QACA/B,IAAA,WACA,MAAAqE,GAAAM,IAAAnH,KAAAgK,OAGAM,GAEAnD,IAAA,SAAAgC,EAAAC,EAAArD,GACA,GACAgF,GAAAzB,EADAD,EAAAH,EAAAC,EAAAC,EAoBA,OAjBAC,GACAA,EAAA6B,EAAAnF,GAGAoD,EAAAW,GAAAT,GACA1I,EAAA2I,EAAAR,EAAAM,GAAA,GACAK,EAAAL,EACA8B,EAAAnF,EACA6E,EAAAG,EAAA5B,EAAAW,GACA1J,EAAAkI,OACAjI,GAAA,GAEA8I,EAAAK,KAAAL,EAAAK,GAAAH,GACA0B,IAAAA,EAAA3K,EAAAiJ,GACAF,EAAAa,KAEA,KAAAV,IAAAH,EAAAI,GAAAD,GAAAD,IACAF,GAEAD,SAAAA,EACAkC,mBAAA,WACA,MAAA,UAAAC,EAAAC,GACAnG,EAAAnF,KAAA+J,GAAAxJ,EAAA8K,EAAA5B,EAAA6B,MAGAR,KAAA,WAKA,IAJA,GAAAS,GAAAvL,KAAA+J,GACAuB,EAAAC,EAAA9B,EACAJ,EAAAkC,EAAAzK,EAEAuI,GAAAA,EAAAhJ,GAAAgJ,EAAAA,EAAAuB,CAEA,OAAAW,GAAAhL,IAAAgL,EAAAzK,EAAAuI,EAAAA,EAAAA,EAAAjJ,EAAAmL,EAAAhL,EAAAiJ,IAMA,OAAA8B,EAAAzB,EAAA,EAAAR,EAAAI,GACA,SAAA6B,EAAAzB,EAAA,EAAAR,EAAA6B,GACArB,EAAA,GAAAR,EAAAI,EAAAJ,EAAA6B,KANAK,EAAAhL,EAAA+H,OACAuB,EAAA,QJgRGhC,MAAM,GAAG2D,aAAa,EAAEC,UAAU,EAAEC,WAAW,GAAGC,UAAU,KAAKC,GAAG,SAASlL,EAAQjB,EAAOD,GKla/F,YACA,IAAA0H,GAAAxG,EAAA,OACAmL,EAAAnL,EAAA,WACAkJ,EAAAlJ,EAAA,YACAoL,EAAApL,EAAA,cAAAgH,IAEAjI,GAAAD,QAAA,SAAA2K,EAAA4B,EAAAC,EAAA5B,EAAA6B,GAMA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAH,EACAjF,GAAAqF,KAAAD,EAAAH,GAAA,SAAA1L,EAAA+L,GACA,GAAAC,GAAAJ,EAAAtL,KAAAf,KAAA,IAAAS,EAAA,EAAAA,EAAA+L,EACA,OAAAJ,GAAApM,KAAAyM,IATA,GAAAC,GAAAxF,EAAAtH,EAAAuK,GACAG,EAAAoC,EACArC,EAAAD,EAAA,MAAA,MACAkC,EAAAhC,GAAAA,EAAA/F,UACA6D,IAQA,IAAAlB,EAAAK,WAAA+C,KAAA2B,IAAArC,EAAA+C,OAAAL,EAAA5J,SAAA4J,EAAAM,SAIA,CACA,GAEAC,GAFAnF,EAAA,GAAA4C,GACAwC,EAAApF,EAAA2C,GAAA4B,MAAA,EAAA,EAGAvL,GAAA,mBAAA,SAAA6K,GAAA,GAAAjB,GAAAiB,OACAjB,EAAA,SAAAC,GACAuB,EAAA9L,KAAAsK,EAAAH,EACA,IAAAhB,GAAA,GAAAuD,EAEA,OADApE,SAAAiC,GAAAX,EAAAY,MAAAD,EAAAH,EAAAjB,EAAAkB,GAAAlB,GACAA,GAEAmB,EAAA/F,UAAA+H,EACApF,EAAAqF,KAAAD,EAAAS,YAAAzC,IAEA2B,GAAAvE,EAAAhF,QAAA,SAAAsK,EAAA5D,GACAyD,EAAA,EAAAzD,MAAA6D,EAAAA,KAGAJ,IACAX,EAAA,UACAA,EAAA,OACA9B,GAAA8B,EAAA,SAGAW,GAAAC,IAAApF,IAAAwE,EAAA7B,GAAA,OA3BAC,GAAA0B,EAAA9B,eAAAC,EAAAC,EAAAC,GACAnD,EAAAuD,IAAAH,EAAA/F,UAAAwH,EA2CA,OAdArL,GAAA,WAAAyE,IAAAmF,EAAAH,GACAzJ,EAAA,eAAA4J,GAEAlC,EAAA+B,GAAAG,EACAuB,EAAAA,EAAAqB,EAAArB,EAAAsB,EAAAtB,EAAAuB,GAAA9C,GAAAoC,GAAAtE,GAIA6D,GAAArC,EAAAyD,IACA/C,EAAAH,EACA6B,EAAAZ,qBAAAY,EAAAlB,KACAV,EAAA,YAAA,SAAAA,GAAA,GAGAE,KLqaGzC,MAAM,GAAG2D,aAAa,EAAE8B,UAAU,EAAEC,UAAU,EAAE7B,WAAW,GAAG8B,kBAAkB,GAAGC,cAAc,KAAKC,GAAG,SAAShN,EAAQjB,EAAOD,GMrepI,GAAAmO,GAAAjN,EAAA,cAAA2G,EACA5H,GAAAD,QAAA,SAAA6H,EAAA8B,EAAAnI,GAEA,GADA2M,EAAAtG,IACArG,GAAAsH,SAAAa,EAAA,MAAA9B,EACA,QAAArG,GACA,IAAA,GAAA,MAAA,UAAAP,GACA,MAAA4G,GAAAtG,KAAAoI,EAAA1I,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAA+L,GACA,MAAAnF,GAAAtG,KAAAoI,EAAA1I,EAAA+L,GAEA,KAAA,GAAA,MAAA,UAAA/L,EAAA+L,EAAAoB,GACA,MAAAvG,GAAAtG,KAAAoI,EAAA1I,EAAA+L,EAAAoB,IAEA,MAAA,YACA,MAAAvG,GAAApB,MAAAkD,EAAA8B,eN0eGO,aAAa,IAAIqC,GAAG,SAASnN,EAAQjB,EAAOD,GOtf/C,QAAAkK,GAAArC,EAAA8B,GACA,MAAA,YACA,MAAA9B,GAAApB,MAAAkD,EAAA8B,YAUA,QAAAY,GAAAzK,EAAAwG,EAAAkG,GACA,GAAA1E,GAAA2E,EAAAC,EAAAC,EACAC,EAAA9M,EAAAyK,EAAAqB,EACAiB,EAAAD,EAAApO,EAAAsB,EAAAyK,EAAAuC,EACAtO,EAAA8H,IAAA9H,EAAA8H,QAAArD,UACA/E,EAAA0O,EAAA3H,EAAAA,EAAAqB,KAAArB,EAAAqB,MACAsG,KAAAJ,EAAAlG,EACA,KAAAwB,IAAA0E,GAEAC,IAAA3M,EAAAyK,EAAAuB,IAAAe,GAAA/E,IAAA+E,GACAJ,GAAA3E,IAAA5J,KAEAwO,EAAAD,EAAAI,EAAA/E,GAAA0E,EAAA1E,GAEA8E,IAAA3G,EAAA4G,EAAA/E,IAAA6E,EAAAH,EAAA1E,GAEAhI,EAAAyK,EAAAwC,GAAAN,EAAAE,EAAAvE,EAAAsE,EAAAlO,GAEAsB,EAAAyK,EAAAsB,GAAAgB,EAAA/E,IAAA4E,GAAA,SAAA1D,GACA2D,EAAA,SAAArI,GACA,MAAA5F,gBAAAsK,GAAA,GAAAA,GAAA1E,GAAA0E,EAAA1E,IAEAqI,EAAA1J,UAAA+F,EAAA/F,WACAyJ,GACAC,EAAA7M,EAAAyK,EAAAyC,GAAA/G,EAAAyG,GAAAtE,EAAA6E,SAAAxN,KAAAiN,GAAAA,EAEA9G,EAAAyB,KAAAnJ,EAAA4J,EAAA6E,IA1CA,GAAA/G,GAAAxG,EAAA,OACAZ,EAAAoH,EAAAtH,EACA2G,EAAAW,EAAAX,KACAgB,EAAAL,EAAAK,UAOAsE,GAAAuB,EAAA,EACAvB,EAAAqB,EAAA,EACArB,EAAAuC,EAAA,EACAvC,EAAAyC,EAAA,EACAzC,EAAAwC,EAAA,GACAxC,EAAAsB,EAAA,GA8BA1N,EAAAD,QAAAqM,IP4fGhE,MAAM,KAAK2G,GAAG,SAAS9N,EAAQjB,EAAOD,GQziBzCC,EAAAD,QAAA,SAAA0H,GAGA,MAFAA,GAAAqF,IAAA,EACArF,EAAAuH,KAAAvH,EAAAX,KACAW,QR4iBMwH,IAAI,SAAShO,EAAQjB,EAAOD,GS/iBlC,GAAAmP,GAAAjO,EAAA,WAAA,YACAkO,GAAA,CACA,KACA,GAAAC,IAAA,GAAAF,IACAE,GAAA,UAAA,WAAAD,GAAA,GACAE,MAAAC,KAAAF,EAAA,WAAA,KAAA,KACA,MAAA3O,IACAT,EAAAD,QAAA,SAAAwP,GACA,IAAAJ,EAAA,OAAA,CACA,IAAAjF,IAAA,CACA,KACA,GAAAsF,IAAA,GACA1D,EAAA0D,EAAAN,IACApD,GAAAT,KAAA,WAAAnB,GAAA,GACAsF,EAAAN,GAAA,WAAA,MAAApD,IACAyD,EAAAC,GACA,MAAA/O,IACA,MAAAyJ,MTkjBGf,UAAU,KAAKsG,IAAI,SAASxO,EAAQjB,EAAOD,GUnkB9C,YAcA,SAAA2P,GAAA/G,EAAArC,GACAmB,EAAAyB,KAAAP,EAAAuG,EAAA5I,GAEAqJ,QAAAlI,EAAAyB,KAAAP,EAAAgH,EAAArJ,GAEA,QAAAsJ,GAAA1H,EAAAwC,EAAApE,EAAAuJ,GACA,GAAAhD,GAAA3E,EAAApD,UACAgH,EAAAe,EAAAqC,IAAArC,EAAA8C,IAAAE,GAAAhD,EAAAgD,IAAAvJ,CAGA,IADAmB,EAAAqF,IAAA4C,EAAA7C,EAAAf,GACAA,IAAAxF,EAAA,CACA,GAAAwJ,GAAArI,EAAAsI,SAAAjE,EAAAxK,KAAA,GAAA4G,IAEAI,GAAA5C,IAAAoK,EAAApF,EAAA,aAAA,GAEAjD,EAAAqF,IAAArF,EAAAwB,IAAA4D,EAAA8C,IAAAD,EAAAI,EAAArI,EAAAiC,MAMA,MAHAsG,GAAAtF,GAAAoB,EAEAkE,EAAAtF,EAAA,aAAAjD,EAAAiC,KACAoC,EAEA,QAAAmE,GAAApI,GACA,GAAAqI,GAAAzI,EAAAtH,EAAA+P,OACAC,EAAAtI,EAAAqI,GAAAA,EAAAE,UAAAT,GACAU,EAAAF,GAAAtI,EAAAqH,IAAAc,EAAA1H,EAAAI,QAAAb,GACA,OAAAyI,GAAAD,EAAA/O,KAAAuG,IAEA,QAAA0I,GAAAH,GACA,GAAAI,GAAAJ,EAAA,SACAvH,UAAA2H,GAAAF,EAAAE,EAAAlP,KAAA8O,IAEA,QAAAK,GAAAL,EAAAxI,EAAAtB,EAAA6G,GACA,IACA,MAAAA,GAAAvF,EAAA0I,EAAAhK,GAAA,GAAAA,EAAA,IAAAsB,EAAAtB,GACA,MAAA7F,GAEA,KADA8P,GAAAH,GACA3P,GAnDA,GAAAgH,GAAAxG,EAAA,OACAgJ,EAAAhJ,EAAA,WACAqH,EAAArH,EAAA,WACAmL,EAAAnL,EAAA,WACAqP,EAAArP,EAAA,cAAA8G,IACAmH,EAAAjO,EAAA,WAAA,YACA0O,EAAA,aACAK,KACAU,KAEAxD,EAAA,cAAA,WAAAyD,OAEAjB,GAAAgB,EAAAjJ,EAAAiC,KA0CA,IAAAS,GAAAnK,EAAAD,SACAmN,MAAAA,EACA8C,UAAAA,EACAlL,UAAA4L,EACAtG,KAAA,SAAAwG,EAAAtK,GACA,OAAAA,MAAAA,EAAAsK,OAAAA,IAEAH,SAAAA,EACAI,MAAAN,EACAO,GAAA,SAAAjJ,GACA,GAAAc,GAAAG,OAAAjB,GACAqI,EAAAzI,EAAAtH,EAAA+P,OACAa,EAAAb,GAAAA,EAAAE,UAAAT,CACA,OAAAoB,KAAApI,IAAAuG,IAAAvG,IAAAlB,EAAAwB,IAAA+G,EAAA1H,EAAAI,QAAAC,KAEA5F,IAAAkN,EACAvK,IAAAgK,EACA1K,OAAA,SAAAkD,EAAAwC,EAAAW,EAAAwB,GACA3E,EAAApD,UAAA2C,EAAAzC,OAAA6H,GAAA1C,EAAArF,WAAAuG,KAAA5D,EAAAuJ,KAAA,EAAA3F,KACA/C,EAAA5C,IAAAwC,EAAAwC,EAAA,cAEAzK,OAAA2P,EACAhC,IAAA,SAAAX,EAAAvC,EAAAxC,EAAAmD,EAAAwE,EAAAoB,EAAAC,GACA,QAAAC,GAAAtF,GACA,MAAA,YACA,MAAA,IAAA3D,GAAA3H,KAAAsL,IAGA1B,EAAAnF,OAAAkD,EAAAwC,EAAAW,EACA,IAGAiB,GAAA3C,EAHAwD,EAAAgE,EAAA,aACAC,EAAAD,EAAA,SACAtE,EAAAI,EAAAnI,SAIA,IAFA,SAAA+K,EAAAuB,EAAAxB,EAAA3C,EAAAvC,EAAA0G,EAAA,UACAjE,EAAAyC,EAAA3C,EAAAvC,EAAAyC,EAAA,WACA0C,IACAvD,GACAa,QAAAA,EACAwD,KAAAM,EAAAG,EAAAD,EAAA,OACAC,OAAAA,GAEAhF,EAAAA,EAAAyC,EAAAzC,EAAAuB,EAAAT,EAAAxC,EAAA4B,GACA4E,GAAA,IAAAvH,IAAA2C,GACA3C,IAAAkD,IAAApF,EAAAyB,KAAA2D,EAAAlD,EAAA2C,EAAA3C,KAIAoB,MAAA,SAAAD,EAAAqC,EAAAvF,EAAA8B,GAIA,IAHA,GAEAU,GAFAgG,EAAAH,EAAAnF,GACAhL,EAAAmK,EAAArC,EAAA8B,EAAAyD,EAAA,EAAA,KAEA/C,EAAAgG,EAAA/E,QAAAuF,MACA,GAAAH,EAAAL,EAAAtQ,EAAAsK,EAAA9D,MAAA6G,MAAA,EACA,MAAAoD,GAAAH,OVykBGhI,MAAM,GAAG2D,aAAa,EAAE8B,UAAU,EAAE7B,UAAU,EAAE8B,UAAU,EAAE3E,UAAU,KAAKkI,IAAI,SAASpQ,EAAQjB,EAAOD,GWrrB1G,YAiBA,SAAAuR,GAAAzJ,GACA,MAAA0J,OAAA1J,GAAAA,GAAA,GAAAA,EAAA,EAAA2J,EAAAC,GAAA5J,GAEA,QAAAmJ,GAAAU,EAAApL,GACA,OACAqL,aAAA,EAAAD,GACAE,eAAA,EAAAF,GACAG,WAAA,EAAAH,GACApL,MAAAA,GAGA,QAAAwL,GAAAC,EAAApI,EAAArD,GAEA,MADAyL,GAAApI,GAAArD,EACAyL,EAEA,QAAAC,GAAAN,GACA,MAAAlH,GAAA,SAAAuH,EAAApI,EAAArD,GACA,MAAAmB,GAAAiE,QAAAqG,EAAApI,EAAAqH,EAAAU,EAAApL,KACAwL,EAGA,QAAA9J,GAAAH,GACA,MAAA,QAAAA,IAAA,gBAAAA,IAAA,kBAAAA,IAEA,QAAAC,GAAAD,GACA,MAAA,kBAAAA,GAEA,QAAAF,GAAAE,GACA,GAAAgB,QAAAhB,EAAA,KAAAL,WAAA,yBAAAK,EACA,OAAAA,GA7CA,GAAAxH,GAAA,mBAAAC,MAAAA,KAAAwO,SAAA,iBACAhI,KACAmL,EAAAnJ,OAAAmJ,eACA/L,KAAAA,eACAuL,EAAAS,KAAAT,KACAD,EAAAU,KAAAV,MACAW,EAAAD,KAAAC,IACAC,EAAAF,KAAAE,IAEA5H,IAAA,WACA,IACA,MAAA,IAAAyH,KAAA,KAAAlP,IAAA,WAAA,MAAA,MAAA/B,EACA,MAAAP,QAEAyI,EAAA8I,EAAA,GAkCAvK,EAAAzH,EAAAD,QAAAkB,EAAA,WACAd,EAAAE,EACAyG,KAAAA,EACAuL,KAAAhS,EAAAiS,UAAAA,SAAAC,gBAEAvK,SAAAA,EACAF,WAAAA,EACAD,GAAA,SAAAA,GACA,MAAAA,IAEA6B,KAAA,WACA,MAAAnJ,OAGA+Q,UAAAA,EAEAkB,SAAA,SAAA3K,GACA,MAAAA,GAAA,EAAAuK,EAAAd,EAAAzJ,GAAA,kBAAA,GAEA4K,QAAA,SAAA5I,EAAAtI,GAEA,MADAsI,GAAAyH,EAAAzH,GACA,EAAAA,EAAAsI,EAAAtI,EAAAtI,EAAA,GAAA6Q,EAAAvI,EAAAtI,IAEA0H,IAAA,SAAApB,EAAA8B,GACA,MAAAzD,GAAA5E,KAAAuG,EAAA8B,IAEA3E,OAAA8D,OAAA9D,OACA+K,SAAAjH,OAAA4J,eACAlI,KAAAA,EACAwG,KAAAA,EACA2B,QAAA7J,OAAA8J,yBACAlH,QAAAuG,EACAY,QAAA/J,OAAA6H,KACAmC,SAAAhK,OAAAiK,oBACAC,WAAAlK,OAAAmK,sBAEAtL,cAAAA,EACAuL,UAAApK,OACAqK,SAAA,SAAAtL,GACA,MAAAJ,GAAAyL,UAAAvL,EAAAE,KAEAqB,KAAAA,EACAxB,IAAAsK,EAAA,GACAtM,IAAArF,EAAA6P,OAAA4B,EAAA5I,EACA8B,IAAA,SAAA0D,EAAA0E,GACA,IAAA,GAAAzJ,KAAAyJ,GAAAlK,EAAAwF,EAAA/E,EAAAyJ,EAAAzJ,GACA,OAAA+E,IAEA2E,QAAApQ,SAEA,oBAAAqQ,OAAAA,IAAAxM,GACA,mBAAAyM,OAAAA,IAAAlT,KXurBGmT,SAAS,IAAIC,IAAI,SAASxS,EAAQjB,EAAOD,GY3xB5C,GAAA0H,GAAAxG,EAAA,MACAjB,GAAAD,QAAA,SAAA8K,GACApD,EAAA+C,MAAA/C,EAAAqF,IAAArF,EAAAiE,QAAAb,EAAA5J,EAAA,WAAA,YACA2Q,cAAA,EACA7O,IAAA0E,EAAAiC,UZ+xBGtB,MAAM,GAAGe,UAAU,KAAKuK,IAAI,SAASzS,EAAQjB,EAAOD,GanyBvD,YAGA,IAAA0H,GAAAxG,EAAA,MACAjB,GAAAD,QAAA,SAAA4T,GACA,MAAA,UAAAC,GACA,GAGA5S,GAAA+L,EAHAlM,EAAAgT,OAAApM,EAAAE,cAAApH,OACAW,EAAAuG,EAAA6J,UAAAsC,GACAvS,EAAAR,EAAAU,MAEA,OAAA,GAAAL,GAAAA,GAAAG,EAAAsS,EAAA,GAAA9K,QACA7H,EAAAH,EAAAiT,WAAA5S,GACA,MAAAF,GAAAA,EAAA,OAAAE,EAAA,IAAAG,IACA0L,EAAAlM,EAAAiT,WAAA5S,EAAA,IAAA,OAAA6L,EAAA,MACA4G,EAAA9S,EAAAkT,OAAA7S,GAAAF,EACA2S,EAAA9S,EAAA2H,MAAAtH,EAAAA,EAAA,IAAAF,EAAA,OAAA,KAAA+L,EAAA,OAAA,WbuyBG3E,MAAM,KAAK4L,IAAI,SAAS/S,EAAQjB,EAAOD,GcrzB1C,QAAAkU,GAAAtK,GACA,MAAA,UAAAA,EAAA,QAAAuK,EAAAhC,KAAAiC,UAAA5L,SAAA,IAFA,GAAA2L,GAAA,CAIAD,GAAA/J,KAAAjJ,EAAA,OAAAd,EAAA+P,QAAA+D,EACAjU,EAAAD,QAAAkU,IdwzBG7L,MAAM,KAAKgM,IAAI,SAASnT,EAAQjB,EAAOD,Ge5zB1C,GAAA0H,GAAAxG,EAAA,OACAoT,EAAApT,EAAA,WAAA,gBACAwG,EAAAqF,IAAAuH,QAAA5M,EAAAyB,KAAAmG,MAAAvK,UAAAuP,MACArU,EAAAD,QAAA,SAAA4J,GACAlC,EAAAqF,QAAAuH,GAAA1K,IAAA,Mfg0BGvB,MAAM,GAAGe,UAAU,KAAKmL,IAAI,SAASrT,EAAQjB,EAAOD,GgBr0BvD,GAAAM,GAAAY,EAAA,OAAAd,EACAoU,IACAvU,GAAAD,QAAA,SAAAoI,GACA,MAAAoM,GAAApM,KAAAoM,EAAApM,GACA9H,EAAA6P,QAAA7P,EAAA6P,OAAA/H,IAAAlH,EAAA,WAAAiJ,KAAA,UAAA/B,OhBw0BGC,MAAM,GAAG8D,UAAU,KAAKsI,IAAI,SAASvT,EAAQjB,EAAOD,GiB50BvD,GAAA0H,GAAAxG,EAAA,OACAwT,EAAAxT,EAAA,eACAqJ,EAAArJ,EAAA,WAAAiJ,KAAA,QACAC,EAAAlJ,EAAA,YACAmJ,EAAAD,EAAAC,KACA4F,EAAA7F,EAAA6F,SAMA7F,GAAAyD,IAAAyB,MAAA,QAAA,SAAAzD,EAAAC,GACApE,EAAA/B,IAAAnF,KAAA+J,GAAAxJ,EAAA2G,EAAA0L,SAAAvH,GAAA1K,EAAA,EAAA8I,EAAA6B,KAEA,WACA,GAAAC,GAAAvL,KAAA+J,GACA3B,EAAAmD,EAAAhL,EACA+K,EAAAC,EAAA9B,EACAH,EAAAiC,EAAA5K,GACA,QAAAyH,GAAAkB,GAAAlB,EAAApH,QACAuK,EAAAhL,EAAA+H,OACAuB,EAAA,IAEA,OAAAyB,EAAAzB,EAAA,EAAAP,GACA,SAAAgC,EAAAzB,EAAA,EAAAzB,EAAAkB,IACAO,EAAA,GAAAP,EAAAlB,EAAAkB,MACA,SAGAmG,EAAA0E,UAAA1E,EAAAX,MAEAoF,EAAA,QACAA,EAAA,UACAA,EAAA,ajB80BGrM,MAAM,GAAG6D,WAAW,GAAGC,UAAU,GAAGyI,cAAc,KAAKC,IAAI,SAAS3T,EAAQjB,EAAOD,GkB/2BtF,YACA,IAAA8U,GAAA5T,EAAA,wBAGAA,GAAA,kBAAA,OAEA8B,IAAA,SAAA4G,GACA,GAAAC,GAAAiL,EAAApL,SAAAlJ,KAAAoJ,EACA,OAAAC,IAAAA,EAAA6B,GAGA/F,IAAA,SAAAiE,EAAArD,GACA,MAAAuO,GAAAnN,IAAAnH,KAAA,IAAAoJ,EAAA,EAAAA,EAAArD,KAEAuO,GAAA,KlBi3BGC,iBAAiB,EAAEC,wBAAwB,IAAIC,IAAI,SAAS/T,EAAQjB,EAAOD,GmB/3B9E,GAAA2F,GAAAzE,EAAA,OAAAyE,IACAuP,EAAAhU,EAAA,kBAAA,GACAqJ,EAAArJ,EAAA,WAAAiJ,KAAA,QACAC,EAAAlJ,EAAA,YACAmJ,EAAAD,EAAAC,IAGAD,GAAAyD,IAAAiG,OAAA,SAAA,SAAAjI,GACAlG,EAAAnF,KAAA+J,GAAAxJ,EAAA+S,OAAAjI,GAAA1K,EAAA,KAEA,WACA,GAGAgU,GAHApJ,EAAAvL,KAAA+J,GACA3B,EAAAmD,EAAAhL,EACA+I,EAAAiC,EAAA5K,CAEA,OAAA2I,IAAAlB,EAAApH,OAAA6I,EAAA,IACA8K,EAAAD,EAAA3T,KAAAqH,EAAAkB,GACAiC,EAAA5K,GAAAgU,EAAA3T,OACA6I,EAAA,EAAA8K,QnBk4BG9M,MAAM,GAAG6D,WAAW,GAAGkJ,gBAAgB,GAAGjJ,UAAU,KAAKkJ,IAAI,SAASnU,EAAQjB,EAAOD,GoBp5BxFkB,EAAA,uBACA,IAAAwG,GAAAxG,EAAA,OACA+O,EAAA/O,EAAA,YAAA+O,UACAqF,EAAApU,EAAA,WAAA,YACAqU,EAAAtF,EAAAX,MACAkG,EAAA9N,EAAAtH,EAAAoV,UACA9N,EAAAqF,KAAAyI,GAAAF,IAAAE,GAAAzQ,WACA2C,EAAAyB,KAAAqM,EAAAzQ,UAAAuQ,EAAAC,GAEAtF,EAAAuF,SAAAD,IpBs5BGlN,MAAM,GAAG6D,WAAW,GAAG9C,UAAU,GAAGqM,uBAAuB,KAAKC,IAAI,SAASxU,EAAQjB,EAAOD,IAC/F,SAAWM,IqBv5BX,SAAAA,GACA,YAKA,SAAAqV,KAQA,QAAAC,GAAAC,GACAC,EAAAD,EARA,GAAA,kBAAA9M,QAAAgN,SACA,kBAAAzG,OAAAyG,QACA,OAAA,CAGA,IAAAD,MAMAE,KACAvG,IAUA,OATA1G,QAAAgN,QAAAC,EAAAJ,GACAtG,MAAAyG,QAAAtG,EAAAmG,GACAI,EAAAvM,GAAA,EACAuM,EAAAvM,GAAA,QACAuM,GAAAvM,GACAgG,EAAA7J,KAAA,EAAA,GACA6J,EAAAjO,OAAA,EAEAuH,OAAAkN,qBAAAL,GACA,IAAAE,EAAAtU,QACA,EAEA,OAAAsU,EAAA,GAAAlU,MACA,UAAAkU,EAAA,GAAAlU,MACA,UAAAkU,EAAA,GAAAlU,MACA,UAAAkU,EAAA,GAAAlU,MACA,UAAAkU,EAAA,GAAAlU,MACA,GAGAmH,OAAAmN,UAAAF,EAAAJ,GACAtG,MAAA4G,UAAAzG,EAAAmG,IAEA,GAKA,QAAAO,KAGA,GAAA,mBAAAC,SAAAA,OAAAC,KAAAD,OAAAC,IAAAC,QACA,OAAA,CAMA,IAAA,mBAAAC,YAAAA,UAAAC,iBACA,OAAA,CAGA,KACA,GAAAzW,GAAA,GAAAgP,UAAA,GAAA,eACA,OAAAhP,KACA,MAAA0W,GACA,OAAA,GAMA,QAAAC,GAAA5V,GACA,OAAAA,IAAAA,IAAA,GAAA,KAAAA,EAGA,QAAA6V,GAAA7V,GACA,OAAAA,EAGA,QAAAmH,GAAAD,GACA,MAAAA,KAAAe,OAAAf,GAOA,QAAA4O,GAAAC,EAAAC,GACA,MAAAD,KAAAC,EACA,IAAAD,GAAA,EAAAA,IAAA,EAAAC,EACAC,EAAAF,IAAAE,EAAAD,IACA,EAEAD,IAAAA,GAAAC,IAAAA,EAqBA,QAAAE,GAAAC,GACA,GAAAnO,SAAAmO,EACA,MAAA,KAEA,IAAA5V,GAAA4V,EAAAlD,WAAA,EAEA,QAAA1S,GACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA4V,EAEA,KAAA,IACA,IAAA,IACA,MAAA,OAEA,KAAA,IACA,IAAA,GACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,OACA,IAAA,MACA,IAAA,MACA,MAAA,KAIA,MAAA5V,IAAA,IAAA,KAAAA,GAAAA,GAAA,IAAA,IAAAA,EACA,QAGAA,GAAA,IAAA,IAAAA,EACA,SAEA,OAuEA,QAAA6V,MAEA,QAAAC,GAAAlI,GAsBA,QAAAmI,KACA,KAAAtN,GAAAmF,EAAAzN,QAAA,CAGA,GAAA6V,GAAApI,EAAAnF,EAAA,EACA,OAAA,iBAAAwN,GAAA,KAAAD,GACA,iBAAAC,GAAA,KAAAD,GACAvN,IACAyN,EAAAF,EACAG,EAAAC,UACA,GALA,QASA,IAnCA,GAEArJ,GAAAmJ,EAAA3N,EAAAhI,EAAA8V,EAAAC,EAAAC,EAFAhH,KACA9G,EAAA,GACAwN,EAAA,aAEAE,GACA5R,KAAA,WACAkD,SAAAc,IAGAgH,EAAAhL,KAAAgE,GACAA,EAAAd,SAGA2O,OAAA,WACA3O,SAAAc,EACAA,EAAA2N,EAEA3N,GAAA2N,IAkBAD,GAIA,GAHAxN,IACAsE,EAAAa,EAAAnF,GAEA,MAAAsE,IAAAgJ,EAAAE,GAAA,CAOA,GAJA1V,EAAAoV,EAAA5I,GACAwJ,EAAAC,EAAAP,GACAI,EAAAE,EAAAhW,IAAAgW,EAAA,SAAA,QAEA,SAAAF,EACA,MAOA,IALAJ,EAAAI,EAAA,GACAC,EAAAH,EAAAE,EAAA,KAAAR,EACAK,EAAAzO,SAAA4O,EAAA,GAAAtJ,EAAAsJ,EAAA,GACAC,IAEA,cAAAL,EACA,MAAA1G,IAOA,QAAAkH,GAAAhX,GACA,MAAAiX,GAAA/B,KAAAlV,GAKA,QAAAkX,GAAAC,EAAAC,GACA,GAAAA,IAAAC,EACA,KAAA/W,OAAA,wCAEA,KAAA,GAAAD,GAAA,EAAAA,EAAA8W,EAAAzW,OAAAL,IACAX,KAAAoF,KAAAkO,OAAAmE,EAAA9W,IAGAiX,IAAA5X,KAAAgB,SACAhB,KAAA6X,aAAA7X,KAAA8X,0BAOA,QAAAC,GAAAC,GACA,GAAAA,YAAAR,GACA,MAAAQ,EAKA,KAHA,MAAAA,GAAA,GAAAA,EAAAhX,UACAgX,EAAA,IAEA,gBAAAA,GAAA,CACA,GAAA9B,EAAA8B,EAAAhX,QAEA,MAAA,IAAAwW,GAAAQ,EAAAL,EAGAK,GAAA1E,OAAA0E,GAGA,GAAAvJ,GAAAwJ,EAAAD,EACA,IAAAvJ,EACA,MAAAA,EAEA,IAAAgJ,GAAAd,EAAAqB,EACA,KAAAP,EACA,MAAAS,EAEA,IAAAzJ,GAAA,GAAA+I,GAAAC,EAAAE,EAEA,OADAM,GAAAD,GAAAvJ,EACAA,EAKA,QAAA0J,GAAA/O,GACA,MAAA8M,GAAA9M,GACA,IAAAA,EAAA,IAEA,KAAAA,EAAAgP,QAAA,KAAA,OAAA,KAqFA,QAAAC,GAAAC,GAEA,IADA,GAAAC,GAAA,EACAC,GAAAD,GAAAD,EAAAG,UACAF,GAKA,OAHAG,KACA5Y,EAAA6Y,qBAAAJ,GAEAA,EAAA,EAGA,QAAAK,GAAApH,GACA,IAAA,GAAA9L,KAAA8L,GACA,OAAA,CACA,QAAA,EAGA,QAAAqH,GAAAC,GACA,MAAAF,GAAAE,EAAAC,QACAH,EAAAE,EAAAE,UACAJ,EAAAE,EAAAG,SAGA,QAAAC,GAAA1H,EAAA2H,GACA,GAAAJ,MACAC,KACAC,IAEA,KAAA,GAAAvT,KAAAyT,GAAA,CACA,GAAAC,GAAA5H,EAAA9L,IAEA4C,SAAA8Q,GAAAA,IAAAD,EAAAzT,MAGAA,IAAA8L,GAKA4H,IAAAD,EAAAzT,KACAuT,EAAAvT,GAAA0T,GALAJ,EAAAtT,GAAA4C,QAQA,IAAA,GAAA5C,KAAA8L,GACA9L,IAAAyT,KAGAJ,EAAArT,GAAA8L,EAAA9L,GAMA,OAHAoJ,OAAAuK,QAAA7H,IAAAA,EAAAxQ,SAAAmY,EAAAnY,SACAiY,EAAAjY,OAAAwQ,EAAAxQ,SAGA+X,MAAAA,EACAC,QAAAA,EACAC,QAAAA,GAKA,QAAAK,KACA,IAAAC,GAAAvY,OACA,OAAA,CAEA,KAAA,GAAAL,GAAA,EAAAA,EAAA4Y,GAAAvY,OAAAL,IACA4Y,GAAA5Y,IAGA,OADA4Y,IAAAvY,OAAA,GACA,EAgBA,QAAAwY,KAMA,QAAApE,GAAAE,GACAgD,GAAAA,EAAAmB,SAAAC,KAAAC,GACArB,EAAAG,OAAAnD,GAPA,GAAAgD,GACA9G,EACAmI,GAAA,EACAC,GAAA,CAOA,QACAC,KAAA,SAAAC,GACA,GAAAxB,EACA,KAAA1X,OAAA,wBAEAgZ,IACArR,OAAAkN,qBAAAL,GAEAkD,EAAAwB,EACAF,GAAA,GAEArE,QAAA,SAAA/N,EAAAuS,GACAvI,EAAAhK,EACAuS,EACAjL,MAAAyG,QAAA/D,EAAA4D,GAEA7M,OAAAgN,QAAA/D,EAAA4D,IAEA4E,QAAA,SAAAC,GACAN,EAAAM,EACA1R,OAAAkN,qBAAAL,GACAuE,GAAA,GAEArJ,MAAA,WACAgI,EAAAhQ,OACAC,OAAAmN,UAAAlE,EAAA4D,GACA8E,GAAA9U,KAAApF,QA2BA,QAAAma,GAAA7B,EAAA9G,EAAAuI,GACA,GAAAK,GAAAF,GAAAG,OAAAb,GAGA,OAFAY,GAAAP,KAAAvB,GACA8B,EAAA7E,QAAA/D,EAAAuI,GACAK,EAKA,QAAAE,KAOA,QAAA/E,GAAA/N,EAAA9B,GACA8B,IAGAA,IAAA+S,IACAC,EAAA9U,IAAA,GAEA+U,EAAAC,QAAAlT,GAAA,IACAiT,EAAArV,KAAAoC,GACAe,OAAAgN,QAAA/N,EAAA4N,IAGAG,EAAAhN,OAAA4J,eAAA3K,GAAA9B,IAGA,QAAAiV,GAAAtF,GACA,IAAA,GAAA1U,GAAA,EAAAA,EAAA0U,EAAArU,OAAAL,IAAA,CACA,GAAAia,GAAAvF,EAAA1U,EACA,IAAAia,EAAApJ,SAAA+I,GACAC,EAAAI,EAAAhT,OACA,iBAAAgT,EAAAxZ,KACA,OAAA,EAGA,OAAA,EAGA,QAAAgU,GAAAC,GACA,IAAAsF,EAAAtF,GAAA,CAIA,IAAA,GADAiD,GACA3X,EAAA,EAAAA,EAAAka,EAAA7Z,OAAAL,IACA2X,EAAAuC,EAAAla,GACA2X,EAAAmB,QAAAC,IACApB,EAAAwC,gBAAAvF,EAIA,KAAA,GAAA5U,GAAA,EAAAA,EAAAka,EAAA7Z,OAAAL,IACA2X,EAAAuC,EAAAla,GACA2X,EAAAmB,QAAAC,IACApB,EAAAG,UAhDA,GAGA8B,GACAC,EAJAO,EAAA,EACAF,KACAJ,KAmDAO,GACAP,QAAAA,EACAQ,GAAAC,cAAA,MAAAX,IACAU,GAAAC,YAAAnV,GACAwU,EAAAxU,EACAyU,MAEAX,KAAA,SAAAC,EAAAtI,GACAqJ,EAAAzV,KAAA0U,GACAiB,IACAjB,EAAAgB,gBAAAvF,IAEAjF,MAAA,SAAAwJ,GAEA,GADAiB,MACAA,EAAA,GAAA,CAIA,IAAA,GAAApa,GAAA,EAAAA,EAAA8Z,EAAAzZ,OAAAL,IACA4H,OAAAmN,UAAA+E,EAAA9Z,GAAAyU,GACA+F,EAAAC,iBAGAP,GAAA7Z,OAAA,EACAyZ,EAAAzZ,OAAA,EACAuZ,EAAAjS,OACAkS,EAAAlS,OACA+S,GAAAjW,KAAApF,MACAsb,KAAAtb,OACAsb,GAAA,QAIA,OAAAN,GAKA,QAAAO,GAAAjD,EAAA9Q,GAMA,MALA8T,KAAAA,GAAAJ,aAAA1T,IACA8T,GAAAD,GAAAhB,OAAAC,IACAgB,GAAAJ,WAAA1T,GAEA8T,GAAAzB,KAAAvB,EAAA9Q,GACA8T,GAUA,QAAAH,KACAnb,KAAAyZ,OAAA+B,GACAxb,KAAAyb,UAAAnT,OACAtI,KAAA0b,QAAApT,OACAtI,KAAA2b,gBAAArT,OACAtI,KAAA4b,OAAAtT,OACAtI,KAAA6b,IAAAC,KA2DA,QAAAC,GAAAzD,GACA6C,EAAAa,qBACAC,IAGAC,GAAA9W,KAAAkT,GAGA,QAAA6D,GAAA7D,GACA6C,EAAAa,qBAmDA,QAAAI,GAAA5K,GACA2J,EAAApa,KAAAf,MACAA,KAAA4b,OAAApK,EACAxR,KAAAqc,WAAA/T,OA0FA,QAAAgU,GAAAC,GACA,IAAAzN,MAAAuK,QAAAkD,GACA,KAAA3b,OAAA,kCACAwb,GAAArb,KAAAf,KAAAuc,GAgDA,QAAAC,GAAAhL,EAAA/C,GACA0M,EAAApa,KAAAf,MAEAA,KAAAyc,QAAAjL,EACAxR,KAAA0c,MAAA3E,EAAAtJ,GACAzO,KAAA2b,gBAAArT,OA8CA,QAAAqU,GAAAC,GACAzB,EAAApa,KAAAf,MAEAA,KAAA6c,qBAAAD,EACA5c,KAAA4b,UACA5b,KAAA2b,gBAAArT,OACAtI,KAAA8c,aAgIA,QAAAC,GAAAhX,GAAA,MAAAA,GAEA,QAAAiX,GAAAC,EAAAC,EAAAC,EACAC,GACApd,KAAAyb,UAAAnT,OACAtI,KAAA0b,QAAApT,OACAtI,KAAA4b,OAAAtT,OACAtI,KAAAqd,YAAAJ,EACAjd,KAAAsd,YAAAJ,GAAAH,EACA/c,KAAAud,YAAAJ,GAAAJ,EAGA/c,KAAAwd,oBAAAJ,EAsDA,QAAAK,GAAAjM,EAAAkM,EAAAC,GAIA,IAAA,GAHA5E,MACAC,KAEArY,EAAA,EAAAA,EAAA+c,EAAA1c,OAAAL,IAAA,CACA,GAAAqa,GAAA0C,EAAA/c,EACAid,IAAA5C,EAAA5Z,OAMA4Z,EAAApT,OAAA+V,KACAA,EAAA3C,EAAApT,MAAAoT,EAAA6C,UAEA,UAAA7C,EAAA5Z,OAGA,OAAA4Z,EAAA5Z,KAUA4Z,EAAApT,OAAAmR,UACAA,GAAAiC,EAAApT,YACA+V,GAAA3C,EAAApT,OAEAoR,EAAAgC,EAAApT,OAAA,EAbAoT,EAAApT,OAAAoR,SACAA,GAAAgC,EAAApT,MAEAmR,EAAAiC,EAAApT,OAAA,KAfAkW,QAAAC,MAAA,8BAAA/C,EAAA5Z,MACA0c,QAAAC,MAAA/C,IA4BA,IAAA,GAAAtV,KAAAqT,GACAA,EAAArT,GAAA8L,EAAA9L,EAEA,KAAA,GAAAA,KAAAsT,GACAA,EAAAtT,GAAA4C,MAEA,IAAA2Q,KACA,KAAA,GAAAvT,KAAAiY,GACA,KAAAjY,IAAAqT,IAAArT,IAAAsT,IAAA,CAGA,GAAAI,GAAA5H,EAAA9L,EACAiY,GAAAjY,KAAA0T,IACAH,EAAAvT,GAAA0T,GAGA,OACAL,MAAAA,EACAC,QAAAA,EACAC,QAAAA,GAIA,QAAA+E,GAAA1U,EAAA0P,EAAAiF,GACA,OACA3U,MAAAA,EACA0P,QAAAA,EACAiF,WAAAA,GASA,QAAAC,MA0OA,QAAAC,GAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GACA,MAAAC,IAAAP,YAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GAGA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,MAAAD,GAAAD,GAAAD,EAAAG,EACA,GAGAF,GAAAC,GAAAC,GAAAH,EACA,EAGAE,EAAAF,EACAG,EAAAF,EACAA,EAAAC,EAEAC,EAAAD,EAGAD,EAAAE,EACAA,EAAAH,EAEAC,EAAAD,EAIA,QAAAI,GAAAC,EAAA3V,EAAA0P,EAAAiF,GAOA,IAAA,GALAiB,GAAAlB,EAAA1U,EAAA0P,EAAAiF,GAEAkB,GAAA,EACAC,EAAA,EAEAze,EAAA,EAAAA,EAAAse,EAAAje,OAAAL,IAAA,CACA,GAAAyd,GAAAa,EAAAte,EAGA,IAFAyd,EAAA9U,OAAA8V,GAEAD,EAAA,CAGA,GAAAE,GAAAV,EAAAO,EAAA5V,MACA4V,EAAA5V,MAAA4V,EAAAlG,QAAAhY,OACAod,EAAA9U,MACA8U,EAAA9U,MAAA8U,EAAAH,WAEA,IAAAoB,GAAA,EAAA,CAGAJ,EAAAC,OAAAve,EAAA,GACAA,IAEAye,GAAAhB,EAAAH,WAAAG,EAAApF,QAAAhY,OAEAke,EAAAjB,YAAAG,EAAAH,WAAAoB,CACA,IAAAC,GAAAJ,EAAAlG,QAAAhY,OACAod,EAAApF,QAAAhY,OAAAqe,CAEA,IAAAH,EAAAjB,YAAAqB,EAGA,CACA,GAAAtG,GAAAoF,EAAApF,OAEA,IAAAkG,EAAA5V,MAAA8U,EAAA9U,MAAA,CAEA,GAAAiW,GAAAL,EAAAlG,QAAA/Q,MAAA,EAAAmW,EAAA9U,MAAA4V,EAAA5V,MACAwF,OAAAvK,UAAAa,KAAAa,MAAAsZ,EAAAvG,GACAA,EAAAuG,EAGA,GAAAL,EAAA5V,MAAA4V,EAAAlG,QAAAhY,OAAAod,EAAA9U,MAAA8U,EAAAH,WAAA,CAEA,GAAAhH,GAAAiI,EAAAlG,QAAA/Q,MAAAmW,EAAA9U,MAAA8U,EAAAH,WAAAiB,EAAA5V,MACAwF,OAAAvK,UAAAa,KAAAa,MAAA+S,EAAA/B,GAGAiI,EAAAlG,QAAAA,EACAoF,EAAA9U,MAAA4V,EAAA5V,QACA4V,EAAA5V,MAAA8U,EAAA9U,WAnBA6V,IAAA,MAsBA,IAAAD,EAAA5V,MAAA8U,EAAA9U,MAAA,CAGA6V,GAAA,EAEAF,EAAAC,OAAAve,EAAA,EAAAue,GACAve,GAEA,IAAA6e,GAAAN,EAAAjB,WAAAiB,EAAAlG,QAAAhY,MACAod,GAAA9U,OAAAkW,EACAJ,GAAAI,IAIAL,GACAF,EAAA7Z,KAAA8Z,GAGA,QAAAO,GAAAlD,EAAAmB,GAGA,IAAA,GAFAuB,MAEAte,EAAA,EAAAA,EAAA+c,EAAA1c,OAAAL,IAAA,CACA,GAAAqa,GAAA0C,EAAA/c,EACA,QAAAqa,EAAA5Z,MACA,IAAA,SACA4d,EAAAC,EAAAjE,EAAA1R,MAAA0R,EAAAhC,QAAA/Q,QAAA+S,EAAAiD,WACA,MACA,KAAA,MACA,IAAA,SACA,IAAA,SACA,IAAA/H,EAAA8E,EAAApT,MACA,QACA,IAAA0B,GAAA6M,EAAA6E,EAAApT,KACA,IAAA,EAAA0B,EACA,QACA0V,GAAAC,EAAA3V,GAAA0R,EAAA6C,UAAA,EACA,MACA,SACAC,QAAAC,MAAA,2BAAA2B,KAAAC,UAAA3E,KAKA,MAAAiE,GAGA,QAAAW,GAAArD,EAAAmB,GACA,GAAAuB,KAcA,OAZAQ,GAAAlD,EAAAmB,GAAAhb,QAAA,SAAAwc,GACA,MAAA,IAAAA,EAAAjB,YAAA,GAAAiB,EAAAlG,QAAAhY,YACAke,EAAAlG,QAAA,KAAAuD,EAAA2C,EAAA5V,QACA2V,EAAA7Z,KAAA8Z,SAKAD,EAAAA,EAAA/Y,OAAAiY,EAAA5B,EAAA2C,EAAA5V,MAAA4V,EAAA5V,MAAA4V,EAAAjB,WACAiB,EAAAlG,QAAA,EAAAkG,EAAAlG,QAAAhY,YAGAie,EAloDA,GAAAvG,GAAA5Y,EAAA4Y,wBA2CAmH,EAAA1K,IAwBAyC,EAAAjC,IAcAY,EAAAzW,EAAAggB,OAAA9O,OAAA,SAAAjL,GACA,MAAA,gBAAAA,IAAAjG,EAAAkR,MAAAjL,IAYAga,EAAA,gBACA,SAAAvY,GAAA,MAAAA,IACA,SAAAA,GACA,GAAA8E,GAAA9E,EAAAwY,SACA,KAAA1T,EACA,MAAA9E,EACA,IAAAyY,GAAA1X,OAAA9D,OAAA6H,EAKA,OAJA/D,QAAAiK,oBAAAhL,GAAA9E,QAAA,SAAAkF,GACAW,OAAAmJ,eAAAuO,EAAArY,EACAW,OAAA8J,yBAAA7K,EAAAI,MAEAqY,GAGAC,EAAA,aACAC,EAAA,gBACA5I,EAAA,GAAA6I,QAAA,IAAAF,EAAA,IAAAC,EAAA,MA2CA9I,GACAgJ,YACAC,IAAA,cACAC,OAAA,UAAA,UACAC,KAAA,iBACAC,KAAA,cAGAC,QACAJ,IAAA,UACAK,KAAA,eACAH,KAAA,iBACAC,KAAA,cAGAG,aACAN,IAAA,eACAC,OAAA,UAAA,WAGAM,SACAN,OAAA,UAAA,UACAO,GAAA,UAAA,UACAC,QAAA,UAAA,UACAT,IAAA,SAAA,QACAK,KAAA,cAAA,QACAH,KAAA,gBAAA,QACAC,KAAA,YAAA,SAGAO,eACAV,IAAA,iBACAQ,GAAA,YAAA,UACAC,QAAA,UAAA,UACAE,KAAA,gBAAA,SAAA,IACAC,KAAA,gBAAA,SAAA,KAGAC,WACAb,IAAA,eAAA,QACAc,KAAA,SAAA,SAGAC,SACAP,GAAA,UAAA,UACAC,QAAA,UAAA,UACAT,IAAA,gBACAc,KAAA,SAAA,SAGAE,eACAL,KAAA,gBACAR,KAAA,SACAc,QAAA,gBAAA,WAGAC,eACAN,KAAA,gBACAT,KAAA,SACAc,QAAA,gBAAA,WAGAE,cACAnB,IAAA,gBACAc,KAAA,SAAA,UAyEAzJ,KAgBAM,IA+BAT,GAAAhV,IAAAuV,EAUAP,EAAAjT,UAAAwb,GACAC,aACA0B,OAAA,EAEA1Z,SAAA,WAEA,IAAA,GADAgQ,GAAA,GACArX,EAAA,EAAAA,EAAAX,KAAAgB,OAAAL,IAAA,CACA,GAAAyI,GAAApJ,KAAAW,EAEAqX,IADAV,EAAAlO,GACAzI,EAAA,IAAAyI,EAAAA,EAEA+O,EAAA/O,GAIA,MAAA4O,IAGAH,aAAA,SAAArQ,EAAAma,GACA,IAAA,GAAAhhB,GAAA,EAAAA,EAAAX,KAAAgB,OAAAL,IAAA,CACA,GAAA,MAAA6G,EACA,MACAA,GAAAA,EAAAxH,KAAAW,IAEA,MAAA6G,IAGAoa,eAAA,SAAApa,EAAA+N,GACA,IAAA,GAAA5U,GAAA,EAAAA,EAAAX,KAAAgB,OAAAL,IAAA,CAGA,GAFAA,IACA6G,EAAAA,EAAAxH,KAAAW,EAAA,MACA8G,EAAAD,GACA,MACA+N,GAAA/N,EAAAxH,KAAAW,MAIAmX,uBAAA,WACA,GAAA+J,GAAA,GACA7J,EAAA,KACA6J,IAAA,iBAGA,KAFA,GACAzY,GADAzI,EAAA,EAEAA,EAAAX,KAAAgB,OAAA,EAAAL,IACAyI,EAAApJ,KAAAW,GACAqX,GAAAV,EAAAlO,GAAA,IAAAA,EAAA+O,EAAA/O,GACAyY,GAAA,aAAA7J,EAAA,UAEA6J,IAAA,KAEA,IAAAzY,GAAApJ,KAAAW,EAIA,OAHAqX,IAAAV,EAAAlO,GAAA,IAAAA,EAAA+O,EAAA/O,GAEAyY,GAAA,YAAA7J,EAAA,+BACA,GAAAzJ,UAAA,MAAAsT,IAGAC,aAAA,SAAAta,EAAAzB,GACA,IAAA/F,KAAAgB,OACA,OAAA,CAEA,KAAA,GAAAL,GAAA,EAAAA,EAAAX,KAAAgB,OAAA,EAAAL,IAAA,CACA,IAAA8G,EAAAD,GACA,OAAA,CACAA,GAAAA,EAAAxH,KAAAW,IAGA,MAAA8G,GAAAD,IAGAA,EAAAxH,KAAAW,IAAAoF,GACA,IAHA,IAOA,IAAAmS,GAAA,GAAAV,GAAA,GAAAG,EACAO,GAAAwJ,OAAA,EACAxJ,EAAAL,aAAAK,EAAA4J,aAAA,YAEA,IA0PAxG,IA1PA9C,GAAA,IA8DAe,MAYAwI,GAAAlC,EAAA,WACA,MAAA,UAAAxY,GACA,MAAA2a,SAAAC,UAAAC,KAAA7a,OAGA,WACA,MAAA,UAAAA,GACAkS,GAAAnU,KAAAiC,OAIA6S,MAyEAmB,MAuGAG,GAAA,EACA9B,GAAA,EACAyI,GAAA,EACAC,GAAA,EAEAtG,GAAA,CAWAX,GAAA5W,WACAsV,KAAA,SAAAzE,EAAAjH,GACA,GAAAnO,KAAAyZ,QAAA+B,GACA,KAAA5a,OAAA,oCAOA,OALAmb,GAAA/b,MACAA,KAAAyb,UAAArG,EACApV,KAAA0b,QAAAvN,EACAnO,KAAAqiB,WACAriB,KAAAyZ,OAAAC,GACA1Z,KAAA4b,QAGAtL,MAAA,WACAtQ,KAAAyZ,QAAAC,KAGAyC,EAAAnc,MACAA,KAAAsiB,cACAtiB,KAAA4b,OAAAtT,OACAtI,KAAAyb,UAAAnT,OACAtI,KAAA0b,QAAApT,OACAtI,KAAAyZ,OAAA0I,KAGAnI,QAAA,WACAha,KAAAyZ,QAAAC,IAGArB,EAAArY,OAGAuiB,QAAA,SAAAC,GACA,IACAxiB,KAAAyb,UAAAxV,MAAAjG,KAAA0b,QAAA8G,GACA,MAAAvM,GACAkF,EAAAsH,4BAAA,EACA3E,QAAAC,MAAA,+CACA9H,EAAAyM,OAAAzM,MAIA0M,eAAA,WAEA,MADA3iB,MAAAyY,OAAAnQ,QAAA,GACAtI,KAAA4b,QAIA,IACAM,IADAD,IAAA4D,CAEA1E,GAAAa,mBAAA,EAEAC,KACAC,MAeA,IAAA0G,KAAA,CAEA9iB,GAAA+D,SAAA/D,EAAA+D,aAEA/D,EAAA+D,SAAAC,2BAAA,WACA,IAAA8e,IAGA3G,GAAA,CAGA2G,IAAA,CAEA,IACAC,GAAAC,EADAvK,EAAA,CAGA,GAAA,CACAA,IACAuK,EAAA5G,GACAA,MACA2G,GAAA,CAEA,KAAA,GAAAliB,GAAA,EAAAA,EAAAmiB,EAAA9hB,OAAAL,IAAA,CACA,GAAA2X,GAAAwK,EAAAniB,EACA2X,GAAAmB,QAAAC,KAGApB,EAAAG,WACAoK,GAAA,GAEA3G,GAAA9W,KAAAkT,IAEAgB,MACAuJ,GAAA,SACArK,GAAAD,GAAAsK,EAEAnK,KACA5Y,EAAA6Y,qBAAAJ,GAEAqK,IAAA,IAGA3G,KACAnc,EAAA+D,SAAAkf,eAAA,WACA7G,QAUAE,EAAA7X,UAAAwb,GACAC,UAAA7E,EAAA5W,UAEAwV,cAAA,EAEAsI,SAAA,SAAAjN,EAAAjH,GACA0R,EACA7f,KAAA2b,gBAAAxB,EAAAna,KAAAA,KAAA4b,OACA5b,KAAA+Z,cAEA/Z,KAAAqc,WAAArc,KAAAgjB,WAAAhjB,KAAA4b,SAKAoH,WAAA,SAAAxR,GACA,GAAAyR,GAAAnU,MAAAuK,QAAA7H,QACA,KAAA,GAAA9L,KAAA8L,GACAyR,EAAAvd,GAAA8L,EAAA9L,EAIA,OAFAoJ,OAAAuK,QAAA7H,KACAyR,EAAAjiB,OAAAwQ,EAAAxQ,QACAiiB,GAGAxK,OAAA,SAAAiF,EAAAwF,GACA,GAAApK,GACA6E,CACA,IAAAkC,EAAA,CACA,IAAAnC,EACA,OAAA,CAEAC,MACA7E,EAAA2E,EAAAzd,KAAA4b,OAAA8B,EACAC,OAEAA,GAAA3d,KAAAqc,WACAvD,EAAAI,EAAAlZ,KAAA4b,OAAA5b,KAAAqc,WAGA,OAAAxD,GAAAC,IACA,GAEA+G,IACA7f,KAAAqc,WAAArc,KAAAgjB,WAAAhjB,KAAA4b,SAEA5b,KAAAuiB,SACAzJ,EAAAC,UACAD,EAAAE,YACAF,EAAAG,YACA,SAAAkK,GACA,MAAAxF,GAAAwF,OAIA,IAGAb,YAAA,WACAzC,GACA7f,KAAA2b,gBAAArL,QACAtQ,KAAA2b,gBAAArT,QAEAtI,KAAAqc,WAAA/T,QAIA0R,QAAA,WACAha,KAAAyZ,QAAAC,KAGAmG,EACA7f,KAAA2b,gBAAA3B,SAAA,GAEA3B,EAAArY,QAGA2iB,eAAA,WAMA,MALA3iB,MAAA2b,gBACA3b,KAAA2b,gBAAA3B,SAAA,GAEAha,KAAAqc,WAAArc,KAAAgjB,WAAAhjB,KAAA4b,QAEA5b,KAAA4b,UAUAU,EAAA/X,UAAAwb,GAEAC,UAAA5D,EAAA7X,UAEAwV,cAAA,EAEAiJ,WAAA,SAAA/T,GACA,MAAAA,GAAAhH,SAGAwQ,OAAA,SAAAiF,GACA,GAAAuB,EACA,IAAAY,EAAA,CACA,IAAAnC,EACA,OAAA,CACAuB,GAAAW,EAAA5f,KAAA4b,OAAA8B,OAEAuB,GAAAd,EAAAne,KAAA4b,OAAA,EAAA5b,KAAA4b,OAAA5a,OACAhB,KAAAqc,WAAA,EAAArc,KAAAqc,WAAArb,OAGA,OAAAie,IAAAA,EAAAje,QAGA6e,IACA7f,KAAAqc,WAAArc,KAAAgjB,WAAAhjB,KAAA4b,SAEA5b,KAAAuiB,SAAAtD,KACA,IANA,KAUA3C,EAAA8G,aAAA,SAAAC,EAAAjF,EAAAa,GACAA,EAAAvc,QAAA,SAAAwc,GAGA,IAFA,GAAAoE,IAAApE,EAAA5V,MAAA4V,EAAAlG,QAAAhY,QACAuiB,EAAArE,EAAA5V,MACAia,EAAArE,EAAA5V,MAAA4V,EAAAjB,YACAqF,EAAAle,KAAAgZ,EAAAmF,IACAA,GAGAzU,OAAAvK,UAAA2a,OAAAjZ,MAAAod,EAAAC,MAYA9G,EAAAjY,UAAAwb,GACAC,UAAA7E,EAAA5W,UAEA0W,GAAAxM,QACA,MAAAzO,MAAA0c,OAGA2F,SAAA,WACAxC,IACA7f,KAAA2b,gBAAAJ,EAAAvb,KAAAA,KAAAyc,UAEAzc,KAAAyY,OAAAnQ,QAAA,IAGAga,YAAA,WACAtiB,KAAA4b,OAAAtT,OAEAtI,KAAA2b,kBACA3b,KAAA2b,gBAAArL,MAAAtQ,MACAA,KAAA2b,gBAAArT,SAIAwS,gBAAA,SAAAvF,GACAvV,KAAA0c,MAAAkF,eAAA5hB,KAAAyc,QAAAlH,IAGAkD,OAAA,SAAAiF,EAAAwF,GACA,GAAArF,GAAA7d,KAAA4b,MAEA,OADA5b,MAAA4b,OAAA5b,KAAA0c,MAAA7E,aAAA7X,KAAAyc,SACAyG,GAAA9M,EAAApW,KAAA4b,OAAAiC,IACA,GAEA7d,KAAAuiB,SAAAviB,KAAA4b,OAAAiC,EAAA7d,QACA,IAGAwjB,SAAA,SAAApK,GACApZ,KAAA0c,OACA1c,KAAA0c,MAAAoF,aAAA9hB,KAAAyc,QAAArD,KAaA,IAAAqK,MAEA9G,GAAApY,UAAAwb,GACAC,UAAA7E,EAAA5W,UAEA8d,SAAA,WACA,GAAAxC,EAAA,CAGA,IAAA,GAFArO,GACAkS,GAAA,EACA/iB,EAAA,EAAAA,EAAAX,KAAA8c,UAAA9b,OAAAL,GAAA,EAEA,GADA6Q,EAAAxR,KAAA8c,UAAAnc,GACA6Q,IAAAiS,GAAA,CACAC,GAAA,CACA,OAIAA,IACA1jB,KAAA2b,gBAAAJ,EAAAvb,KAAAwR,IAGAxR,KAAAyY,OAAAnQ,QAAAtI,KAAA6c,uBAGAyF,YAAA,WACA,IAAA,GAAA3hB,GAAA,EAAAA,EAAAX,KAAA8c,UAAA9b,OAAAL,GAAA,EACAX,KAAA8c,UAAAnc,KAAA8iB,IACAzjB,KAAA8c,UAAAnc,EAAA,GAAA2P,OAEAtQ,MAAA8c,UAAA9b,OAAA,EACAhB,KAAA4b,OAAA5a,OAAA,EAEAhB,KAAA2b,kBACA3b,KAAA2b,gBAAArL,MAAAtQ,MACAA,KAAA2b,gBAAArT,SAIAqb,QAAA,SAAAnS,EAAA/C,GACA,GAAAzO,KAAAyZ,QAAA+B,IAAAxb,KAAAyZ,QAAA2I,GACA,KAAAxhB,OAAA,iCAEA,IAAA6N,GAAAsJ,EAAAtJ,EAEA,IADAzO,KAAA8c,UAAA1X,KAAAoM,EAAA/C,GACAzO,KAAA6c,qBAAA,CAEA,GAAAvT,GAAAtJ,KAAA8c,UAAA9b,OAAA,EAAA,CACAhB,MAAA4b,OAAAtS,GAAAmF,EAAAoJ,aAAArG,KAGAoS,YAAA,SAAAtL,GACA,GAAAtY,KAAAyZ,QAAA+B,IAAAxb,KAAAyZ,QAAA2I,GACA,KAAAxhB,OAAA,qCAGA,IADAZ,KAAA8c,UAAA1X,KAAAqe,GAAAnL,GACAtY,KAAA6c,qBAAA,CAEA,GAAAvT,GAAAtJ,KAAA8c,UAAA9b,OAAA,EAAA,CACAhB,MAAA4b,OAAAtS,GAAAgP,EAAAuB,KAAA7Z,KAAAga,QAAAha,QAGA6jB,WAAA,WACA,GAAA7jB,KAAAyZ,QAAAC,GACA,KAAA9Y,OAAA,4BAEAZ,MAAAyZ,OAAA2I,GACApiB,KAAAsiB,eAGAwB,YAAA,WACA,GAAA9jB,KAAAyZ,QAAA2I,GACA,KAAAxhB,OAAA,wCAIA,OAHAZ,MAAAyZ,OAAAC,GACA1Z,KAAAqiB,WAEAriB,KAAA4b,QAGAd,gBAAA,SAAAvF,GAEA,IAAA,GADA/D,GACA7Q,EAAA,EAAAA,EAAAX,KAAA8c,UAAA9b,OAAAL,GAAA,EACA6Q,EAAAxR,KAAA8c,UAAAnc,GACA6Q,IAAAiS,IACAzjB,KAAA8c,UAAAnc,EAAA,GAAAihB,eAAApQ,EAAA+D,IAIAkD,OAAA,SAAAiF,EAAAwF,GAEA,IAAA,GADAvF,GACAhd,EAAA,EAAAA,EAAAX,KAAA8c,UAAA9b,OAAAL,GAAA,EAAA,CACA,GAEAoF,GAFAyL,EAAAxR,KAAA8c,UAAAnc,GACA8N,EAAAzO,KAAA8c,UAAAnc,EAAA,EAEA,IAAA6Q,IAAAiS,GAAA,CACA,GAAAxG,GAAAxO,CACA1I,GAAA/F,KAAAyZ,SAAA+B,GACAyB,EAAApD,KAAA7Z,KAAAga,QAAAha,MACAid,EAAA0F,qBAEA5c,GAAA0I,EAAAoJ,aAAArG,EAGA0R,GACAljB,KAAA4b,OAAAjb,EAAA,GAAAoF,EAIAqQ,EAAArQ,EAAA/F,KAAA4b,OAAAjb,EAAA,MAGAgd,EAAAA,MACAA,EAAAhd,EAAA,GAAAX,KAAA4b,OAAAjb,EAAA,GACAX,KAAA4b,OAAAjb,EAAA,GAAAoF,GAGA,MAAA4X,IAKA3d,KAAAuiB,SAAAviB,KAAA4b,OAAA+B,EAAA3d,KAAA8c,aACA,IALA,KAwBAE,EAAAzY,WACAsV,KAAA,SAAAzE,EAAAjH,GAKA,MAJAnO,MAAAyb,UAAArG,EACApV,KAAA0b,QAAAvN,EACAnO,KAAA4b,OACA5b,KAAAsd,YAAAtd,KAAAqd,YAAAxD,KAAA7Z,KAAA+jB,kBAAA/jB,OACAA,KAAA4b,QAGAmI,kBAAA,SAAAhe,GAEA,GADAA,EAAA/F,KAAAsd,YAAAvX,IACAqQ,EAAArQ,EAAA/F,KAAA4b,QAAA,CAEA,GAAAiC,GAAA7d,KAAA4b,MACA5b,MAAA4b,OAAA7V,EACA/F,KAAAyb,UAAA1a,KAAAf,KAAA0b,QAAA1b,KAAA4b,OAAAiC,KAGA8E,eAAA,WAEA,MADA3iB,MAAA4b,OAAA5b,KAAAsd,YAAAtd,KAAAqd,YAAAsF,kBACA3iB,KAAA4b,QAGA5B,QAAA,WACA,MAAAha,MAAAqd,YAAArD,WAGAwJ,SAAA,SAAAzd,GAEA,MADAA,GAAA/F,KAAAud,YAAAxX,IACA/F,KAAAwd,qBAAAxd,KAAAqd,YAAAmG,SACAxjB,KAAAqd,YAAAmG,SAAAzd,GADA,QAIAuK,MAAA,WACAtQ,KAAAqd,aACArd,KAAAqd,YAAA/M,QACAtQ,KAAAyb,UAAAnT,OACAtI,KAAA0b,QAAApT,OACAtI,KAAAqd,YAAA/U,OACAtI,KAAA4b,OAAAtT,OACAtI,KAAAsd,YAAAhV,OACAtI,KAAAud,YAAAjV,QAIA,IAAAsV,KACAlZ,KAAA,EACAsf,QAAA,EACAnZ,UAAA,GAsEAoZ,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,CAIAlG,GAAA3Z,WAaA8f,kBAAA,SAAAjG,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GAOA,IAAA,GALA6F,GAAA7F,EAAAD,EAAA,EACA+F,EAAAjG,EAAAD,EAAA,EACAmG,EAAA,GAAA1V,OAAAwV,GAGA3jB,EAAA,EAAA2jB,EAAA3jB,EAAAA,IACA6jB,EAAA7jB,GAAA,GAAAmO,OAAAyV,GACAC,EAAA7jB,GAAA,GAAAA,CAIA,KAAA,GAAA8jB,GAAA,EAAAF,EAAAE,EAAAA,IACAD,EAAA,GAAAC,GAAAA,CAEA,KAAA,GAAA9jB,GAAA,EAAA2jB,EAAA3jB,EAAAA,IACA,IAAA,GAAA8jB,GAAA,EAAAF,EAAAE,EAAAA,IACA,GAAAzkB,KAAA0kB,OAAAtG,EAAAC,EAAAoG,EAAA,GAAAlG,EAAAC,EAAA7d,EAAA,IACA6jB,EAAA7jB,GAAA8jB,GAAAD,EAAA7jB,EAAA,GAAA8jB,EAAA,OACA,CACA,GAAAE,GAAAH,EAAA7jB,EAAA,GAAA8jB,GAAA,EACAG,EAAAJ,EAAA7jB,GAAA8jB,EAAA,GAAA,CACAD,GAAA7jB,GAAA8jB,GAAAG,EAAAD,EAAAA,EAAAC,EAKA,MAAAJ,IAMAK,kCAAA,SAAAL,GAKA,IAJA,GAAA7jB,GAAA6jB,EAAAxjB,OAAA,EACAyjB,EAAAD,EAAA,GAAAxjB,OAAA,EACAod,EAAAoG,EAAA7jB,GAAA8jB,GACAK,KACAnkB,EAAA,GAAA8jB,EAAA,GACA,GAAA,GAAA9jB,EAKA,GAAA,GAAA8jB,EAAA,CAKA,GAIA5S,GAJAkT,EAAAP,EAAA7jB,EAAA,GAAA8jB,EAAA,GACAG,EAAAJ,EAAA7jB,EAAA,GAAA8jB,GACAE,EAAAH,EAAA7jB,GAAA8jB,EAAA,EAIA5S,GADA8S,EAAAC,EACAG,EAAAH,EAAAA,EAAAG,EAEAA,EAAAJ,EAAAA,EAAAI,EAEAlT,GAAAkT,GACAA,GAAA3G,EACA0G,EAAA1f,KAAA6e,KAEAa,EAAA1f,KAAA8e,IACA9F,EAAA2G,GAEApkB,IACA8jB,KACA5S,GAAA+S,GACAE,EAAA1f,KAAAgf,IACAzjB,IACAyd,EAAAwG,IAEAE,EAAA1f,KAAA+e,IACAM,IACArG,EAAAuG,OA9BAG,GAAA1f,KAAAgf,IACAzjB,QANAmkB,GAAA1f,KAAA+e,IACAM,GAuCA,OADAK,GAAAE,UACAF,GA2BA3G,YAAA,SAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GACA,GAAAwG,GAAA,EACAC,EAAA,EAEAC,EAAAxT,KAAAE,IAAAyM,EAAAD,EAAAI,EAAAD,EAYA,IAXA,GAAAH,GAAA,GAAAG,IACAyG,EAAAjlB,KAAAolB,aAAAhH,EAAAG,EAAA4G,IAEA7G,GAAAF,EAAApd,QAAAyd,GAAAF,EAAAvd,SACAkkB,EAAAllB,KAAAqlB,aAAAjH,EAAAG,EAAA4G,EAAAF,IAEA5G,GAAA4G,EACAzG,GAAAyG,EACA3G,GAAA4G,EACAzG,GAAAyG,EAEA5G,EAAAD,GAAA,GAAAI,EAAAD,GAAA,EACA,QAEA,IAAAH,GAAAC,EAAA,CAEA,IADA,GAAAY,GAAAlB,EAAAK,KAAA,GACAI,EAAAD,GACAU,EAAAlG,QAAA5T,KAAAmZ,EAAAC,KAEA,QAAAU,GACA,GAAAV,GAAAC,EACA,OAAAT,EAAAK,KAAAC,EAAAD,GAUA,KAAA,GARAiH,GAAAtlB,KAAA6kB,kCACA7kB,KAAAqkB,kBAAAjG,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,IAEAS,EAAA5W,OACA2W,KACA3V,EAAA+U,EACAkH,EAAA/G,EACA7d,EAAA,EAAAA,EAAA2kB,EAAAtkB,OAAAL,IACA,OAAA2kB,EAAA3kB,IACA,IAAAsjB,IACA/E,IACAD,EAAA7Z,KAAA8Z,GACAA,EAAA5W,QAGAgB,IACAic,GACA,MACA,KAAArB,IACAhF,IACAA,EAAAlB,EAAA1U,KAAA,IAEA4V,EAAAjB,aACA3U,IAEA4V,EAAAlG,QAAA5T,KAAAmZ,EAAAgH,IACAA,GACA,MACA,KAAApB,IACAjF,IACAA,EAAAlB,EAAA1U,KAAA,IAEA4V,EAAAjB,aACA3U,GACA,MACA,KAAA8a,IACAlF,IACAA,EAAAlB,EAAA1U,KAAA,IAEA4V,EAAAlG,QAAA5T,KAAAmZ,EAAAgH,IACAA,IAQA,MAHArG,IACAD,EAAA7Z,KAAA8Z,GAEAD,GAGAmG,aAAA,SAAAhH,EAAAG,EAAAiH,GACA,IAAA,GAAA7kB,GAAA,EAAA6kB,EAAA7kB,EAAAA,IACA,IAAAX,KAAA0kB,OAAAtG,EAAAzd,GAAA4d,EAAA5d,IACA,MAAAA,EACA,OAAA6kB,IAGAH,aAAA,SAAAjH,EAAAG,EAAAiH,GAIA,IAHA,GAAAC,GAAArH,EAAApd,OACA0kB,EAAAnH,EAAAvd,OACA2kB,EAAA,EACAH,EAAAG,GAAA3lB,KAAA0kB,OAAAtG,IAAAqH,GAAAlH,IAAAmH,KACAC,GAEA,OAAAA,IAGAC,iBAAA,SAAAxH,EAAAiF,GACA,MAAArjB,MAAAme,YAAAC,EAAA,EAAAA,EAAApd,OAAAqiB,EAAA,EACAA,EAAAriB,SAGA0jB,OAAA,SAAAmB,EAAAC,GACA,MAAAD,KAAAC,GAIA,IAAApH,IAAA,GAAAR,GA2JA6H,GAAAjmB,CAEA,oBAAAN,IAAAA,EAAAwmB,WACA,mBAAAvmB,IAAAA,EAAAD,UACAA,EAAAC,EAAAD,SAEAumB,GAAAvmB,GAGAumB,GAAA5K,SAAAA,EACA4K,GAAA5K,SAAA8K,QAAAlE,GACAgE,GAAA5K,SAAA+K,kBAAAzC,GACAsC,GAAA5K,SAAAgL,iBAAAtG,EACAkG,GAAAzJ,cAAAA,EACAyJ,GAAAzJ,cAAAsJ,iBAAA,SAAAxH,EAAAiF,GACA,MAAA3E,IAAAkH,iBAAAxH,EAAAiF,IAGA0C,GAAA7H,YAAAA,EACA6H,GAAA3J,eAAAA,EACA2J,GAAAvJ,aAAAA,EACAuJ,GAAApJ,iBAAAA,EACAoJ,GAAAvO,KAAAA,EACAuO,GAAA/I,kBAAAA,GAEA,mBAAAld,IAAAA,GAAA,mBAAAL,IAAAA,EAAAK,EAAAE,MAAAH,UrBm6BGkB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,gBAErHumB,IAAI,SAAS1lB,EAAQjB,EAAOD,GsBjlFlC,YAYA,SAAA6mB,GAAA9kB,EAAAH,EAAA2E,GACA,MAAA3E,KAAAE,EAAAC,EAAA+kB,gBAAA9jB,IAAAuD,GAAAA,EAGA,QAAAwgB,GAAAhlB,EAAAH,EAAA2E,GACA,MAAA3E,KAAAE,EAAAC,EAAAilB,cAAAhkB,IAAAuD,GAAAA,EAGA,QAAA0gB,GAAArkB,EAAA0D,EAAAiJ,EAAA4W,EAAAe,GACA,GAAAC,GAAAvkB,EAAA0D,EACArD,GAAAkkB,GAEA7X,MAAAuK,QAAAsN,KACAvkB,EAAA0D,GAAA6gB,GAAAA,IAFAvkB,EAAA0D,GAAA6gB,KAIA,mBAAAD,GACAC,EAAAzH,OAAAnQ,EAAA4W,GAEAgB,EAAAzH,OAAAnQ,EAAA4W,EAAAe,GAKA,QAAAhjB,KACA1D,KAAA4mB,QAAA,GAAAjjB,GACA3D,KAAAsmB,gBAAA,GAAA3iB,GACA3D,KAAAwmB,cAAA,GAAA7iB,GACA3D,KAAA6mB,WAAA,GAAAljB,GArCAjD,EAAA,kBACAA,EAAA,gDACA,IAAAiD,GAAAjD,EAAA,8CAEA+B,EAAA/B,EAAA,cAAA+B,OAEAqkB,EAAA,EACAC,EAAA,EACAzlB,EAAA;;AAiCAoC,EAAAa,UAAA/C,cAAA,SAAAL,GACA,IAAAnB,KAAA4mB,QAAAle,IAAAvH,EAAA8H,IAAA,CAIA,GAAA+d,KACA7lB,GAAAsE,WAAA/C,QAAA,SAAAoD,GACAkhB,EAAAlhB,EAAAmhB,cAAAH,EAEAhhB,EAAAohB,cAAA,SAAAljB,GACAgjB,EAAAlhB,EAAAmhB,cAAAjjB,EAAAoV,aAGApZ,KAAA4mB,QAAAzhB,IAAAhE,EAAA8H,GAAA+d,KAIAtjB,EAAAa,UAAAzB,gBAAA,SAAA3B,GACAnB,KAAA4mB,QAAA,UAAAzlB,EAAA8H,KAIAvF,EAAAa,UAAAlC,KAAA,SAAAlB,GACA,GAAAkC,GAAArD,KACAgnB,EAAAhnB,KAAA4mB,QAAApkB,IAAArB,EAAAE,uBACAe,IACAjB,GAAAsE,WAAA0hB,OAAA,SAAArhB,GACA,MAAAA,GAAA0C,MAAAjF,YAAA6jB,IAAArhB,UACArD,QAAA,SAAAoD,GACA1D,EAAA0D,EAAAmhB,cAAA,KACAnhB,EAAAohB,cAAA,SAAAljB,GACAA,EAAA6Z,WAAA7Z,EAAAoV,WACAhX,EAAA0D,EAAAmhB,cAAAZ,EAAAhjB,EAAA2jB,EAAAlhB,EAAAmhB,cAAAjjB,EAAAoV,cAIA,IAAAd,GAAA,GAAA8D,gBAAAha,EA0BA,OAzBAkW,GAAAuB,KAAA,SAAAd,EAAAC,EAAAC,GACA1Q,OAAA6H,KAAA2I,GAAArW,QAAA,SAAAygB,GACA,GAAArd,GAAA3E,EAAAkmB,4BAAAlE,EACA,IAAA1gB,EAAAqD,GAAA,CACA,GAAAC,GAAAwgB,EAAAljB,EAAA2jB,EAAA7D,GAAApK,EAAAoK,GACArd,GAAA0d,SAAAzd,MAGAwC,OAAA6H,KAAA4I,GAAAtW,QAAA,SAAAygB,GACA,GAAArd,GAAA3E,EAAAkmB,4BAAAlE,EACA1gB,GAAAqD,IACAA,EAAA0d,SAAA,QAGAjb,OAAA6H,KAAA6I,GAAAvW,QAAA,SAAAygB,GACA,GAAArd,GAAA3E,EAAAkmB,4BAAAlE,EACA,IAAA1gB,EAAAqD,GAAA,CACA,GAAAC,GAAAwgB,EAAAljB,EAAA2jB,EAAA7D,GAAAlK,EAAAkK,GACArd,GAAA0d,SAAAzd,QAIA/F,KAAAsmB,gBAAAnhB,IAAAhE,EAAA8H,GAAA7G,GACApC,KAAAwmB,cAAArhB,IAAA/C,EAAAjB,EAAA8H,IACAjJ,KAAA6mB,WAAA1hB,IAAAhE,EAAA8H,GAAA+d,GACA5kB,GAIAsB,EAAAa,UAAAxB,OAAA,SAAA5B,GACA,GAAAiB,GAAApC,KAAAsmB,gBAAA9jB,IAAArB,EAAA8H,GAIA,OAHAjJ,MAAAsmB,gBAAA,UAAAnlB,EAAA8H,IACAjJ,KAAAwmB,cAAA,UAAApkB,GACApC,KAAA6mB,WAAA,UAAA1lB,EAAA8H,IACA7G,GAIAsB,EAAAa,UAAA7C,aAAA,SAAAP,GACA,GAAA2M,GAAA3M,EAAAkmB,4BAAA,UACAvhB,EAAA3E,EAAAkmB,4BAAA,aACAhU,EAAAlS,EAAAkmB,4BAAA,OACAC,EAAAnmB,EAAAkmB,4BAAA,UAEA,MAAA5kB,EAAAqL,IAAArL,EAAAqD,IAAArD,EAAA4Q,IAAA5Q,EAAA6kB,IAUA,KAAA,IAAA1mB,OAAA,4CATA,IAAAomB,GAAAhnB,KAAA6mB,WAAArkB,IAAAsL,EAAA/H,OACA3D,EAAApC,KAAAsmB,gBAAA9jB,IAAAsL,EAAA/H,MACA,KAAAtD,EAAAL,KAAAK,EAAAukB,GAIA,KAAA,IAAApmB,OAAA,kEAHA,IAAAyI,GAAAgd,EAAArmB,KAAAgnB,EAAAlhB,EAAAC,OAAAuhB,EAAAvhB,MACA0gB,GAAArkB,EAAA0D,EAAAC,MAAAsN,EAAAtN,MAAA,EAAAsD,IAUA3F,EAAAa,UAAAzC,aAAA,SAAAX,GACA,GAAA2M,GAAA3M,EAAAkmB,4BAAA,UACAvhB,EAAA3E,EAAAkmB,4BAAA,aACAtY,EAAA5N,EAAAkmB,4BAAA,QACAE,EAAApmB,EAAAkmB,4BAAA,KAEA,MAAA5kB,EAAAqL,IAAArL,EAAAqD,IAAArD,EAAAsM,IAAAtM,EAAA8kB,IAQA,KAAA,IAAA3mB,OAAA,4CAPA,IAAAwB,GAAApC,KAAAsmB,gBAAA9jB,IAAAsL,EAAA/H,MACA,KAAAtD,EAAAL,GAGA,KAAA,IAAAxB,OAAA,kEAFA6lB,GAAArkB,EAAA0D,EAAAC,MAAAgJ,EAAAhJ,MAAAwhB,EAAAxhB,MAAAgJ,EAAAhJ,QAUArC,EAAAa,UAAAvC,aAAA,SAAAb,GACA,GAAA2M,GAAA3M,EAAAkmB,4BAAA,UACAvhB,EAAA3E,EAAAkmB,4BAAA,aACAhU,EAAAlS,EAAAkmB,4BAAA,OACAC,EAAAnmB,EAAAkmB,4BAAA,UAEA,MAAA5kB,EAAAqL,IAAArL,EAAAqD,IAAArD,EAAA4Q,IAAA5Q,EAAA6kB,IAUA,KAAA,IAAA1mB,OAAA,4CATA,IAAAomB,GAAAhnB,KAAA6mB,WAAArkB,IAAAsL,EAAA/H,OACA3D,EAAApC,KAAAsmB,gBAAA9jB,IAAAsL,EAAA/H,MACA,KAAAtD,EAAAL,KAAAK,EAAAukB,GAIA,KAAA,IAAApmB,OAAA,kEAHA,IAAAyI,GAAAgd,EAAArmB,KAAAgnB,EAAAlhB,EAAAC,OAAAuhB,EAAAvhB,MACA0gB,GAAArkB,EAAA0D,EAAAC,MAAAsN,EAAAtN,MAAA,EAAAsD,IAUA3F,EAAAa,UAAAsB,kBAAA,SAAAD,GACA,IAAAnD,EAAAmD,GACA,OAAAG,MAAAH,EAAAxE,KAAA0lB,EAEA,IAAA1lB,SAAAwE,EACA,IAAA,WAAAxE,EAAA,CACA,GAAA2E,GAAA/F,KAAAwmB,cAAAhkB,IAAAoD,EACA,IAAAnD,EAAAsD,GACA,OAAAA,MAAAA,EAAA3E,KAAAE,EAEA,MAAA,IAAA2F,WAAA,0CAEA,GAAA,WAAA7F,GAAA,WAAAA,GAAA,YAAAA,EACA,OAAA2E,MAAAH,EAAAxE,KAAA2lB,EAEA,MAAA,IAAA9f,WAAA,+DAIAzH,EAAAkE,gBAAAA,EACAlE,EAAAsnB,QAAAA,EACAtnB,EAAAunB,WAAAA,EACAvnB,EAAA8B,aAAAA,ItBslFGkmB,6CAA6C,EAAEC,gDAAgD,GAAGrhB,iBAAiB,GAAGC,aAAa,KAAKqhB,IAAI,SAAShnB,EAAQjB,EAAOD,GuB9xFvKsP,MAAAvK,UAAA7B,UAEAoM,MAAAvK,UAAA7B,QAAA,SAAA0S,EAAAuS,GAEA,GAAAtf,GAAAoB,CAEA,IAAA,MAAAzJ,KACA,KAAA,IAAAiH,WAAA,+BAIA,IAAAmB,GAAAG,OAAAvI,MAIA4nB,EAAAxf,EAAApH,SAAA,CAIA,IAAA,kBAAAoU,GACA,KAAA,IAAAnO,WAAAmO,EAAA,qBAYA,KARAnK,UAAAjK,OAAA,IACAqH,EAAAsf,GAIAle,EAAA,EAGAme,EAAAne,GAAA,CAEA,GAAAoe,EAOApe,KAAArB,KAGAyf,EAAAzf,EAAAqB,GAIA2L,EAAArU,KAAAsH,EAAAwf,EAAApe,EAAArB,IAGAqB,OAWAqF,MAAAvK,UAAA4iB,SACArY,MAAAvK,UAAA4iB,OAAA,SAAAW,GACA,YAEA,IAAA,SAAA9nB,MAAA,OAAAA,KACA,KAAA,IAAAiH,UAGA,IAAA9G,GAAAoI,OAAAvI,MACA4nB,EAAAznB,EAAAa,SAAA,CACA,IAAA,kBAAA8mB,GACA,KAAA,IAAA7gB,UAKA,KAAA,GAFA8gB,MACAJ,EAAA1c,UAAAjK,QAAA,EAAAiK,UAAA,GAAA,OACAtK,EAAA,EAAAinB,EAAAjnB,EAAAA,IACA,GAAAA,IAAAR,GAAA,CACA,GAAA6M,GAAA7M,EAAAQ,EAOAmnB,GAAA/mB,KAAA4mB,EAAA3a,EAAArM,EAAAR,IACA4nB,EAAA3iB,KAAA4H,GAKA,MAAA+a,UvBqyFMC,IAAI,SAAStnB,EAAQjB,EAAOD,GwBp4FlC,YAEAC,GAAAD,QAAAiD,OAAA,SAAA+O,GACA,MAAA,mBAAAA,IAAA,OAAAA,axBy4FW,IAAI","file":"dolphin.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jslint browserify: true */\n/* global opendolphin, Map */\n\"use strict\";\n\nrequire('./polyfills.js');\n\nvar exists = require('./utils.js').exists;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\n\n\nexports.connect = function(url, config) {\n    return new Dolphin(url, config);\n};\n\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar DOLPHIN_LIST_ADD_FROM_SERVER = '@@@ LIST_ADD_FROM_SERVER @@@';\nvar DOLPHIN_LIST_DEL_FROM_SERVER = '@@@ LIST_DEL_FROM_SERVER @@@';\nvar DOLPHIN_LIST_SET_FROM_SERVER = '@@@ LIST_SET_FROM_SERVER @@@';\nvar DOLPHIN_LIST_ADD_FROM_CLIENT = '@@@ LIST_ADD_FROM_CLIENT @@@';\nvar DOLPHIN_LIST_DEL_FROM_CLIENT = '@@@ LIST_DEL_FROM_CLIENT @@@';\nvar DOLPHIN_LIST_SET_FROM_CLIENT = '@@@ LIST_SET_FROM_CLIENT @@@';\n\n\nfunction onModelAdded(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.registerClass(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_SERVER:\n            dolphin.classRepository.addListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL_FROM_SERVER:\n            dolphin.classRepository.delListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET_FROM_SERVER:\n            dolphin.classRepository.setListEntry(model);\n            dolphin.dolphin.getClientModelStore().deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_CLIENT:\n        case DOLPHIN_LIST_DEL_FROM_CLIENT:\n        case DOLPHIN_LIST_SET_FROM_CLIENT:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.load(model);\n            var handlerList = dolphin.addedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            dolphin.allAddedHandlers.forEach(function(handler) {\n                handler(bean);\n            });\n            break;\n    }\n}\n\nfunction onModelRemoved(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD_FROM_SERVER:\n        case DOLPHIN_LIST_DEL_FROM_SERVER:\n        case DOLPHIN_LIST_SET_FROM_SERVER:\n        case DOLPHIN_LIST_ADD_FROM_CLIENT:\n        case DOLPHIN_LIST_DEL_FROM_CLIENT:\n        case DOLPHIN_LIST_SET_FROM_CLIENT:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.unload(model);\n            if (exists(bean)) {\n                var handlerList = dolphin.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    handlerList.forEach(function(handler) {\n                        handler(bean);\n                    });\n                }\n                dolphin.allRemovedHandlers.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            break;\n    }\n\n}\n\n\n\nfunction Dolphin(url, config) {\n    var _this = this;\n    var observeInterval = 50;\n    this.dolphin = opendolphin.dolphin(url, true, 4);\n    if (exists(config)) {\n        if (config.serverPush) {\n            this.dolphin.startPushListening('ServerPushController:longPoll', 'ServerPushController:release');\n        }\n        if (config.observeInterval) {\n            observeInterval = config.observeInterval;\n        }\n    }\n    this.classRepository = new ClassRepository();\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    setInterval(Platform.performMicrotaskCheckpoint, observeInterval);\n\n    this.dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        if (event.eventType === opendolphin.Type.ADDED) {\n            onModelAdded(_this, model);\n        } else if (event.eventType === opendolphin.Type.REMOVED) {\n            onModelRemoved(_this, model);\n        }\n    });\n}\n\n\nDolphin.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.onAdded = function(type, eventHandler) {\n    // TODO: Probably safer to use copy-on-write here [DP-6]\n    if (!exists(eventHandler)) {\n        this.allAddedHandlers.push(type);\n    } else {\n        var handlerList = this.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n            this.addedHandlers.set(type, handlerList);\n        }\n        handlerList.push(eventHandler);\n    }\n\n    // TODO: Return subscription [DP-6]\n    return null;\n};\n\n\nDolphin.prototype.onRemoved = function(type, eventHandler) {\n    // TODO: Probably safer to use copy-on-write here [DP-6]\n    if (!exists(eventHandler)) {\n        this.allRemovedHandlers.push(type);\n    } else {\n        var handlerList = this.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n            this.removedHandlers.set(type, handlerList);\n        }\n        handlerList.push(eventHandler);\n    }\n\n    // TODO: Return subscription [DP-6]\n    return null;\n};\n\n\nDolphin.prototype.send = function(command, params) {\n    if (exists(params)) {\n        var attributes = [];\n        for (var prop in params) {\n            if (params.hasOwnProperty(prop)) {\n                var param = this.classRepository.mapParamToDolphin(params[prop]);\n                attributes.push(this.dolphin.attribute(prop, null, param.value, 'VALUE'));\n                attributes.push(this.dolphin.attribute(prop, null, param.type, 'VALUE_TYPE'));\n            }\n        }\n        this.dolphin.presentationModel.apply(this.dolphin, [null, '@@@ DOLPHIN_PARAMETER @@@'].concat(attributes));\n    }\n    this.dolphin.send(command);\n\n    // TODO: Return promise [DP-8]\n    return null;\n};\n",null,"require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nmodule.exports = require('../modules/$').core.Map;","var $ = require('./$');\nfunction assert(condition, msg1, msg2){\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\n}\nassert.def = $.assertDefined;\nassert.fn = function(it){\n  if(!$.isFunction(it))throw TypeError(it + ' is not a function!');\n  return it;\n};\nassert.obj = function(it){\n  if(!$.isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\nassert.inst = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\nmodule.exports = assert;","var $        = require('./$')\n  , TAG      = require('./$.wks')('toStringTag')\n  , toString = {}.toString;\nfunction cof(it){\n  return toString.call(it).slice(8, -1);\n}\ncof.classof = function(it){\n  var O, T;\n  return it == undefined ? it === undefined ? 'Undefined' : 'Null'\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : cof(O);\n};\ncof.set = function(it, tag, stat){\n  if(it && !$.has(it = stat ? it : it.prototype, TAG))$.hide(it, TAG, tag);\n};\nmodule.exports = cof;","'use strict';\nvar $        = require('./$')\n  , ctx      = require('./$.ctx')\n  , safe     = require('./$.uid').safe\n  , assert   = require('./$.assert')\n  , $iter    = require('./$.iter')\n  , has      = $.has\n  , set      = $.set\n  , isObject = $.isObject\n  , hide     = $.hide\n  , step     = $iter.step\n  , isFrozen = Object.isFrozen || $.core.Object.isFrozen\n  , ID       = safe('id')\n  , O1       = safe('O1')\n  , LAST     = safe('last')\n  , FIRST    = safe('first')\n  , ITER     = safe('iter')\n  , SIZE     = $.DESC ? safe('size') : 'size'\n  , id       = 0;\n\nfunction fastKey(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\n  // can't set id to frozen object\n  if(isFrozen(it))return 'F';\n  if(!has(it, ID)){\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n}\n\nfunction getEntry(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index != 'F')return that[O1][index];\n  // frozen object case\n  for(entry = that[FIRST]; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n}\n\nmodule.exports = {\n  getConstructor: function(NAME, IS_MAP, ADDER){\n    function C(iterable){\n      var that = assert.inst(this, C, NAME);\n      set(that, O1, $.create(null));\n      set(that, SIZE, 0);\n      set(that, LAST, undefined);\n      set(that, FIRST, undefined);\n      if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n    }\n    $.mix(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that[FIRST] = that[LAST] = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that[O1][entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that[FIRST] == entry)that[FIRST] = next;\n          if(that[LAST] == entry)that[LAST] = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments[1], 3)\n          , entry;\n        while(entry = entry ? entry.n : this[FIRST]){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if($.DESC)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return assert.def(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that[LAST] = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that[LAST],          // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that[FIRST])that[FIRST] = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index != 'F')that[O1][index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  getIterConstructor: function(){\n    return function(iterated, kind){\n      set(this, ITER, {o: iterated, k: kind});\n    };\n  },\n  next: function(){\n    var iter  = this[ITER]\n      , kind  = iter.k\n      , entry = iter.l;\n    // revert to the last existing entry\n    while(entry && entry.r)entry = entry.p;\n    // get next entry\n    if(!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])){\n      // or finish the iteration\n      iter.o = undefined;\n      return step(1);\n    }\n    // return step by kind\n    if(kind == 'key'  )return step(0, entry.k);\n    if(kind == 'value')return step(0, entry.v);\n    return step(0, [entry.k, entry.v]);\n  }\n};","'use strict';\nvar $     = require('./$')\n  , $def  = require('./$.def')\n  , $iter = require('./$.iter')\n  , assertInstance = require('./$.assert').inst;\n\nmodule.exports = function(NAME, methods, common, IS_MAP, isWeak){\n  var Base  = $.g[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  function fixMethod(KEY, CHAIN){\n    var method = proto[KEY];\n    if($.FW)proto[KEY] = function(a, b){\n      var result = method.call(this, a === 0 ? 0 : a, b);\n      return CHAIN ? this : result;\n    };\n  }\n  if(!$.isFunction(C) || !(isWeak || !$iter.BUGGY && proto.forEach && proto.entries)){\n    // create collection constructor\n    C = common.getConstructor(NAME, IS_MAP, ADDER);\n    $.mix(C.prototype, methods);\n  } else {\n    var inst  = new C\n      , chain = inst[ADDER](isWeak ? {} : -0, 1)\n      , buggyZero;\n    // wrap for init collections from iterable\n    if(!require('./$.iter-detect')(function(iter){ new C(iter); })){ // eslint-disable-line no-new\n      C = function(iterable){\n        assertInstance(this, C, NAME);\n        var that = new Base;\n        if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      };\n      C.prototype = proto;\n      if($.FW)proto.constructor = C;\n    }\n    isWeak || inst.forEach(function(val, key){\n      buggyZero = 1 / key === -Infinity;\n    });\n    // fix converting -0 key to +0\n    if(buggyZero){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    // + fix .add & .set for chaining\n    if(buggyZero || chain !== inst)fixMethod(ADDER, true);\n  }\n\n  require('./$.cof').set(C, NAME);\n  require('./$.species')(C);\n\n  O[NAME] = C;\n  $def($def.G + $def.W + $def.F * (C != Base), O);\n\n  // add .keys, .values, .entries, [@@iterator]\n  // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n  if(!isWeak)$iter.std(\n    C, NAME,\n    common.getIterConstructor(), common.next,\n    IS_MAP ? 'key+value' : 'value' , !IS_MAP, true\n  );\n\n  return C;\n};","// Optional / simple context binding\nvar assertFunction = require('./$.assert').fn;\nmodule.exports = function(fn, that, length){\n  assertFunction(fn);\n  if(~length && that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  } return function(/* ...args */){\n      return fn.apply(that, arguments);\n    };\n};","var $          = require('./$')\n  , global     = $.g\n  , core       = $.core\n  , isFunction = $.isFunction;\nfunction ctx(fn, that){\n  return function(){\n    return fn.apply(that, arguments);\n  };\n}\n// type bitmap\n$def.F = 1;  // forced\n$def.G = 2;  // global\n$def.S = 4;  // static\n$def.P = 8;  // proto\n$def.B = 16; // bind\n$def.W = 32; // wrap\nfunction $def(type, name, source){\n  var key, own, out, exp\n    , isGlobal = type & $def.G\n    , target   = isGlobal ? global : type & $def.S\n        ? global[name] : (global[name] || {}).prototype\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\n  if(isGlobal)source = name;\n  for(key in source){\n    // contains in native\n    own = !(type & $def.F) && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    if(isGlobal && !isFunction(target[key]))exp = source[key];\n    // bind timers to global for call from export context\n    else if(type & $def.B && own)exp = ctx(out, global);\n    // wrap global constructors for prevent change them in library\n    else if(type & $def.W && target[key] == out)!function(C){\n      exp = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      exp.prototype = C.prototype;\n    }(out);\n    else exp = type & $def.P && isFunction(out) ? ctx(Function.call, out) : out;\n    // export\n    $.hide(exports, key, exp);\n  }\n}\nmodule.exports = $def;","module.exports = function($){\n  $.FW   = false;\n  $.path = $.core;\n  return $;\n};","var SYMBOL_ITERATOR = require('./$.wks')('iterator')\n  , SAFE_CLOSING    = false;\ntry {\n  var riter = [7][SYMBOL_ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\nmodule.exports = function(exec){\n  if(!SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[SYMBOL_ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[SYMBOL_ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","'use strict';\nvar $                 = require('./$')\n  , ctx               = require('./$.ctx')\n  , cof               = require('./$.cof')\n  , $def              = require('./$.def')\n  , assertObject      = require('./$.assert').obj\n  , SYMBOL_ITERATOR   = require('./$.wks')('iterator')\n  , FF_ITERATOR       = '@@iterator'\n  , Iterators         = {}\n  , IteratorPrototype = {};\n// Safari has byggy iterators w/o `next`\nvar BUGGY = 'keys' in [] && !('next' in [].keys());\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nsetIterator(IteratorPrototype, $.that);\nfunction setIterator(O, value){\n  $.hide(O, SYMBOL_ITERATOR, value);\n  // Add iterator for FF iterator protocol\n  if(FF_ITERATOR in [])$.hide(O, FF_ITERATOR, value);\n}\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\n  var proto = Constructor.prototype\n    , iter  = proto[SYMBOL_ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT] || value;\n  // Define iterator\n  if($.FW)setIterator(proto, iter);\n  if(iter !== value){\n    var iterProto = $.getProto(iter.call(new Constructor));\n    // Set @@toStringTag to native iterators\n    cof.set(iterProto, NAME + ' Iterator', true);\n    // FF fix\n    if($.FW)$.has(proto, FF_ITERATOR) && setIterator(iterProto, $.that);\n  }\n  // Plug for library\n  Iterators[NAME] = iter;\n  // FF & v8 fix\n  Iterators[NAME + ' Iterator'] = $.that;\n  return iter;\n}\nfunction getIterator(it){\n  var Symbol  = $.g.Symbol\n    , ext     = it[Symbol && Symbol.iterator || FF_ITERATOR]\n    , getIter = ext || it[SYMBOL_ITERATOR] || Iterators[cof.classof(it)];\n  return assertObject(getIter.call(it));\n}\nfunction closeIterator(iterator){\n  var ret = iterator['return'];\n  if(ret !== undefined)assertObject(ret.call(iterator));\n}\nfunction stepCall(iterator, fn, value, entries){\n  try {\n    return entries ? fn(assertObject(value)[0], value[1]) : fn(value);\n  } catch(e){\n    closeIterator(iterator);\n    throw e;\n  }\n}\nvar $iter = module.exports = {\n  BUGGY: BUGGY,\n  Iterators: Iterators,\n  prototype: IteratorPrototype,\n  step: function(done, value){\n    return {value: value, done: !!done};\n  },\n  stepCall: stepCall,\n  close: closeIterator,\n  is: function(it){\n    var O      = Object(it)\n      , Symbol = $.g.Symbol\n      , SYM    = Symbol && Symbol.iterator || FF_ITERATOR;\n    return SYM in O || SYMBOL_ITERATOR in O || $.has(Iterators, cof.classof(O));\n  },\n  get: getIterator,\n  set: setIterator,\n  create: function(Constructor, NAME, next, proto){\n    Constructor.prototype = $.create(proto || $iter.prototype, {next: $.desc(1, next)});\n    cof.set(Constructor, NAME + ' Iterator');\n  },\n  define: defineIterator,\n  std: function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCE){\n    function createIter(kind){\n      return function(){\n        return new Constructor(this, kind);\n      };\n    }\n    $iter.create(Constructor, NAME, next);\n    var entries = createIter('key+value')\n      , values  = createIter('value')\n      , proto   = Base.prototype\n      , methods, key;\n    if(DEFAULT == 'value')values = defineIterator(Base, NAME, values, 'values');\n    else entries = defineIterator(Base, NAME, entries, 'entries');\n    if(DEFAULT){\n      methods = {\n        entries: entries,\n        keys:    IS_SET ? values : createIter('key'),\n        values:  values\n      };\n      $def($def.P + $def.F * BUGGY, NAME, methods);\n      if(FORCE)for(key in methods){\n        if(!(key in proto))$.hide(proto, key, methods[key]);\n      }\n    }\n  },\n  forOf: function(iterable, entries, fn, that){\n    var iterator = getIterator(iterable)\n      , f = ctx(fn, that, entries ? 2 : 1)\n      , step;\n    while(!(step = iterator.next()).done){\n      if(stepCall(iterator, f, step.value, entries) === false){\n        return closeIterator(iterator);\n      }\n    }\n  }\n};","'use strict';\nvar global = typeof self != 'undefined' ? self : Function('return this')()\n  , core   = {}\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = {}.hasOwnProperty\n  , ceil  = Math.ceil\n  , floor = Math.floor\n  , max   = Math.max\n  , min   = Math.min;\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\nvar DESC = !!function(){\n  try {\n    return defineProperty({}, 'a', {get: function(){ return 2; }}).a == 2;\n  } catch(e){ /* empty */ }\n}();\nvar hide = createDefiner(1);\n// 7.1.4 ToInteger\nfunction toInteger(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n}\nfunction desc(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n}\nfunction simpleSet(object, key, value){\n  object[key] = value;\n  return object;\n}\nfunction createDefiner(bitmap){\n  return DESC ? function(object, key, value){\n    return $.setDesc(object, key, desc(bitmap, value)); // eslint-disable-line no-use-before-define\n  } : simpleSet;\n}\n\nfunction isObject(it){\n  return it !== null && (typeof it == 'object' || typeof it == 'function');\n}\nfunction isFunction(it){\n  return typeof it == 'function';\n}\nfunction assertDefined(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n}\n\nvar $ = module.exports = require('./$.fw')({\n  g: global,\n  core: core,\n  html: global.document && document.documentElement,\n  // http://jsperf.com/core-js-isobject\n  isObject:   isObject,\n  isFunction: isFunction,\n  it: function(it){\n    return it;\n  },\n  that: function(){\n    return this;\n  },\n  // 7.1.4 ToInteger\n  toInteger: toInteger,\n  // 7.1.15 ToLength\n  toLength: function(it){\n    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  },\n  toIndex: function(index, length){\n    index = toInteger(index);\n    return index < 0 ? max(index + length, 0) : min(index, length);\n  },\n  has: function(it, key){\n    return hasOwnProperty.call(it, key);\n  },\n  create:     Object.create,\n  getProto:   Object.getPrototypeOf,\n  DESC:       DESC,\n  desc:       desc,\n  getDesc:    Object.getOwnPropertyDescriptor,\n  setDesc:    defineProperty,\n  getKeys:    Object.keys,\n  getNames:   Object.getOwnPropertyNames,\n  getSymbols: Object.getOwnPropertySymbols,\n  // Dummy, fix for not array-like ES3 string in es5 module\n  assertDefined: assertDefined,\n  ES5Object: Object,\n  toObject: function(it){\n    return $.ES5Object(assertDefined(it));\n  },\n  hide: hide,\n  def: createDefiner(0),\n  set: global.Symbol ? simpleSet : hide,\n  mix: function(target, src){\n    for(var key in src)hide(target, key, src[key]);\n    return target;\n  },\n  each: [].forEach\n});\nif(typeof __e != 'undefined')__e = core;\nif(typeof __g != 'undefined')__g = global;","var $ = require('./$');\nmodule.exports = function(C){\n  if($.DESC && $.FW)$.setDesc(C, require('./$.wks')('species'), {\n    configurable: true,\n    get: $.that\n  });\n};","'use strict';\n// true  -> String#at\n// false -> String#codePointAt\nvar $ = require('./$');\nmodule.exports = function(TO_STRING){\n  return function(pos){\n    var s = String($.assertDefined(this))\n      , i = $.toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l\n      || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n        ? TO_STRING ? s.charAt(i) : a\n        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var sid = 0;\nfunction uid(key){\n  return 'Symbol(' + key + ')_' + (++sid + Math.random()).toString(36);\n}\nuid.safe = require('./$').g.Symbol || uid;\nmodule.exports = uid;","// 22.1.3.31 Array.prototype[@@unscopables]\nvar $           = require('./$')\n  , UNSCOPABLES = require('./$.wks')('unscopables');\nif($.FW && !(UNSCOPABLES in []))$.hide(Array.prototype, UNSCOPABLES, {});\nmodule.exports = function(key){\n  if($.FW)[][UNSCOPABLES][key] = true;\n};","var global = require('./$').g\n  , store  = {};\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    global.Symbol && global.Symbol[name] || require('./$.uid').safe('Symbol.' + name));\n};","var $          = require('./$')\n  , setUnscope = require('./$.unscope')\n  , ITER       = require('./$.uid').safe('iter')\n  , $iter      = require('./$.iter')\n  , step       = $iter.step\n  , Iterators  = $iter.Iterators;\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\n$iter.std(Array, 'Array', function(iterated, kind){\n  $.set(this, ITER, {o: $.toObject(iterated), i: 0, k: kind});\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , kind  = iter.k\n    , index = iter.i++;\n  if(!O || index >= O.length){\n    iter.o = undefined;\n    return step(1);\n  }\n  if(kind == 'key'  )return step(0, index);\n  if(kind == 'value')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'value');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\nsetUnscope('keys');\nsetUnscope('values');\nsetUnscope('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","var set   = require('./$').set\n  , at    = require('./$.string-at')(true)\n  , ITER  = require('./$.uid').safe('iter')\n  , $iter = require('./$.iter')\n  , step  = $iter.step;\n\n// 21.1.3.27 String.prototype[@@iterator]()\n$iter.std(String, 'String', function(iterated){\n  set(this, ITER, {o: String(iterated), i: 0});\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , index = iter.i\n    , point;\n  if(index >= O.length)return step(1);\n  point = at.call(O, index);\n  iter.i += point.length;\n  return step(0, point);\n});","require('./es6.array.iterator');\nvar $           = require('./$')\n  , Iterators   = require('./$.iter').Iterators\n  , ITERATOR    = require('./$.wks')('iterator')\n  , ArrayValues = Iterators.Array\n  , NodeList    = $.g.NodeList;\nif($.FW && NodeList && !(ITERATOR in NodeList.prototype)){\n  $.hide(NodeList.prototype, ITERATOR, ArrayValues);\n}\nIterators.NodeList = ArrayValues;","/*\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(global) {\n  'use strict';\n\n  var testingExposeCycleCount = global.testingExposeCycleCount;\n\n  // Detect and do basic sanity checking on Object/Array.observe.\n  function detectObjectObserve() {\n    if (typeof Object.observe !== 'function' ||\n        typeof Array.observe !== 'function') {\n      return false;\n    }\n\n    var records = [];\n\n    function callback(recs) {\n      records = recs;\n    }\n\n    var test = {};\n    var arr = [];\n    Object.observe(test, callback);\n    Array.observe(arr, callback);\n    test.id = 1;\n    test.id = 2;\n    delete test.id;\n    arr.push(1, 2);\n    arr.length = 0;\n\n    Object.deliverChangeRecords(callback);\n    if (records.length !== 5)\n      return false;\n\n    if (records[0].type != 'add' ||\n        records[1].type != 'update' ||\n        records[2].type != 'delete' ||\n        records[3].type != 'splice' ||\n        records[4].type != 'splice') {\n      return false;\n    }\n\n    Object.unobserve(test, callback);\n    Array.unobserve(arr, callback);\n\n    return true;\n  }\n\n  var hasObserve = detectObjectObserve();\n\n  function detectEval() {\n    // Don't test for eval if we're running in a Chrome App environment.\n    // We check for APIs set that only exist in a Chrome App context.\n    if (typeof chrome !== 'undefined' && chrome.app && chrome.app.runtime) {\n      return false;\n    }\n\n    // Firefox OS Apps do not allow eval. This feature detection is very hacky\n    // but even if some other platform adds support for this function this code\n    // will continue to work.\n    if (typeof navigator != 'undefined' && navigator.getDeviceStorage) {\n      return false;\n    }\n\n    try {\n      var f = new Function('', 'return true;');\n      return f();\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  var hasEval = detectEval();\n\n  function isIndex(s) {\n    return +s === s >>> 0 && s !== '';\n  }\n\n  function toNumber(s) {\n    return +s;\n  }\n\n  function isObject(obj) {\n    return obj === Object(obj);\n  }\n\n  var numberIsNaN = global.Number.isNaN || function(value) {\n    return typeof value === 'number' && global.isNaN(value);\n  }\n\n  function areSameValue(left, right) {\n    if (left === right)\n      return left !== 0 || 1 / left === 1 / right;\n    if (numberIsNaN(left) && numberIsNaN(right))\n      return true;\n\n    return left !== left && right !== right;\n  }\n\n  var createObject = ('__proto__' in {}) ?\n    function(obj) { return obj; } :\n    function(obj) {\n      var proto = obj.__proto__;\n      if (!proto)\n        return obj;\n      var newObject = Object.create(proto);\n      Object.getOwnPropertyNames(obj).forEach(function(name) {\n        Object.defineProperty(newObject, name,\n                             Object.getOwnPropertyDescriptor(obj, name));\n      });\n      return newObject;\n    };\n\n  var identStart = '[\\$_a-zA-Z]';\n  var identPart = '[\\$_a-zA-Z0-9]';\n  var identRegExp = new RegExp('^' + identStart + '+' + identPart + '*' + '$');\n\n  function getPathCharType(char) {\n    if (char === undefined)\n      return 'eof';\n\n    var code = char.charCodeAt(0);\n\n    switch(code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30: // 0\n        return char;\n\n      case 0x5F: // _\n      case 0x24: // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0:  // No-break space\n      case 0xFEFF:  // Byte Order Mark\n      case 0x2028:  // Line Separator\n      case 0x2029:  // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if ((0x61 <= code && code <= 0x7A) || (0x41 <= code && code <= 0x5A))\n      return 'ident';\n\n    // 1-9\n    if (0x31 <= code && code <= 0x39)\n      return 'number';\n\n    return 'else';\n  }\n\n  var pathStateMachine = {\n    'beforePath': {\n      'ws': ['beforePath'],\n      'ident': ['inIdent', 'append'],\n      '[': ['beforeElement'],\n      'eof': ['afterPath']\n    },\n\n    'inPath': {\n      'ws': ['inPath'],\n      '.': ['beforeIdent'],\n      '[': ['beforeElement'],\n      'eof': ['afterPath']\n    },\n\n    'beforeIdent': {\n      'ws': ['beforeIdent'],\n      'ident': ['inIdent', 'append']\n    },\n\n    'inIdent': {\n      'ident': ['inIdent', 'append'],\n      '0': ['inIdent', 'append'],\n      'number': ['inIdent', 'append'],\n      'ws': ['inPath', 'push'],\n      '.': ['beforeIdent', 'push'],\n      '[': ['beforeElement', 'push'],\n      'eof': ['afterPath', 'push']\n    },\n\n    'beforeElement': {\n      'ws': ['beforeElement'],\n      '0': ['afterZero', 'append'],\n      'number': ['inIndex', 'append'],\n      \"'\": ['inSingleQuote', 'append', ''],\n      '\"': ['inDoubleQuote', 'append', '']\n    },\n\n    'afterZero': {\n      'ws': ['afterElement', 'push'],\n      ']': ['inPath', 'push']\n    },\n\n    'inIndex': {\n      '0': ['inIndex', 'append'],\n      'number': ['inIndex', 'append'],\n      'ws': ['afterElement'],\n      ']': ['inPath', 'push']\n    },\n\n    'inSingleQuote': {\n      \"'\": ['afterElement'],\n      'eof': ['error'],\n      'else': ['inSingleQuote', 'append']\n    },\n\n    'inDoubleQuote': {\n      '\"': ['afterElement'],\n      'eof': ['error'],\n      'else': ['inDoubleQuote', 'append']\n    },\n\n    'afterElement': {\n      'ws': ['afterElement'],\n      ']': ['inPath', 'push']\n    }\n  }\n\n  function noop() {}\n\n  function parsePath(path) {\n    var keys = [];\n    var index = -1;\n    var c, newChar, key, type, transition, action, typeMap, mode = 'beforePath';\n\n    var actions = {\n      push: function() {\n        if (key === undefined)\n          return;\n\n        keys.push(key);\n        key = undefined;\n      },\n\n      append: function() {\n        if (key === undefined)\n          key = newChar\n        else\n          key += newChar;\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      if (index >= path.length)\n        return;\n\n      var nextChar = path[index + 1];\n      if ((mode == 'inSingleQuote' && nextChar == \"'\") ||\n          (mode == 'inDoubleQuote' && nextChar == '\"')) {\n        index++;\n        newChar = nextChar;\n        actions.append();\n        return true;\n      }\n    }\n\n    while (mode) {\n      index++;\n      c = path[index];\n\n      if (c == '\\\\' && maybeUnescapeQuote(mode))\n        continue;\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || 'error';\n\n      if (transition == 'error')\n        return; // parse error;\n\n      mode = transition[0];\n      action = actions[transition[1]] || noop;\n      newChar = transition[2] === undefined ? c : transition[2];\n      action();\n\n      if (mode === 'afterPath') {\n        return keys;\n      }\n    }\n\n    return; // parse error\n  }\n\n  function isIdent(s) {\n    return identRegExp.test(s);\n  }\n\n  var constructorIsPrivate = {};\n\n  function Path(parts, privateToken) {\n    if (privateToken !== constructorIsPrivate)\n      throw Error('Use Path.get to retrieve path objects');\n\n    for (var i = 0; i < parts.length; i++) {\n      this.push(String(parts[i]));\n    }\n\n    if (hasEval && this.length) {\n      this.getValueFrom = this.compiledGetValueFromFn();\n    }\n  }\n\n  // TODO(rafaelw): Make simple LRU cache\n  var pathCache = {};\n\n  function getPath(pathString) {\n    if (pathString instanceof Path)\n      return pathString;\n\n    if (pathString == null || pathString.length == 0)\n      pathString = '';\n\n    if (typeof pathString != 'string') {\n      if (isIndex(pathString.length)) {\n        // Constructed with array-like (pre-parsed) keys\n        return new Path(pathString, constructorIsPrivate);\n      }\n\n      pathString = String(pathString);\n    }\n\n    var path = pathCache[pathString];\n    if (path)\n      return path;\n\n    var parts = parsePath(pathString);\n    if (!parts)\n      return invalidPath;\n\n    var path = new Path(parts, constructorIsPrivate);\n    pathCache[pathString] = path;\n    return path;\n  }\n\n  Path.get = getPath;\n\n  function formatAccessor(key) {\n    if (isIndex(key)) {\n      return '[' + key + ']';\n    } else {\n      return '[\"' + key.replace(/\"/g, '\\\\\"') + '\"]';\n    }\n  }\n\n  Path.prototype = createObject({\n    __proto__: [],\n    valid: true,\n\n    toString: function() {\n      var pathString = '';\n      for (var i = 0; i < this.length; i++) {\n        var key = this[i];\n        if (isIdent(key)) {\n          pathString += i ? '.' + key : key;\n        } else {\n          pathString += formatAccessor(key);\n        }\n      }\n\n      return pathString;\n    },\n\n    getValueFrom: function(obj, directObserver) {\n      for (var i = 0; i < this.length; i++) {\n        if (obj == null)\n          return;\n        obj = obj[this[i]];\n      }\n      return obj;\n    },\n\n    iterateObjects: function(obj, observe) {\n      for (var i = 0; i < this.length; i++) {\n        if (i)\n          obj = obj[this[i - 1]];\n        if (!isObject(obj))\n          return;\n        observe(obj, this[i]);\n      }\n    },\n\n    compiledGetValueFromFn: function() {\n      var str = '';\n      var pathString = 'obj';\n      str += 'if (obj != null';\n      var i = 0;\n      var key;\n      for (; i < (this.length - 1); i++) {\n        key = this[i];\n        pathString += isIdent(key) ? '.' + key : formatAccessor(key);\n        str += ' &&\\n     ' + pathString + ' != null';\n      }\n      str += ')\\n';\n\n      var key = this[i];\n      pathString += isIdent(key) ? '.' + key : formatAccessor(key);\n\n      str += '  return ' + pathString + ';\\nelse\\n  return undefined;';\n      return new Function('obj', str);\n    },\n\n    setValueFrom: function(obj, value) {\n      if (!this.length)\n        return false;\n\n      for (var i = 0; i < this.length - 1; i++) {\n        if (!isObject(obj))\n          return false;\n        obj = obj[this[i]];\n      }\n\n      if (!isObject(obj))\n        return false;\n\n      obj[this[i]] = value;\n      return true;\n    }\n  });\n\n  var invalidPath = new Path('', constructorIsPrivate);\n  invalidPath.valid = false;\n  invalidPath.getValueFrom = invalidPath.setValueFrom = function() {};\n\n  var MAX_DIRTY_CHECK_CYCLES = 1000;\n\n  function dirtyCheck(observer) {\n    var cycles = 0;\n    while (cycles < MAX_DIRTY_CHECK_CYCLES && observer.check_()) {\n      cycles++;\n    }\n    if (testingExposeCycleCount)\n      global.dirtyCheckCycleCount = cycles;\n\n    return cycles > 0;\n  }\n\n  function objectIsEmpty(object) {\n    for (var prop in object)\n      return false;\n    return true;\n  }\n\n  function diffIsEmpty(diff) {\n    return objectIsEmpty(diff.added) &&\n           objectIsEmpty(diff.removed) &&\n           objectIsEmpty(diff.changed);\n  }\n\n  function diffObjectFromOldObject(object, oldObject) {\n    var added = {};\n    var removed = {};\n    var changed = {};\n\n    for (var prop in oldObject) {\n      var newValue = object[prop];\n\n      if (newValue !== undefined && newValue === oldObject[prop])\n        continue;\n\n      if (!(prop in object)) {\n        removed[prop] = undefined;\n        continue;\n      }\n\n      if (newValue !== oldObject[prop])\n        changed[prop] = newValue;\n    }\n\n    for (var prop in object) {\n      if (prop in oldObject)\n        continue;\n\n      added[prop] = object[prop];\n    }\n\n    if (Array.isArray(object) && object.length !== oldObject.length)\n      changed.length = object.length;\n\n    return {\n      added: added,\n      removed: removed,\n      changed: changed\n    };\n  }\n\n  var eomTasks = [];\n  function runEOMTasks() {\n    if (!eomTasks.length)\n      return false;\n\n    for (var i = 0; i < eomTasks.length; i++) {\n      eomTasks[i]();\n    }\n    eomTasks.length = 0;\n    return true;\n  }\n\n  var runEOM = hasObserve ? (function(){\n    return function(fn) {\n      return Promise.resolve().then(fn);\n    }\n  })() :\n  (function() {\n    return function(fn) {\n      eomTasks.push(fn);\n    };\n  })();\n\n  var observedObjectCache = [];\n\n  function newObservedObject() {\n    var observer;\n    var object;\n    var discardRecords = false;\n    var first = true;\n\n    function callback(records) {\n      if (observer && observer.state_ === OPENED && !discardRecords)\n        observer.check_(records);\n    }\n\n    return {\n      open: function(obs) {\n        if (observer)\n          throw Error('ObservedObject in use');\n\n        if (!first)\n          Object.deliverChangeRecords(callback);\n\n        observer = obs;\n        first = false;\n      },\n      observe: function(obj, arrayObserve) {\n        object = obj;\n        if (arrayObserve)\n          Array.observe(object, callback);\n        else\n          Object.observe(object, callback);\n      },\n      deliver: function(discard) {\n        discardRecords = discard;\n        Object.deliverChangeRecords(callback);\n        discardRecords = false;\n      },\n      close: function() {\n        observer = undefined;\n        Object.unobserve(object, callback);\n        observedObjectCache.push(this);\n      }\n    };\n  }\n\n  /*\n   * The observedSet abstraction is a perf optimization which reduces the total\n   * number of Object.observe observations of a set of objects. The idea is that\n   * groups of Observers will have some object dependencies in common and this\n   * observed set ensures that each object in the transitive closure of\n   * dependencies is only observed once. The observedSet acts as a write barrier\n   * such that whenever any change comes through, all Observers are checked for\n   * changed values.\n   *\n   * Note that this optimization is explicitly moving work from setup-time to\n   * change-time.\n   *\n   * TODO(rafaelw): Implement \"garbage collection\". In order to move work off\n   * the critical path, when Observers are closed, their observed objects are\n   * not Object.unobserve(d). As a result, it's possible that if the observedSet\n   * is kept open, but some Observers have been closed, it could cause \"leaks\"\n   * (prevent otherwise collectable objects from being collected). At some\n   * point, we should implement incremental \"gc\" which keeps a list of\n   * observedSets which may need clean-up and does small amounts of cleanup on a\n   * timeout until all is clean.\n   */\n\n  function getObservedObject(observer, object, arrayObserve) {\n    var dir = observedObjectCache.pop() || newObservedObject();\n    dir.open(observer);\n    dir.observe(object, arrayObserve);\n    return dir;\n  }\n\n  var observedSetCache = [];\n\n  function newObservedSet() {\n    var observerCount = 0;\n    var observers = [];\n    var objects = [];\n    var rootObj;\n    var rootObjProps;\n\n    function observe(obj, prop) {\n      if (!obj)\n        return;\n\n      if (obj === rootObj)\n        rootObjProps[prop] = true;\n\n      if (objects.indexOf(obj) < 0) {\n        objects.push(obj);\n        Object.observe(obj, callback);\n      }\n\n      observe(Object.getPrototypeOf(obj), prop);\n    }\n\n    function allRootObjNonObservedProps(recs) {\n      for (var i = 0; i < recs.length; i++) {\n        var rec = recs[i];\n        if (rec.object !== rootObj ||\n            rootObjProps[rec.name] ||\n            rec.type === 'setPrototype') {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    function callback(recs) {\n      if (allRootObjNonObservedProps(recs))\n        return;\n\n      var observer;\n      for (var i = 0; i < observers.length; i++) {\n        observer = observers[i];\n        if (observer.state_ == OPENED) {\n          observer.iterateObjects_(observe);\n        }\n      }\n\n      for (var i = 0; i < observers.length; i++) {\n        observer = observers[i];\n        if (observer.state_ == OPENED) {\n          observer.check_();\n        }\n      }\n    }\n\n    var record = {\n      objects: objects,\n      get rootObject() { return rootObj; },\n      set rootObject(value) {\n        rootObj = value;\n        rootObjProps = {};\n      },\n      open: function(obs, object) {\n        observers.push(obs);\n        observerCount++;\n        obs.iterateObjects_(observe);\n      },\n      close: function(obs) {\n        observerCount--;\n        if (observerCount > 0) {\n          return;\n        }\n\n        for (var i = 0; i < objects.length; i++) {\n          Object.unobserve(objects[i], callback);\n          Observer.unobservedCount++;\n        }\n\n        observers.length = 0;\n        objects.length = 0;\n        rootObj = undefined;\n        rootObjProps = undefined;\n        observedSetCache.push(this);\n        if (lastObservedSet === this)\n          lastObservedSet = null;\n      },\n    };\n\n    return record;\n  }\n\n  var lastObservedSet;\n\n  function getObservedSet(observer, obj) {\n    if (!lastObservedSet || lastObservedSet.rootObject !== obj) {\n      lastObservedSet = observedSetCache.pop() || newObservedSet();\n      lastObservedSet.rootObject = obj;\n    }\n    lastObservedSet.open(observer, obj);\n    return lastObservedSet;\n  }\n\n  var UNOPENED = 0;\n  var OPENED = 1;\n  var CLOSED = 2;\n  var RESETTING = 3;\n\n  var nextObserverId = 1;\n\n  function Observer() {\n    this.state_ = UNOPENED;\n    this.callback_ = undefined;\n    this.target_ = undefined; // TODO(rafaelw): Should be WeakRef\n    this.directObserver_ = undefined;\n    this.value_ = undefined;\n    this.id_ = nextObserverId++;\n  }\n\n  Observer.prototype = {\n    open: function(callback, target) {\n      if (this.state_ != UNOPENED)\n        throw Error('Observer has already been opened.');\n\n      addToAll(this);\n      this.callback_ = callback;\n      this.target_ = target;\n      this.connect_();\n      this.state_ = OPENED;\n      return this.value_;\n    },\n\n    close: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      removeFromAll(this);\n      this.disconnect_();\n      this.value_ = undefined;\n      this.callback_ = undefined;\n      this.target_ = undefined;\n      this.state_ = CLOSED;\n    },\n\n    deliver: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      dirtyCheck(this);\n    },\n\n    report_: function(changes) {\n      try {\n        this.callback_.apply(this.target_, changes);\n      } catch (ex) {\n        Observer._errorThrownDuringCallback = true;\n        console.error('Exception caught during observer callback: ' +\n                       (ex.stack || ex));\n      }\n    },\n\n    discardChanges: function() {\n      this.check_(undefined, true);\n      return this.value_;\n    }\n  }\n\n  var collectObservers = !hasObserve;\n  var allObservers;\n  Observer._allObserversCount = 0;\n\n  if (collectObservers) {\n    allObservers = [];\n  }\n\n  function addToAll(observer) {\n    Observer._allObserversCount++;\n    if (!collectObservers)\n      return;\n\n    allObservers.push(observer);\n  }\n\n  function removeFromAll(observer) {\n    Observer._allObserversCount--;\n  }\n\n  var runningMicrotaskCheckpoint = false;\n\n  global.Platform = global.Platform || {};\n\n  global.Platform.performMicrotaskCheckpoint = function() {\n    if (runningMicrotaskCheckpoint)\n      return;\n\n    if (!collectObservers)\n      return;\n\n    runningMicrotaskCheckpoint = true;\n\n    var cycles = 0;\n    var anyChanged, toCheck;\n\n    do {\n      cycles++;\n      toCheck = allObservers;\n      allObservers = [];\n      anyChanged = false;\n\n      for (var i = 0; i < toCheck.length; i++) {\n        var observer = toCheck[i];\n        if (observer.state_ != OPENED)\n          continue;\n\n        if (observer.check_())\n          anyChanged = true;\n\n        allObservers.push(observer);\n      }\n      if (runEOMTasks())\n        anyChanged = true;\n    } while (cycles < MAX_DIRTY_CHECK_CYCLES && anyChanged);\n\n    if (testingExposeCycleCount)\n      global.dirtyCheckCycleCount = cycles;\n\n    runningMicrotaskCheckpoint = false;\n  };\n\n  if (collectObservers) {\n    global.Platform.clearObservers = function() {\n      allObservers = [];\n    };\n  }\n\n  function ObjectObserver(object) {\n    Observer.call(this);\n    this.value_ = object;\n    this.oldObject_ = undefined;\n  }\n\n  ObjectObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    arrayObserve: false,\n\n    connect_: function(callback, target) {\n      if (hasObserve) {\n        this.directObserver_ = getObservedObject(this, this.value_,\n                                                 this.arrayObserve);\n      } else {\n        this.oldObject_ = this.copyObject(this.value_);\n      }\n\n    },\n\n    copyObject: function(object) {\n      var copy = Array.isArray(object) ? [] : {};\n      for (var prop in object) {\n        copy[prop] = object[prop];\n      };\n      if (Array.isArray(object))\n        copy.length = object.length;\n      return copy;\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var diff;\n      var oldValues;\n      if (hasObserve) {\n        if (!changeRecords)\n          return false;\n\n        oldValues = {};\n        diff = diffObjectFromChangeRecords(this.value_, changeRecords,\n                                           oldValues);\n      } else {\n        oldValues = this.oldObject_;\n        diff = diffObjectFromOldObject(this.value_, this.oldObject_);\n      }\n\n      if (diffIsEmpty(diff))\n        return false;\n\n      if (!hasObserve)\n        this.oldObject_ = this.copyObject(this.value_);\n\n      this.report_([\n        diff.added || {},\n        diff.removed || {},\n        diff.changed || {},\n        function(property) {\n          return oldValues[property];\n        }\n      ]);\n\n      return true;\n    },\n\n    disconnect_: function() {\n      if (hasObserve) {\n        this.directObserver_.close();\n        this.directObserver_ = undefined;\n      } else {\n        this.oldObject_ = undefined;\n      }\n    },\n\n    deliver: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      if (hasObserve)\n        this.directObserver_.deliver(false);\n      else\n        dirtyCheck(this);\n    },\n\n    discardChanges: function() {\n      if (this.directObserver_)\n        this.directObserver_.deliver(true);\n      else\n        this.oldObject_ = this.copyObject(this.value_);\n\n      return this.value_;\n    }\n  });\n\n  function ArrayObserver(array) {\n    if (!Array.isArray(array))\n      throw Error('Provided object is not an Array');\n    ObjectObserver.call(this, array);\n  }\n\n  ArrayObserver.prototype = createObject({\n\n    __proto__: ObjectObserver.prototype,\n\n    arrayObserve: true,\n\n    copyObject: function(arr) {\n      return arr.slice();\n    },\n\n    check_: function(changeRecords) {\n      var splices;\n      if (hasObserve) {\n        if (!changeRecords)\n          return false;\n        splices = projectArraySplices(this.value_, changeRecords);\n      } else {\n        splices = calcSplices(this.value_, 0, this.value_.length,\n                              this.oldObject_, 0, this.oldObject_.length);\n      }\n\n      if (!splices || !splices.length)\n        return false;\n\n      if (!hasObserve)\n        this.oldObject_ = this.copyObject(this.value_);\n\n      this.report_([splices]);\n      return true;\n    }\n  });\n\n  ArrayObserver.applySplices = function(previous, current, splices) {\n    splices.forEach(function(splice) {\n      var spliceArgs = [splice.index, splice.removed.length];\n      var addIndex = splice.index;\n      while (addIndex < splice.index + splice.addedCount) {\n        spliceArgs.push(current[addIndex]);\n        addIndex++;\n      }\n\n      Array.prototype.splice.apply(previous, spliceArgs);\n    });\n  };\n\n  function PathObserver(object, path) {\n    Observer.call(this);\n\n    this.object_ = object;\n    this.path_ = getPath(path);\n    this.directObserver_ = undefined;\n  }\n\n  PathObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    get path() {\n      return this.path_;\n    },\n\n    connect_: function() {\n      if (hasObserve)\n        this.directObserver_ = getObservedSet(this, this.object_);\n\n      this.check_(undefined, true);\n    },\n\n    disconnect_: function() {\n      this.value_ = undefined;\n\n      if (this.directObserver_) {\n        this.directObserver_.close(this);\n        this.directObserver_ = undefined;\n      }\n    },\n\n    iterateObjects_: function(observe) {\n      this.path_.iterateObjects(this.object_, observe);\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var oldValue = this.value_;\n      this.value_ = this.path_.getValueFrom(this.object_);\n      if (skipChanges || areSameValue(this.value_, oldValue))\n        return false;\n\n      this.report_([this.value_, oldValue, this]);\n      return true;\n    },\n\n    setValue: function(newValue) {\n      if (this.path_)\n        this.path_.setValueFrom(this.object_, newValue);\n    }\n  });\n\n  function CompoundObserver(reportChangesOnOpen) {\n    Observer.call(this);\n\n    this.reportChangesOnOpen_ = reportChangesOnOpen;\n    this.value_ = [];\n    this.directObserver_ = undefined;\n    this.observed_ = [];\n  }\n\n  var observerSentinel = {};\n\n  CompoundObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    connect_: function() {\n      if (hasObserve) {\n        var object;\n        var needsDirectObserver = false;\n        for (var i = 0; i < this.observed_.length; i += 2) {\n          object = this.observed_[i]\n          if (object !== observerSentinel) {\n            needsDirectObserver = true;\n            break;\n          }\n        }\n\n        if (needsDirectObserver)\n          this.directObserver_ = getObservedSet(this, object);\n      }\n\n      this.check_(undefined, !this.reportChangesOnOpen_);\n    },\n\n    disconnect_: function() {\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        if (this.observed_[i] === observerSentinel)\n          this.observed_[i + 1].close();\n      }\n      this.observed_.length = 0;\n      this.value_.length = 0;\n\n      if (this.directObserver_) {\n        this.directObserver_.close(this);\n        this.directObserver_ = undefined;\n      }\n    },\n\n    addPath: function(object, path) {\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\n        throw Error('Cannot add paths once started.');\n\n      var path = getPath(path);\n      this.observed_.push(object, path);\n      if (!this.reportChangesOnOpen_)\n        return;\n      var index = this.observed_.length / 2 - 1;\n      this.value_[index] = path.getValueFrom(object);\n    },\n\n    addObserver: function(observer) {\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\n        throw Error('Cannot add observers once started.');\n\n      this.observed_.push(observerSentinel, observer);\n      if (!this.reportChangesOnOpen_)\n        return;\n      var index = this.observed_.length / 2 - 1;\n      this.value_[index] = observer.open(this.deliver, this);\n    },\n\n    startReset: function() {\n      if (this.state_ != OPENED)\n        throw Error('Can only reset while open');\n\n      this.state_ = RESETTING;\n      this.disconnect_();\n    },\n\n    finishReset: function() {\n      if (this.state_ != RESETTING)\n        throw Error('Can only finishReset after startReset');\n      this.state_ = OPENED;\n      this.connect_();\n\n      return this.value_;\n    },\n\n    iterateObjects_: function(observe) {\n      var object;\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        object = this.observed_[i]\n        if (object !== observerSentinel)\n          this.observed_[i + 1].iterateObjects(object, observe)\n      }\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var oldValues;\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        var object = this.observed_[i];\n        var path = this.observed_[i+1];\n        var value;\n        if (object === observerSentinel) {\n          var observable = path;\n          value = this.state_ === UNOPENED ?\n              observable.open(this.deliver, this) :\n              observable.discardChanges();\n        } else {\n          value = path.getValueFrom(object);\n        }\n\n        if (skipChanges) {\n          this.value_[i / 2] = value;\n          continue;\n        }\n\n        if (areSameValue(value, this.value_[i / 2]))\n          continue;\n\n        oldValues = oldValues || [];\n        oldValues[i / 2] = this.value_[i / 2];\n        this.value_[i / 2] = value;\n      }\n\n      if (!oldValues)\n        return false;\n\n      // TODO(rafaelw): Having observed_ as the third callback arg here is\n      // pretty lame API. Fix.\n      this.report_([this.value_, oldValues, this.observed_]);\n      return true;\n    }\n  });\n\n  function identFn(value) { return value; }\n\n  function ObserverTransform(observable, getValueFn, setValueFn,\n                             dontPassThroughSet) {\n    this.callback_ = undefined;\n    this.target_ = undefined;\n    this.value_ = undefined;\n    this.observable_ = observable;\n    this.getValueFn_ = getValueFn || identFn;\n    this.setValueFn_ = setValueFn || identFn;\n    // TODO(rafaelw): This is a temporary hack. PolymerExpressions needs this\n    // at the moment because of a bug in it's dependency tracking.\n    this.dontPassThroughSet_ = dontPassThroughSet;\n  }\n\n  ObserverTransform.prototype = {\n    open: function(callback, target) {\n      this.callback_ = callback;\n      this.target_ = target;\n      this.value_ =\n          this.getValueFn_(this.observable_.open(this.observedCallback_, this));\n      return this.value_;\n    },\n\n    observedCallback_: function(value) {\n      value = this.getValueFn_(value);\n      if (areSameValue(value, this.value_))\n        return;\n      var oldValue = this.value_;\n      this.value_ = value;\n      this.callback_.call(this.target_, this.value_, oldValue);\n    },\n\n    discardChanges: function() {\n      this.value_ = this.getValueFn_(this.observable_.discardChanges());\n      return this.value_;\n    },\n\n    deliver: function() {\n      return this.observable_.deliver();\n    },\n\n    setValue: function(value) {\n      value = this.setValueFn_(value);\n      if (!this.dontPassThroughSet_ && this.observable_.setValue)\n        return this.observable_.setValue(value);\n    },\n\n    close: function() {\n      if (this.observable_)\n        this.observable_.close();\n      this.callback_ = undefined;\n      this.target_ = undefined;\n      this.observable_ = undefined;\n      this.value_ = undefined;\n      this.getValueFn_ = undefined;\n      this.setValueFn_ = undefined;\n    }\n  }\n\n  var expectedRecordTypes = {\n    add: true,\n    update: true,\n    delete: true\n  };\n\n  function diffObjectFromChangeRecords(object, changeRecords, oldValues) {\n    var added = {};\n    var removed = {};\n\n    for (var i = 0; i < changeRecords.length; i++) {\n      var record = changeRecords[i];\n      if (!expectedRecordTypes[record.type]) {\n        console.error('Unknown changeRecord type: ' + record.type);\n        console.error(record);\n        continue;\n      }\n\n      if (!(record.name in oldValues))\n        oldValues[record.name] = record.oldValue;\n\n      if (record.type == 'update')\n        continue;\n\n      if (record.type == 'add') {\n        if (record.name in removed)\n          delete removed[record.name];\n        else\n          added[record.name] = true;\n\n        continue;\n      }\n\n      // type = 'delete'\n      if (record.name in added) {\n        delete added[record.name];\n        delete oldValues[record.name];\n      } else {\n        removed[record.name] = true;\n      }\n    }\n\n    for (var prop in added)\n      added[prop] = object[prop];\n\n    for (var prop in removed)\n      removed[prop] = undefined;\n\n    var changed = {};\n    for (var prop in oldValues) {\n      if (prop in added || prop in removed)\n        continue;\n\n      var newValue = object[prop];\n      if (oldValues[prop] !== newValue)\n        changed[prop] = newValue;\n    }\n\n    return {\n      added: added,\n      removed: removed,\n      changed: changed\n    };\n  }\n\n  function newSplice(index, removed, addedCount) {\n    return {\n      index: index,\n      removed: removed,\n      addedCount: addedCount\n    };\n  }\n\n  var EDIT_LEAVE = 0;\n  var EDIT_UPDATE = 1;\n  var EDIT_ADD = 2;\n  var EDIT_DELETE = 3;\n\n  function ArraySplice() {}\n\n  ArraySplice.prototype = {\n\n    // Note: This function is *based* on the computation of the Levenshtein\n    // \"edit\" distance. The one change is that \"updates\" are treated as two\n    // edits - not one. With Array splices, an update is really a delete\n    // followed by an add. By retaining this, we optimize for \"keeping\" the\n    // maximum array items in the original array. For example:\n    //\n    //   'xxxx123' -> '123yyyy'\n    //\n    // With 1-edit updates, the shortest path would be just to update all seven\n    // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n    // leaves the substring '123' intact.\n    calcEditDistances: function(current, currentStart, currentEnd,\n                                old, oldStart, oldEnd) {\n      // \"Deletion\" columns\n      var rowCount = oldEnd - oldStart + 1;\n      var columnCount = currentEnd - currentStart + 1;\n      var distances = new Array(rowCount);\n\n      // \"Addition\" rows. Initialize null column.\n      for (var i = 0; i < rowCount; i++) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n      }\n\n      // Initialize null row\n      for (var j = 0; j < columnCount; j++)\n        distances[0][j] = j;\n\n      for (var i = 1; i < rowCount; i++) {\n        for (var j = 1; j < columnCount; j++) {\n          if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n            distances[i][j] = distances[i - 1][j - 1];\n          else {\n            var north = distances[i - 1][j] + 1;\n            var west = distances[i][j - 1] + 1;\n            distances[i][j] = north < west ? north : west;\n          }\n        }\n      }\n\n      return distances;\n    },\n\n    // This starts at the final weight, and walks \"backward\" by finding\n    // the minimum previous weight recursively until the origin of the weight\n    // matrix.\n    spliceOperationsFromEditDistances: function(distances) {\n      var i = distances.length - 1;\n      var j = distances[0].length - 1;\n      var current = distances[i][j];\n      var edits = [];\n      while (i > 0 || j > 0) {\n        if (i == 0) {\n          edits.push(EDIT_ADD);\n          j--;\n          continue;\n        }\n        if (j == 0) {\n          edits.push(EDIT_DELETE);\n          i--;\n          continue;\n        }\n        var northWest = distances[i - 1][j - 1];\n        var west = distances[i - 1][j];\n        var north = distances[i][j - 1];\n\n        var min;\n        if (west < north)\n          min = west < northWest ? west : northWest;\n        else\n          min = north < northWest ? north : northWest;\n\n        if (min == northWest) {\n          if (northWest == current) {\n            edits.push(EDIT_LEAVE);\n          } else {\n            edits.push(EDIT_UPDATE);\n            current = northWest;\n          }\n          i--;\n          j--;\n        } else if (min == west) {\n          edits.push(EDIT_DELETE);\n          i--;\n          current = west;\n        } else {\n          edits.push(EDIT_ADD);\n          j--;\n          current = north;\n        }\n      }\n\n      edits.reverse();\n      return edits;\n    },\n\n    /**\n     * Splice Projection functions:\n     *\n     * A splice map is a representation of how a previous array of items\n     * was transformed into a new array of items. Conceptually it is a list of\n     * tuples of\n     *\n     *   <index, removed, addedCount>\n     *\n     * which are kept in ascending index order of. The tuple represents that at\n     * the |index|, |removed| sequence of items were removed, and counting forward\n     * from |index|, |addedCount| items were added.\n     */\n\n    /**\n     * Lacking individual splice mutation information, the minimal set of\n     * splices can be synthesized given the previous state and final state of an\n     * array. The basic approach is to calculate the edit distance matrix and\n     * choose the shortest path through it.\n     *\n     * Complexity: O(l * p)\n     *   l: The length of the current array\n     *   p: The length of the old array\n     */\n    calcSplices: function(current, currentStart, currentEnd,\n                          old, oldStart, oldEnd) {\n      var prefixCount = 0;\n      var suffixCount = 0;\n\n      var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n      if (currentStart == 0 && oldStart == 0)\n        prefixCount = this.sharedPrefix(current, old, minLength);\n\n      if (currentEnd == current.length && oldEnd == old.length)\n        suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n      currentStart += prefixCount;\n      oldStart += prefixCount;\n      currentEnd -= suffixCount;\n      oldEnd -= suffixCount;\n\n      if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n        return [];\n\n      if (currentStart == currentEnd) {\n        var splice = newSplice(currentStart, [], 0);\n        while (oldStart < oldEnd)\n          splice.removed.push(old[oldStart++]);\n\n        return [ splice ];\n      } else if (oldStart == oldEnd)\n        return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n      var ops = this.spliceOperationsFromEditDistances(\n          this.calcEditDistances(current, currentStart, currentEnd,\n                                 old, oldStart, oldEnd));\n\n      var splice = undefined;\n      var splices = [];\n      var index = currentStart;\n      var oldIndex = oldStart;\n      for (var i = 0; i < ops.length; i++) {\n        switch(ops[i]) {\n          case EDIT_LEAVE:\n            if (splice) {\n              splices.push(splice);\n              splice = undefined;\n            }\n\n            index++;\n            oldIndex++;\n            break;\n          case EDIT_UPDATE:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.addedCount++;\n            index++;\n\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n          case EDIT_ADD:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.addedCount++;\n            index++;\n            break;\n          case EDIT_DELETE:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n        }\n      }\n\n      if (splice) {\n        splices.push(splice);\n      }\n      return splices;\n    },\n\n    sharedPrefix: function(current, old, searchLength) {\n      for (var i = 0; i < searchLength; i++)\n        if (!this.equals(current[i], old[i]))\n          return i;\n      return searchLength;\n    },\n\n    sharedSuffix: function(current, old, searchLength) {\n      var index1 = current.length;\n      var index2 = old.length;\n      var count = 0;\n      while (count < searchLength && this.equals(current[--index1], old[--index2]))\n        count++;\n\n      return count;\n    },\n\n    calculateSplices: function(current, previous) {\n      return this.calcSplices(current, 0, current.length, previous, 0,\n                              previous.length);\n    },\n\n    equals: function(currentValue, previousValue) {\n      return currentValue === previousValue;\n    }\n  };\n\n  var arraySplice = new ArraySplice();\n\n  function calcSplices(current, currentStart, currentEnd,\n                       old, oldStart, oldEnd) {\n    return arraySplice.calcSplices(current, currentStart, currentEnd,\n                                   old, oldStart, oldEnd);\n  }\n\n  function intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1)\n      return -1;\n\n    // Adjacent\n    if (end1 == start2 || end2 == start1)\n      return 0;\n\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n      if (end1 < end2)\n        return end1 - start2; // Overlap\n      else\n        return end2 - start2; // Contained\n    } else {\n      // Non-zero intersect, span2 first\n      if (end2 < end1)\n        return end2 - start1; // Overlap\n      else\n        return end1 - start1; // Contained\n    }\n  }\n\n  function mergeSplice(splices, index, removed, addedCount) {\n\n    var splice = newSplice(index, removed, addedCount);\n\n    var inserted = false;\n    var insertionOffset = 0;\n\n    for (var i = 0; i < splices.length; i++) {\n      var current = splices[i];\n      current.index += insertionOffset;\n\n      if (inserted)\n        continue;\n\n      var intersectCount = intersect(splice.index,\n                                     splice.index + splice.removed.length,\n                                     current.index,\n                                     current.index + current.addedCount);\n\n      if (intersectCount >= 0) {\n        // Merge the two splices\n\n        splices.splice(i, 1);\n        i--;\n\n        insertionOffset -= current.addedCount - current.removed.length;\n\n        splice.addedCount += current.addedCount - intersectCount;\n        var deleteCount = splice.removed.length +\n                          current.removed.length - intersectCount;\n\n        if (!splice.addedCount && !deleteCount) {\n          // merged splice is a noop. discard.\n          inserted = true;\n        } else {\n          var removed = current.removed;\n\n          if (splice.index < current.index) {\n            // some prefix of splice.removed is prepended to current.removed.\n            var prepend = splice.removed.slice(0, current.index - splice.index);\n            Array.prototype.push.apply(prepend, removed);\n            removed = prepend;\n          }\n\n          if (splice.index + splice.removed.length > current.index + current.addedCount) {\n            // some suffix of splice.removed is appended to current.removed.\n            var append = splice.removed.slice(current.index + current.addedCount - splice.index);\n            Array.prototype.push.apply(removed, append);\n          }\n\n          splice.removed = removed;\n          if (current.index < splice.index) {\n            splice.index = current.index;\n          }\n        }\n      } else if (splice.index < current.index) {\n        // Insert splice here.\n\n        inserted = true;\n\n        splices.splice(i, 0, splice);\n        i++;\n\n        var offset = splice.addedCount - splice.removed.length\n        current.index += offset;\n        insertionOffset += offset;\n      }\n    }\n\n    if (!inserted)\n      splices.push(splice);\n  }\n\n  function createInitialSplices(array, changeRecords) {\n    var splices = [];\n\n    for (var i = 0; i < changeRecords.length; i++) {\n      var record = changeRecords[i];\n      switch(record.type) {\n        case 'splice':\n          mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);\n          break;\n        case 'add':\n        case 'update':\n        case 'delete':\n          if (!isIndex(record.name))\n            continue;\n          var index = toNumber(record.name);\n          if (index < 0)\n            continue;\n          mergeSplice(splices, index, [record.oldValue], 1);\n          break;\n        default:\n          console.error('Unexpected record type: ' + JSON.stringify(record));\n          break;\n      }\n    }\n\n    return splices;\n  }\n\n  function projectArraySplices(array, changeRecords) {\n    var splices = [];\n\n    createInitialSplices(array, changeRecords).forEach(function(splice) {\n      if (splice.addedCount == 1 && splice.removed.length == 1) {\n        if (splice.removed[0] !== array[splice.index])\n          splices.push(splice);\n\n        return\n      };\n\n      splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount,\n                                           splice.removed, 0, splice.removed.length));\n    });\n\n    return splices;\n  }\n\n  // Export the observe-js object for **Node.js**, with backwards-compatibility\n  // for the old `require()` API. Also ensure `exports` is not a DOM Element.\n  // If we're in the browser, export as a global object.\n\n  var expose = global;\n\n  if (typeof exports !== 'undefined' && !exports.nodeType) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports;\n    }\n    expose = exports;\n  }\n\n  expose.Observer = Observer;\n  expose.Observer.runEOM_ = runEOM;\n  expose.Observer.observerSentinel_ = observerSentinel; // for testing.\n  expose.Observer.hasObjectObserve = hasObserve;\n  expose.ArrayObserver = ArrayObserver;\n  expose.ArrayObserver.calculateSplices = function(current, previous) {\n    return arraySplice.calculateSplices(current, previous);\n  };\n\n  expose.ArraySplice = ArraySplice;\n  expose.ObjectObserver = ObjectObserver;\n  expose.PathObserver = PathObserver;\n  expose.CompoundObserver = CompoundObserver;\n  expose.Path = Path;\n  expose.ObserverTransform = ObserverTransform;\n  \n})(typeof global !== 'undefined' && global && typeof module !== 'undefined' && module ? global : this || window);\n","/*jslint browserify: true */\n/* global opendolphin, ObjectObserver */\n\"use strict\";\n\nrequire('./polyfills.js');\nrequire('../bower_components/observe-js/src/observe.js');\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nfunction fromDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction modifyList(bean, attribute, from, count, newElements) {\n    var list = bean[attribute];\n    if (!exists(list)) {\n        bean[attribute] = list = [];\n    } else if (!Array.isArray(list)) {\n        bean[attribute] = list = [list];\n    }\n    if (typeof newElements === 'undefined') {\n        list.splice(from, count);\n    } else {\n        list.splice(from, count, newElements);\n    }\n}\n\n\nfunction ClassRepository() {\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n}\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return attribute.tag === opendolphin.Tag.value();\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                bean[attribute.propertyName] = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n            }\n        });\n    });\n    var observer = new ObjectObserver(bean);\n    observer.open(function (added, removed, changed) {\n        Object.keys(added).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], added[property]);\n                attribute.setValue(value);\n            }\n        });\n        Object.keys(removed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                attribute.setValue(null);\n            }\n        });\n        Object.keys(changed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], changed[property]);\n                attribute.setValue(value);\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 0, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            modifyList(bean, attribute.value, from.value, to.value - from.value);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 1, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function (object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n"],"sourceRoot":"/source/"}