{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/dolphin.js","dolphin.min.js","bower_components/core.js/library/fn/map.js","bower_components/core.js/library/fn/promise.js","bower_components/core.js/library/modules/$.assert.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.def.js","bower_components/core.js/library/modules/$.fw.js","bower_components/core.js/library/modules/$.invoke.js","bower_components/core.js/library/modules/$.iter-detect.js","bower_components/core.js/library/modules/$.iter.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.species.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.task.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.unscope.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.promise.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/web.dom.iterable.js","src/classrepo.js","src/newclassrepo.js","src/polyfills.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","onModelAdded","model","type","presentationModelType","DOLPHIN_BEAN","classRepository","registerClass","DOLPHIN_LIST_ADD","addListEntry","opendolphin","deletePresentationModel","DOLPHIN_LIST_DEL","delListEntry","DOLPHIN_LIST_SET","setListEntry","bean","load","handlerList","addedHandlers","get","exists","forEach","handler","allAddedHandlers","onModelRemoved","unregisterClass","unload","removedHandlers","allRemovedHandlers","finalizeOpenDolphin","config","useNewClassRepository","observeInterval","serverPush","startPushListening","NewClassRepository","ClassRepository","onBeanUpdate","propertyName","newValue","oldValue","updatedHandlers","allUpdatedHandlers","onArrayUpdate","index","count","newElement","arrayUpdatedHandlers","allArrayUpdatedHandlers","shutdownRequested","loop","setTimeout","Platform","performMicrotaskCheckpoint","shutdown","getClientModelStore","onModelStoreChange","event","clientPresentationModel","sourceSystem","findAttributeByPropertyName","SOURCE_SYSTEM","value","SOURCE_SYSTEM_SERVER","eventType","Type","ADDED","REMOVED","ready","Dolphin","url","reset","Map","builder","makeDolphin","slackMS","errorHandler","build","initializer","Promise","connect","connect2","resolve","reject","req","XMLHttpRequest","withCredentials","onload","status","statusText","onerror","open","send","SOURCE_SYSTEM_CLIENT","prototype","notifyBeanChange","notifyArrayChange","removedElements","isManaged","create","add","addAll","collection","remove","removeAll","removeIf","predicate","onAdded","eventHandler","set","concat","unsubscribe","filter","onRemoved","command","params","attributes","attribute","prop","hasOwnProperty","param","mapParamToDolphin","push","presentationModel","apply","localDolphin","sendCommand","onFinished","resolver","then","../bower_components/core.js/library/fn/map","../bower_components/core.js/library/fn/promise","./classrepo.js","./newclassrepo.js","./polyfills.js","./utils.js",2,"core","../modules/$","../modules/es6.map","../modules/es6.string.iterator","../modules/web.dom.iterable",3,"../modules/es6.promise",4,"assert","condition","msg1","msg2","TypeError","$","def","assertDefined","fn","it","isFunction","obj","isObject","inst","Constructor","name","./$",5,"cof","toString","slice","TAG","classof","O","T","undefined","Object","tag","stat","has","hide","./$.wks",6,"fastKey","isFrozen","ID","id","getEntry","that","key","entry","O1","FIRST","k","ctx","safe","$iter","step","LAST","ITER","SIZE","DESC","getConstructor","NAME","IS_MAP","ADDER","C","iterable","forOf","mix","clear","data","p","delete","next","prev","callbackfn","arguments","v","setDesc","getIterConstructor","iterated","kind","iter","./$.assert","./$.ctx","./$.iter","./$.uid",7,"$def","assertInstance","methods","common","isWeak","fixMethod","KEY","CHAIN","method","proto","FW","b","result","Base","BUGGY","entries","buggyZero","chain","constructor","val","Infinity","G","W","F","std","./$.cof","./$.def","./$.iter-detect","./$.species",8,"assertFunction","c",9,"source","own","out","exp","isGlobal","target","S","B","P","Function",10,"path",11,"args","un",12,"SYMBOL_ITERATOR","SAFE_CLOSING","riter","Array","from","exec","arr",13,"setIterator","FF_ITERATOR","defineIterator","DEFAULT","iterProto","getProto","Iterators","getIterator","Symbol","ext","iterator","getIter","assertObject","closeIterator","ret","stepCall","IteratorPrototype","keys","done","close","is","SYM","desc","IS_SET","FORCE","createIter","values",14,"toInteger","isNaN","floor","ceil","bitmap","enumerable","configurable","writable","simpleSet","object","createDefiner","defineProperty","Math","max","min","html","document","documentElement","toLength","toIndex","getPrototypeOf","getDesc","getOwnPropertyDescriptor","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","ES5Object","toObject","src","each","__e","__g","./$.fw",15,16,"TO_STRING","pos","String","charCodeAt","charAt",17,"run","queue","listner","defer","channel","port","invoke","process","setTask","setImmediate","clearTask","clearImmediate","postMessage","addEventListener","MessageChannel","counter","ONREADYSTATECHANGE","nextTick","importScripts","port2","port1","onmessage","createElement","appendChild","removeChild","./$.invoke",18,"uid","sid","random",19,"UNSCOPABLES",20,"store",21,"setUnscope","Arguments","./$.unscope",22,"strong","./$.collection","./$.collection-strong",23,"SPECIES","isThenable","isUnhandled","promise","react","record","RECORD","h","fail","notify","isReject","asap","ok","emit","console","error","cb","rej","PROMISE","res","err","$reject","d","$resolve","wrapper","test","executor","onFulfilled","onRejected","catch","x","all","remaining","results","race","./$.task",24,"at","point","./$.string-at",25,"ITERATOR","ArrayValues","NodeList","./es6.array.iterator",26,"fromDolphin","beanFromDolphin","toDolphin","beanToDolphin","modifyList","newElements","list","isArray","splice","classes","classInfos","ObjectObserver","UNKNOWN","BASIC_TYPE","classInfo","onValueChange","_this","Tag","observer","added","removed","changed","property","setValue","element","to",27,"sendListAdd","modelId","sendListRemove","validateList","propertyUpdateHandlers","block","blocked","isBlocked","unblock","arrayUpdateHandlers","findPresentationModelById","getValue","array","search",28,"callback","thisArg","len","kValue","fun",29],"mappings":"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","file":"dolphin.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map  = require('../bower_components/core.js/library/fn/map');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\n\nvar exists = require('./utils.js').exists;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\nvar NewClassRepository = require('./newclassrepo.js').ClassRepository;\n\nvar initializer;\n\nexports.connect = function(url, config) {\n    var dolphin = new Dolphin(url, true);\n    finalizeOpenDolphin(dolphin, config, false);\n    return dolphin;\n};\n\nexports.connect2 = function(url, config) {\n    var dolphin = new Dolphin(url, false, config);\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status == 200) {\n                finalizeOpenDolphin(dolphin, config, true);\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n    return dolphin;\n};\n\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\nfunction onModelAdded(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.registerClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            dolphin.classRepository.addListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            dolphin.classRepository.delListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            dolphin.classRepository.setListEntry(model);\n            dolphin.opendolphin.deletePresentationModel(model);\n            break;\n        default:\n            var bean = dolphin.classRepository.load(model);\n            var handlerList = dolphin.addedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean);\n                });\n            }\n            dolphin.allAddedHandlers.forEach(function (handler) {\n                handler(bean);\n            });\n            break;\n    }\n}\n\nfunction onModelRemoved(dolphin, model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            dolphin.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            var bean = dolphin.classRepository.unload(model);\n            if (exists(bean)) {\n                var handlerList = dolphin.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    handlerList.forEach(function(handler) {\n                        handler(bean);\n                    });\n                }\n                dolphin.allRemovedHandlers.forEach(function(handler) {\n                    handler(bean);\n                });\n            }\n            break;\n    }\n\n}\n\n\n\nfunction finalizeOpenDolphin(dolphin, config, useNewClassRepository) {\n    var observeInterval = 50;\n    if (exists(config)) {\n        if (config.serverPush) {\n            dolphin.opendolphin.startPushListening('ServerPushController:longPoll', 'ServerPushController:release');\n        }\n        if (config.observeInterval) {\n            observeInterval = config.observeInterval;\n        }\n    }\n    dolphin.classRepository = useNewClassRepository? new NewClassRepository(dolphin.opendolphin) : new ClassRepository();\n\n    if (useNewClassRepository) {\n        dolphin.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n            var handlerList = dolphin.updatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean, propertyName, newValue, oldValue);\n                });\n            }\n            dolphin.allUpdatedHandlers.forEach(function (handler) {\n                handler(bean, propertyName, newValue, oldValue);\n            });\n        });\n        dolphin.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n            var handlerList = dolphin.arrayUpdatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach(function (handler) {\n                    handler(bean, propertyName, index, count, newElement);\n                });\n            }\n            dolphin.allArrayUpdatedHandlers.forEach(function (handler) {\n                handler(bean, propertyName, index, count, newElement);\n            });\n        });\n    } else {\n        var shutdownRequested = false;\n        (function loop() {\n            setTimeout(function () {\n                Platform.performMicrotaskCheckpoint();\n                if (!shutdownRequested) {\n                    loop();\n                }\n            }, observeInterval);\n        })();\n        dolphin.shutdown = function () {\n            shutdownRequested = true;\n        };\n    }\n\n    dolphin.opendolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                onModelAdded(dolphin, model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                onModelRemoved(dolphin, model);\n            }\n        }\n    });\n    dolphin.ready = true;\n}\n\n\nfunction Dolphin(url, reset, config) {\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n    this.ready = false;\n\n    var builder = opendolphin.makeDolphin().url(url).reset(reset).slackMS(4);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    this.opendolphin = builder.build();\n}\n\n\nDolphin.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nDolphin.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nDolphin.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nDolphin.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nDolphin.prototype.send = function(command, params) {\n    if (exists(params)) {\n\n        var attributes = [\n            this.opendolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT)\n        ];\n        for (var prop in params) {\n            if (params.hasOwnProperty(prop)) {\n                var param = this.classRepository.mapParamToDolphin(params[prop]);\n                attributes.push(this.opendolphin.attribute(prop, null, param.value, 'VALUE'));\n                attributes.push(this.opendolphin.attribute(prop, null, param.type, 'VALUE_TYPE'));\n            }\n        }\n        this.opendolphin.presentationModel.apply(this.opendolphin, [null, '@@@ DOLPHIN_PARAMETER @@@'].concat(attributes));\n    }\n\n    var localDolphin = this.opendolphin;\n    var sendCommand = function(resolve) {\n        localDolphin.send(command, { onFinished: function() {resolve();} });\n    };\n    var resolver = this.ready? sendCommand : function(resolve) {\n        initializer.then(function() {\n            sendCommand(resolve);\n        });\n    };\n    return new Promise(resolver);\n};\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.dolphin=e()}}(function(){return function e(t,r,n){function o(a,s){if(!r[a]){if(!t[a]){var u=\"function\"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var l=new Error(\"Cannot find module '\"+a+\"'\");throw l.code=\"MODULE_NOT_FOUND\",l}var c=r[a]={exports:{}};t[a][0].call(c.exports,function(e){var r=t[a][1][e];return o(r?r:e)},c,c.exports,e,t,r,n)}return r[a].exports}for(var i=\"function\"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(e,t,r){\"use strict\";function n(e,t){var r=t.presentationModelType;switch(r){case d:e.classRepository.registerClass(t);break;case h:e.classRepository.addListEntry(t),e.opendolphin.deletePresentationModel(t);break;case y:e.classRepository.delListEntry(t),e.opendolphin.deletePresentationModel(t);break;case v:e.classRepository.setListEntry(t),e.opendolphin.deletePresentationModel(t);break;default:var n=e.classRepository.load(t),o=e.addedHandlers.get(r);c(o)&&o.forEach(function(e){e(n)}),e.allAddedHandlers.forEach(function(e){e(n)})}}function o(e,t){var r=t.presentationModelType;switch(r){case d:e.classRepository.unregisterClass(t);break;case h:case y:case v:break;default:var n=e.classRepository.unload(t);if(c(n)){var o=e.removedHandlers.get(r);c(o)&&o.forEach(function(e){e(n)}),e.allRemovedHandlers.forEach(function(e){e(n)})}}}function i(e,t,r){var i=50;if(c(t)&&(t.serverPush&&e.opendolphin.startPushListening(\"ServerPushController:longPoll\",\"ServerPushController:release\"),t.observeInterval&&(i=t.observeInterval)),e.classRepository=r?new p(e.opendolphin):new f,r)e.classRepository.onBeanUpdate(function(t,r,n,o,i){var a=e.updatedHandlers.get(t);c(a)&&a.forEach(function(e){e(r,n,o,i)}),e.allUpdatedHandlers.forEach(function(e){e(r,n,o,i)})}),e.classRepository.onArrayUpdate(function(t,r,n,o,i,a){var s=e.arrayUpdatedHandlers.get(t);c(s)&&s.forEach(function(e){e(r,n,o,i,a)}),e.allArrayUpdatedHandlers.forEach(function(e){e(r,n,o,i,a)})});else{var a=!1;!function s(){setTimeout(function(){Platform.performMicrotaskCheckpoint(),a||s()},i)}(),e.shutdown=function(){a=!0}}e.opendolphin.getClientModelStore().onModelStoreChange(function(t){var r=t.clientPresentationModel,i=r.findAttributeByPropertyName(m);c(i)&&i.value===w&&(t.eventType===opendolphin.Type.ADDED?n(e,r):t.eventType===opendolphin.Type.REMOVED&&o(e,r))}),e.ready=!0}function a(e,t,r){this.addedHandlers=new u,this.removedHandlers=new u,this.updatedHandlers=new u,this.arrayUpdatedHandlers=new u,this.allAddedHandlers=[],this.allRemovedHandlers=[],this.allUpdatedHandlers=[],this.allArrayUpdatedHandlers=[],this.ready=!1;var n=opendolphin.makeDolphin().url(e).reset(t).slackMS(4);c(r)&&c(r.errorHandler)&&n.errorHandler(r.errorHandler),this.opendolphin=n.build()}e(\"./polyfills.js\");var s,u=e(\"../bower_components/core.js/library/fn/map\"),l=e(\"../bower_components/core.js/library/fn/promise\"),c=e(\"./utils.js\").exists,f=e(\"./classrepo.js\").ClassRepository,p=e(\"./newclassrepo.js\").ClassRepository;r.connect=function(e,t){var r=new a(e,!0);return i(r,t,!1),r},r.connect2=function(e,t){var r=new a(e,!1,t);return s=new l(function(n,o){var a=new XMLHttpRequest;a.withCredentials=!0,a.onload=function(){200==a.status?(i(r,t,!0),n()):o(Error(a.statusText))},a.onerror=function(){o(Error(\"Network Error\"))},a.open(\"POST\",e+\"invalidate?\"),a.send()}),r};var d=\"@@@ DOLPHIN_BEAN @@@\",h=\"@@@ LIST_ADD @@@\",y=\"@@@ LIST_DEL @@@\",v=\"@@@ LIST_SET @@@\",m=\"@@@ SOURCE_SYSTEM @@@\",b=\"client\",w=\"server\";a.prototype.notifyBeanChange=function(e,t,r){return this.classRepository.notifyBeanChange(e,t,r)},a.prototype.notifyArrayChange=function(e,t,r,n,o){this.classRepository.notifyArrayChange(e,t,r,n,o)},a.prototype.isManaged=function(e){throw new Error(\"Not implemented yet\")},a.prototype.create=function(e){throw new Error(\"Not implemented yet\")},a.prototype.add=function(e,t){throw new Error(\"Not implemented yet\")},a.prototype.addAll=function(e,t){throw new Error(\"Not implemented yet\")},a.prototype.remove=function(e){throw new Error(\"Not implemented yet\")},a.prototype.removeAll=function(e){throw new Error(\"Not implemented yet\")},a.prototype.removeIf=function(e){throw new Error(\"Not implemented yet\")},a.prototype.onAdded=function(e,t){var r=this;if(c(t)){var n=r.addedHandlers.get(e);return c(n)||(n=[]),r.addedHandlers.set(e,n.concat(t)),{unsubscribe:function(){var n=r.addedHandlers.get(e);c(n)&&r.addedHandlers.set(e,n.filter(function(e){return e!==t}))}}}return t=e,r.allAddedHandlers=r.allAddedHandlers.concat(t),{unsubscribe:function(){r.allAddedHandlers=r.allAddedHandlers.filter(function(e){return e!==t})}}},a.prototype.onRemoved=function(e,t){var r=this;if(c(t)){var n=r.removedHandlers.get(e);return c(n)||(n=[]),r.removedHandlers.set(e,n.concat(t)),{unsubscribe:function(){var n=r.removedHandlers.get(e);c(n)&&r.removedHandlers.set(e,n.filter(function(e){return e!==t}))}}}return t=e,r.allRemovedHandlers=r.allRemovedHandlers.concat(t),{unsubscribe:function(){r.allRemovedHandlers=r.allRemovedHandlers.filter(function(e){return e!==t})}}},a.prototype.onBeanUpdate=function(e,t){var r=this;if(c(t)){var n=r.updatedHandlers.get(e);return c(n)||(n=[]),r.updatedHandlers.set(e,n.concat(t)),{unsubscribe:function(){var n=r.updatedHandlers.get(e);c(n)&&r.updatedHandlers.set(e,n.filter(function(e){return e!==t}))}}}return t=e,r.allUpdatedHandlers=r.allUpdatedHandlers.concat(t),{unsubscribe:function(){r.allUpdatedHandlers=r.allUpdatedHandlers.filter(function(e){return e!==t})}}},a.prototype.onArrayUpdate=function(e,t){var r=this;if(c(t)){var n=r.arrayUpdatedHandlers.get(e);return c(n)||(n=[]),r.arrayUpdatedHandlers.set(e,n.concat(t)),{unsubscribe:function(){var n=r.arrayUpdatedHandlers.get(e);c(n)&&r.arrayUpdatedHandlers.set(e,n.filter(function(e){return e!==t}))}}}return t=e,r.allArrayUpdatedHandlers=r.allArrayUpdatedHandlers.concat(t),{unsubscribe:function(){r.allArrayUpdatedHandlers=r.allArrayUpdatedHandlers.filter(function(e){return e!==t})}}},a.prototype.send=function(e,t){if(c(t)){var r=[this.opendolphin.attribute(m,null,b)];for(var n in t)if(t.hasOwnProperty(n)){var o=this.classRepository.mapParamToDolphin(t[n]);r.push(this.opendolphin.attribute(n,null,o.value,\"VALUE\")),r.push(this.opendolphin.attribute(n,null,o.type,\"VALUE_TYPE\"))}this.opendolphin.presentationModel.apply(this.opendolphin,[null,\"@@@ DOLPHIN_PARAMETER @@@\"].concat(r))}var i=this.opendolphin,a=function(t){i.send(e,{onFinished:function(){t()}})},u=this.ready?a:function(e){s.then(function(){a(e)})};return new l(u)}},{\"../bower_components/core.js/library/fn/map\":2,\"../bower_components/core.js/library/fn/promise\":3,\"./classrepo.js\":26,\"./newclassrepo.js\":27,\"./polyfills.js\":28,\"./utils.js\":29}],2:[function(e,t,r){e(\"../modules/es6.string.iterator\"),e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.map\"),t.exports=e(\"../modules/$\").core.Map},{\"../modules/$\":14,\"../modules/es6.map\":22,\"../modules/es6.string.iterator\":24,\"../modules/web.dom.iterable\":25}],3:[function(e,t,r){e(\"../modules/es6.string.iterator\"),e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.promise\"),t.exports=e(\"../modules/$\").core.Promise},{\"../modules/$\":14,\"../modules/es6.promise\":23,\"../modules/es6.string.iterator\":24,\"../modules/web.dom.iterable\":25}],4:[function(e,t,r){function n(e,t,r){if(!e)throw TypeError(r?t+r:t)}var o=e(\"./$\");n.def=o.assertDefined,n.fn=function(e){if(!o.isFunction(e))throw TypeError(e+\" is not a function!\");return e},n.obj=function(e){if(!o.isObject(e))throw TypeError(e+\" is not an object!\");return e},n.inst=function(e,t,r){if(!(e instanceof t))throw TypeError(r+\": use the 'new' operator!\");return e},t.exports=n},{\"./$\":14}],5:[function(e,t,r){function n(e){return a.call(e).slice(8,-1)}var o=e(\"./$\"),i=e(\"./$.wks\")(\"toStringTag\"),a={}.toString;n.classof=function(e){var t,r;return void 0==e?void 0===e?\"Undefined\":\"Null\":\"string\"==typeof(r=(t=Object(e))[i])?r:n(t)},n.set=function(e,t,r){e&&!o.has(e=r?e:e.prototype,i)&&o.hide(e,i,t)},t.exports=n},{\"./$\":14,\"./$.wks\":20}],6:[function(e,t,r){\"use strict\";function n(e,t){if(!p(e))return(\"string\"==typeof e?\"S\":\"P\")+e;if(y(e))return\"F\";if(!c(e,v)){if(!t)return\"E\";d(e,v,++E)}return\"O\"+e[v]}function o(e,t){var r,o=n(t);if(\"F\"!=o)return e[m][o];for(r=e[w];r;r=r.n)if(r.k==t)return r}var i=e(\"./$\"),a=e(\"./$.ctx\"),s=e(\"./$.uid\").safe,u=e(\"./$.assert\"),l=e(\"./$.iter\"),c=i.has,f=i.set,p=i.isObject,d=i.hide,h=l.step,y=Object.isFrozen||i.core.Object.isFrozen,v=s(\"id\"),m=s(\"O1\"),b=s(\"last\"),w=s(\"first\"),g=s(\"iter\"),$=i.DESC?s(\"size\"):\"size\",E=0;t.exports={getConstructor:function(e,t,r){function n(o){var a=u.inst(this,n,e);f(a,m,i.create(null)),f(a,$,0),f(a,b,void 0),f(a,w,void 0),void 0!=o&&l.forOf(o,t,a[r],a)}return i.mix(n.prototype,{clear:function(){for(var e=this,t=e[m],r=e[w];r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete t[r.i];e[w]=e[b]=void 0,e[$]=0},\"delete\":function(e){var t=this,r=o(t,e);if(r){var n=r.n,i=r.p;delete t[m][r.i],r.r=!0,i&&(i.n=n),n&&(n.p=i),t[w]==r&&(t[w]=n),t[b]==r&&(t[b]=i),t[$]--}return!!r},forEach:function(e){for(var t,r=a(e,arguments[1],3);t=t?t.n:this[w];)for(r(t.v,t.k,this);t&&t.r;)t=t.p},has:function(e){return!!o(this,e)}}),i.DESC&&i.setDesc(n.prototype,\"size\",{get:function(){return u.def(this[$])}}),n},def:function(e,t,r){var i,a,s=o(e,t);return s?s.v=r:(e[b]=s={i:a=n(t,!0),k:t,v:r,p:i=e[b],n:void 0,r:!1},e[w]||(e[w]=s),i&&(i.n=s),e[$]++,\"F\"!=a&&(e[m][a]=s)),e},getEntry:o,getIterConstructor:function(){return function(e,t){f(this,g,{o:e,k:t})}},next:function(){for(var e=this[g],t=e.k,r=e.l;r&&r.r;)r=r.p;return e.o&&(e.l=r=r?r.n:e.o[w])?\"key\"==t?h(0,r.k):\"value\"==t?h(0,r.v):h(0,[r.k,r.v]):(e.o=void 0,h(1))}}},{\"./$\":14,\"./$.assert\":4,\"./$.ctx\":8,\"./$.iter\":13,\"./$.uid\":18}],7:[function(e,t,r){\"use strict\";var n=e(\"./$\"),o=e(\"./$.def\"),i=e(\"./$.iter\"),a=e(\"./$.assert\").inst;t.exports=function(t,r,s,u,l){function c(e,t){var r=h[e];n.FW&&(h[e]=function(e,n){var o=r.call(this,0===e?0:e,n);return t?this:o})}var f=n.g[t],p=f,d=u?\"set\":\"add\",h=p&&p.prototype,y={};if(n.isFunction(p)&&(l||!i.BUGGY&&h.forEach&&h.entries)){var v,m=new p,b=m[d](l?{}:-0,1);e(\"./$.iter-detect\")(function(e){new p(e)})||(p=function(e){a(this,p,t);var r=new f;return void 0!=e&&i.forOf(e,u,r[d],r),r},p.prototype=h,n.FW&&(h.constructor=p)),l||m.forEach(function(e,t){v=1/t===-(1/0)}),v&&(c(\"delete\"),c(\"has\"),u&&c(\"get\")),(v||b!==m)&&c(d,!0)}else p=s.getConstructor(t,u,d),n.mix(p.prototype,r);return e(\"./$.cof\").set(p,t),e(\"./$.species\")(p),y[t]=p,o(o.G+o.W+o.F*(p!=f),y),l||i.std(p,t,s.getIterConstructor(),s.next,u?\"key+value\":\"value\",!u,!0),p}},{\"./$\":14,\"./$.assert\":4,\"./$.cof\":5,\"./$.def\":9,\"./$.iter\":13,\"./$.iter-detect\":12,\"./$.species\":15}],8:[function(e,t,r){var n=e(\"./$.assert\").fn;t.exports=function(e,t,r){if(n(e),~r&&void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},{\"./$.assert\":4}],9:[function(e,t,r){function n(e,t){return function(){return e.apply(t,arguments)}}function o(e,t,r){var l,c,f,p,d=e&o.G,h=d?a:e&o.S?a[t]:(a[t]||{}).prototype,y=d?s:s[t]||(s[t]={});d&&(r=t);for(l in r)c=!(e&o.F)&&h&&l in h,c&&l in y||(f=c?h[l]:r[l],d&&!u(h[l])?p=r[l]:e&o.B&&c?p=n(f,a):e&o.W&&h[l]==f?!function(e){p=function(t){return this instanceof e?new e(t):e(t)},p.prototype=e.prototype}(f):p=e&o.P&&u(f)?n(Function.call,f):f,i.hide(y,l,p))}var i=e(\"./$\"),a=i.g,s=i.core,u=i.isFunction;o.F=1,o.G=2,o.S=4,o.P=8,o.B=16,o.W=32,t.exports=o},{\"./$\":14}],10:[function(e,t,r){t.exports=function(e){return e.FW=!1,e.path=e.core,e}},{}],11:[function(e,t,r){t.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3]);case 5:return n?e(t[0],t[1],t[2],t[3],t[4]):e.call(r,t[0],t[1],t[2],t[3],t[4])}return e.apply(r,t)}},{}],12:[function(e,t,r){var n=e(\"./$.wks\")(\"iterator\"),o=!1;try{var i=[7][n]();i[\"return\"]=function(){o=!0},Array.from(i,function(){throw 2})}catch(a){}t.exports=function(e){if(!o)return!1;var t=!1;try{var r=[7],i=r[n]();i.next=function(){t=!0},r[n]=function(){return i},e(r)}catch(a){}return t}},{\"./$.wks\":20}],13:[function(e,t,r){\"use strict\";function n(e,t){u.hide(e,d,t),h in[]&&u.hide(e,h,t)}function o(e,t,r,o){var i=e.prototype,a=i[d]||i[h]||o&&i[o]||r;if(u.FW&&n(i,a),a!==r){var s=u.getProto(a.call(new e));c.set(s,t+\" Iterator\",!0),u.FW&&u.has(i,h)&&n(s,u.that)}return y[t]=a,y[t+\" Iterator\"]=u.that,a}function i(e){var t=u.g.Symbol,r=e[t&&t.iterator||h],n=r||e[d]||y[c.classof(e)];return p(n.call(e))}function a(e){var t=e[\"return\"];void 0!==t&&p(t.call(e))}function s(e,t,r,n){try{return n?t(p(r)[0],r[1]):t(r)}catch(o){throw a(e),o}}var u=e(\"./$\"),l=e(\"./$.ctx\"),c=e(\"./$.cof\"),f=e(\"./$.def\"),p=e(\"./$.assert\").obj,d=e(\"./$.wks\")(\"iterator\"),h=\"@@iterator\",y={},v={},m=\"keys\"in[]&&!(\"next\"in[].keys());n(v,u.that);var b=t.exports={BUGGY:m,Iterators:y,prototype:v,step:function(e,t){return{value:t,done:!!e}},stepCall:s,close:a,is:function(e){var t=Object(e),r=u.g.Symbol,n=r&&r.iterator||h;return n in t||d in t||u.has(y,c.classof(t))},get:i,set:n,create:function(e,t,r,n){e.prototype=u.create(n||b.prototype,{next:u.desc(1,r)}),c.set(e,t+\" Iterator\")},define:o,std:function(e,t,r,n,i,a,s){function l(e){return function(){return new r(this,e)}}b.create(r,t,n);var c,p,d=l(\"key+value\"),h=l(\"value\"),y=e.prototype;if(\"value\"==i?h=o(e,t,h,\"values\"):d=o(e,t,d,\"entries\"),i&&(c={entries:d,keys:a?h:l(\"key\"),values:h},f(f.P+f.F*m,t,c),s))for(p in c)p in y||u.hide(y,p,c[p])},forOf:function(e,t,r,n){for(var o,u=i(e),c=l(r,n,t?2:1);!(o=u.next()).done;)if(s(u,c,o.value,t)===!1)return a(u)}}},{\"./$\":14,\"./$.assert\":4,\"./$.cof\":5,\"./$.ctx\":8,\"./$.def\":9,\"./$.wks\":20}],14:[function(e,t,r){\"use strict\";function n(e){return isNaN(e=+e)?0:(e>0?y:h)(e)}function o(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}function i(e,t,r){return e[t]=r,e}function a(e){return b?function(t,r,n){return g.setDesc(t,r,o(e,n))}:i}function s(e){return null!==e&&(\"object\"==typeof e||\"function\"==typeof e)}function u(e){return\"function\"==typeof e}function l(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}var c=\"undefined\"!=typeof self?self:Function(\"return this\")(),f={},p=Object.defineProperty,d={}.hasOwnProperty,h=Math.ceil,y=Math.floor,v=Math.max,m=Math.min,b=!!function(){try{return 2==p({},\"a\",{get:function(){return 2}}).a}catch(e){}}(),w=a(1),g=t.exports=e(\"./$.fw\")({g:c,core:f,html:c.document&&document.documentElement,isObject:s,isFunction:u,it:function(e){return e},that:function(){return this},toInteger:n,toLength:function(e){return e>0?m(n(e),9007199254740991):0},toIndex:function(e,t){return e=n(e),0>e?v(e+t,0):m(e,t)},has:function(e,t){return d.call(e,t)},create:Object.create,getProto:Object.getPrototypeOf,DESC:b,desc:o,getDesc:Object.getOwnPropertyDescriptor,setDesc:p,getKeys:Object.keys,getNames:Object.getOwnPropertyNames,getSymbols:Object.getOwnPropertySymbols,assertDefined:l,ES5Object:Object,toObject:function(e){return g.ES5Object(l(e))},hide:w,def:a(0),set:c.Symbol?i:w,mix:function(e,t){for(var r in t)w(e,r,t[r]);return e},each:[].forEach});\"undefined\"!=typeof __e&&(__e=f),\"undefined\"!=typeof __g&&(__g=c)},{\"./$.fw\":10}],15:[function(e,t,r){var n=e(\"./$\");t.exports=function(t){n.DESC&&n.FW&&n.setDesc(t,e(\"./$.wks\")(\"species\"),{configurable:!0,get:n.that})}},{\"./$\":14,\"./$.wks\":20}],16:[function(e,t,r){\"use strict\";var n=e(\"./$\");t.exports=function(e){return function(t){var r,o,i=String(n.assertDefined(this)),a=n.toInteger(t),s=i.length;return 0>a||a>=s?e?\"\":void 0:(r=i.charCodeAt(a),55296>r||r>56319||a+1===s||(o=i.charCodeAt(a+1))<56320||o>57343?e?i.charAt(a):r:e?i.slice(a,a+2):(r-55296<<10)+(o-56320)+65536)}}},{\"./$\":14}],17:[function(e,t,r){\"use strict\";function n(){var e=+this;if(u.has(A,e)){var t=A[e];delete A[e],t()}}function o(e){n.call(e.data)}var i,a,s,u=e(\"./$\"),l=e(\"./$.ctx\"),c=e(\"./$.cof\"),f=e(\"./$.invoke\"),p=u.g,d=u.isFunction,h=u.html,y=p.document,v=p.process,m=p.setImmediate,b=p.clearImmediate,w=p.postMessage,g=p.addEventListener,$=p.MessageChannel,E=0,A={},N=\"onreadystatechange\";d(m)&&d(b)||(m=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return A[++E]=function(){f(d(e)?e:Function(e),t)},i(E),E},b=function(e){delete A[e]},\"process\"==c(v)?i=function(e){v.nextTick(l(n,e,1))}:g&&d(w)&&!p.importScripts?(i=function(e){w(e,\"*\")},g(\"message\",o,!1)):d($)?(a=new $,s=a.port2,a.port1.onmessage=o,i=l(s.postMessage,s,1)):i=y&&N in y.createElement(\"script\")?function(e){h.appendChild(y.createElement(\"script\"))[N]=function(){h.removeChild(this),n.call(e)}}:function(e){setTimeout(l(n,e,1),0)}),t.exports={set:m,clear:b}},{\"./$\":14,\"./$.cof\":5,\"./$.ctx\":8,\"./$.invoke\":11}],18:[function(e,t,r){function n(e){return\"Symbol(\"+e+\")_\"+(++o+Math.random()).toString(36)}var o=0;n.safe=e(\"./$\").g.Symbol||n,t.exports=n},{\"./$\":14}],19:[function(e,t,r){var n=e(\"./$\"),o=e(\"./$.wks\")(\"unscopables\");!n.FW||o in[]||n.hide(Array.prototype,o,{}),t.exports=function(e){n.FW&&([][o][e]=!0)}},{\"./$\":14,\"./$.wks\":20}],20:[function(e,t,r){var n=e(\"./$\").g,o={};t.exports=function(t){return o[t]||(o[t]=n.Symbol&&n.Symbol[t]||e(\"./$.uid\").safe(\"Symbol.\"+t))}},{\"./$\":14,\"./$.uid\":18}],21:[function(e,t,r){var n=e(\"./$\"),o=e(\"./$.unscope\"),i=e(\"./$.uid\").safe(\"iter\"),a=e(\"./$.iter\"),s=a.step,u=a.Iterators;a.std(Array,\"Array\",function(e,t){n.set(this,i,{o:n.toObject(e),i:0,k:t})},function(){var e=this[i],t=e.o,r=e.k,n=e.i++;return!t||n>=t.length?(e.o=void 0,s(1)):\"key\"==r?s(0,n):\"value\"==r?s(0,t[n]):s(0,[n,t[n]])},\"value\"),u.Arguments=u.Array,o(\"keys\"),o(\"values\"),o(\"entries\")},{\"./$\":14,\"./$.iter\":13,\"./$.uid\":18,\"./$.unscope\":19}],22:[function(e,t,r){\"use strict\";var n=e(\"./$.collection-strong\");e(\"./$.collection\")(\"Map\",{get:function(e){var t=n.getEntry(this,e);return t&&t.v},set:function(e,t){return n.def(this,0===e?0:e,t)}},n,!0)},{\"./$.collection\":7,\"./$.collection-strong\":6}],23:[function(e,t,r){\"use strict\";function n(e){var t=D(e)[v];return void 0!=t?t:e}function o(e){var t;return j(e)&&(t=e.then),P(t)?t:!1}function i(e){var t,r=e[m],n=r.c,o=0;if(r.h)return!1;for(;n.length>o;)if(t=n[o++],t.fail||!i(t.P))return!1;return!0}function a(e,t){var r=e.c;(t||r.length)&&E(function(){var n=e.p,a=e.v,s=1==e.s,u=0;if(t&&i(n))setTimeout(function(){i(n)&&(\"process\"==p($)?$.emit(\"unhandledRejection\",a,n):g.console&&P(console.error)&&console.error(\"Unhandled promise rejection\",a))},1e3);else for(;r.length>u;)!function(t){var r,n,i=s?t.ok:t.fail;try{i?(s||(e.h=!0),r=i===!0?a:i(a),r===t.P?t.rej(TypeError(w+\"-chain cycle\")):(n=o(r))?n.call(r,t.res,t.rej):t.res(r)):t.rej(a)}catch(u){t.rej(u)}}(r[u++]);r.length=0})}function s(e){var t=this;t.d||(t.d=!0,t=t.r||t,t.v=e,t.s=2,a(t,!0))}function u(e){var t,r,n=this;if(!n.d){n.d=!0,n=n.r||n;try{(t=o(e))?(r={r:n,d:!1},t.call(e,f(u,r,1),f(s,r,1))):(n.v=e,n.s=1,a(n))}catch(i){s.call(r||{r:n,d:!1},i)}}}var l,c=e(\"./$\"),f=e(\"./$.ctx\"),p=e(\"./$.cof\"),d=e(\"./$.def\"),h=e(\"./$.assert\"),y=e(\"./$.iter\"),v=e(\"./$.wks\")(\"species\"),m=e(\"./$.uid\").safe(\"record\"),b=y.forOf,w=\"Promise\",g=c.g,$=g.process,E=$&&$.nextTick||e(\"./$.task\").set,A=g[w],N=A,P=c.isFunction,j=c.isObject,T=h.fn,D=h.obj;P(A)&&P(A.resolve)&&A.resolve(l=new A(function(){}))==l||(A=function(e){T(e);var t={p:h.inst(this,A,w),c:[],s:0,d:!1,v:void 0,h:!1};c.hide(this,m,t);try{e(f(u,t,1),f(s,t,1))}catch(r){s.call(t,r)}},c.mix(A.prototype,{then:function(e,t){var r=D(D(this).constructor)[v],n={ok:P(e)?e:!0,fail:P(t)?t:!1},o=n.P=new(void 0!=r?r:A)(function(e,t){n.res=T(e),n.rej=T(t)}),i=this[m];return i.c.push(n),i.s&&a(i),o},\"catch\":function(e){return this.then(void 0,e)}})),d(d.G+d.W+d.F*(A!=N),{Promise:A}),p.set(A,w),e(\"./$.species\")(A),d(d.S,w,{reject:function(e){return new(n(this))(function(t,r){r(e)})},resolve:function(e){return j(e)&&m in e&&c.getProto(e)===this.prototype?e:new(n(this))(function(t){t(e)})}}),d(d.S+d.F*!e(\"./$.iter-detect\")(function(e){A.all(e)[\"catch\"](function(){})}),w,{all:function(e){var t=n(this),r=[];return new t(function(n,o){b(e,!1,r.push,r);var i=r.length,a=Array(i);i?c.each.call(r,function(e,r){t.resolve(e).then(function(e){a[r]=e,--i||n(a)},o)}):n(a)})},race:function(e){var t=n(this);return new t(function(r,n){b(e,!1,function(e){t.resolve(e).then(r,n)})})}})},{\"./$\":14,\"./$.assert\":4,\"./$.cof\":5,\"./$.ctx\":8,\"./$.def\":9,\"./$.iter\":13,\"./$.iter-detect\":12,\"./$.species\":15,\"./$.task\":17,\"./$.uid\":18,\"./$.wks\":20}],24:[function(e,t,r){var n=e(\"./$\").set,o=e(\"./$.string-at\")(!0),i=e(\"./$.uid\").safe(\"iter\"),a=e(\"./$.iter\"),s=a.step;a.std(String,\"String\",function(e){n(this,i,{o:String(e),i:0})},function(){var e,t=this[i],r=t.o,n=t.i;return n>=r.length?s(1):(e=o.call(r,n),t.i+=e.length,s(0,e))})},{\"./$\":14,\"./$.iter\":13,\"./$.string-at\":16,\"./$.uid\":18}],25:[function(e,t,r){e(\"./es6.array.iterator\");var n=e(\"./$\"),o=e(\"./$.iter\").Iterators,i=e(\"./$.wks\")(\"iterator\"),a=o.Array,s=n.g.NodeList;!n.FW||!s||i in s.prototype||n.hide(s.prototype,i,a),o.NodeList=a},{\"./$\":14,\"./$.iter\":13,\"./$.wks\":20,\"./es6.array.iterator\":21}],26:[function(e,t,r){\"use strict\";function n(e,t,r){return t===p?e.beanFromDolphin.get(r):r}function o(e,t,r){return t===p?e.beanToDolphin.get(r):r}function i(e,t,r,n,o){var i=e[t];l(i)?Array.isArray(i)||(e[t]=i=[i]):e[t]=i=[],\"undefined\"==typeof o?i.splice(r,n):i.splice(r,n,o)}function a(){this.classes=new u,this.beanFromDolphin=new u,this.beanToDolphin=new u,this.classInfos=new u}e(\"./polyfills.js\");var s=window.ObjectObserver,u=e(\"../bower_components/core.js/library/fn/map\"),l=e(\"./utils.js\").exists,c=0,f=1,p=2;a.prototype.registerClass=function(e){if(!this.classes.has(e.id)){var t={};e.attributes.forEach(function(e){t[e.propertyName]=c,e.onValueChange(function(r){t[e.propertyName]=r.newValue})}),this.classes.set(e.id,t)}},a.prototype.unregisterClass=function(e){this.classes[\"delete\"](e.id)},a.prototype.load=function(e){var t=this,r=this.classes.get(e.presentationModelType),i={};e.attributes.filter(function(e){return e.tag===opendolphin.Tag.value()}).forEach(function(e){i[e.propertyName]=null,e.onValueChange(function(o){o.oldValue!==o.newValue&&(i[e.propertyName]=n(t,r[e.propertyName],o.newValue))})});var a=new s(i);return a.open(function(n,i,a){Object.keys(n).forEach(function(i){var a=e.findAttributeByPropertyName(i);if(l(a)){var s=o(t,r[i],n[i]);a.setValue(s)}}),Object.keys(i).forEach(function(t){var r=e.findAttributeByPropertyName(t);l(r)&&r.setValue(null)}),Object.keys(a).forEach(function(n){var i=e.findAttributeByPropertyName(n);if(l(i)){var s=o(t,r[n],a[n]);i.setValue(s)}})}),this.beanFromDolphin.set(e.id,i),this.beanToDolphin.set(i,e.id),this.classInfos.set(e.id,r),i},a.prototype.unload=function(e){var t=this.beanFromDolphin.get(e.id);return this.beanFromDolphin[\"delete\"](e.id),this.beanToDolphin[\"delete\"](t),this.classInfos[\"delete\"](e.id),t},a.prototype.addListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),o=e.findAttributeByPropertyName(\"pos\"),a=e.findAttributeByPropertyName(\"element\");if(!(l(t)&&l(r)&&l(o)&&l(a)))throw new Error(\"Invalid list modification update received\");var s=this.classInfos.get(t.value),u=this.beanFromDolphin.get(t.value);if(!l(u)||!l(s))throw new Error(\"Invalid list modification update received. Source bean unknown.\");var c=n(this,s[r.value],a.value);i(u,r.value,o.value,0,c)},a.prototype.delListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),n=e.findAttributeByPropertyName(\"from\"),o=e.findAttributeByPropertyName(\"to\");if(!(l(t)&&l(r)&&l(n)&&l(o)))throw new Error(\"Invalid list modification update received\");var a=this.beanFromDolphin.get(t.value);if(!l(a))throw new Error(\"Invalid list modification update received. Source bean unknown.\");i(a,r.value,n.value,o.value-n.value)},a.prototype.setListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),o=e.findAttributeByPropertyName(\"pos\"),a=e.findAttributeByPropertyName(\"element\");if(!(l(t)&&l(r)&&l(o)&&l(a)))throw new Error(\"Invalid list modification update received\");var s=this.classInfos.get(t.value),u=this.beanFromDolphin.get(t.value);if(!l(u)||!l(s))throw new Error(\"Invalid list modification update received. Source bean unknown.\");var c=n(this,s[r.value],a.value);i(u,r.value,o.value,1,c)},a.prototype.mapParamToDolphin=function(e){if(!l(e))return{value:e,type:c};var t=typeof e;if(\"object\"===t){var r=this.beanToDolphin.get(e);if(l(r))return{value:r,type:p};throw new TypeError(\"Only managed Dolphin Beans can be used\")}if(\"string\"===t||\"number\"===t||\"boolean\"===t)return{value:e,type:f};throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\")},r.ClassRepository=a,r.UNKNOWN=c,r.BASIC_TYPE=f,r.DOLPHIN_BEAN=p},{\"../bower_components/core.js/library/fn/map\":2,\"./polyfills.js\":28,\"./utils.js\":29}],27:[function(e,t,r){\"use strict\";function n(e,t,r){return null===r?null:t===v?e.beanFromDolphin.get(r):r}function o(e,t){return\"object\"==typeof t?e.beanToDolphin.get(t):t}function i(e,t,r,n,o){var i=[e.attribute(\"@@@ SOURCE_SYSTEM @@@\",null,\"client\"),e.attribute(\"source\",null,t),e.attribute(\"attribute\",null,r),e.attribute(\"pos\",null,n),e.attribute(\"element\",null,o)];e.presentationModel.apply(e,[null,\"@@@ LIST_ADD @@@\"].concat(i))}function a(e,t,r,n,o){var i=[e.attribute(\"@@@ SOURCE_SYSTEM @@@\",null,\"client\"),e.attribute(\"source\",null,t),e.attribute(\"attribute\",null,r),e.attribute(\"from\",null,n),e.attribute(\"to\",null,o)];e.presentationModel.apply(e,[null,\"@@@ LIST_DEL @@@\"].concat(i))}function s(e,t,r,n){var o=r[n];d(o)||e.propertyUpdateHandlers.forEach(function(e){e(t,r,n,[],void 0)})}function u(e,t){if(d(m))throw new Error(\"Trying to create a block while another block exists\");m={bean:e,propertyName:t}}function l(e,t){return d(m)&&m.bean===e&&m.propertyName===t}function c(){m=null}function f(e){this.dolphin=e,this.classes=new p,this.beanFromDolphin=new p,this.beanToDolphin=new p,this.classInfos=new p,this.propertyUpdateHandlers=[],this.arrayUpdateHandlers=[]}e(\"./polyfills.js\");var p=(window.ObjectObserver,e(\"../bower_components/core.js/library/fn/map\")),d=e(\"./utils.js\").exists,h=0,y=1,v=2,m=null;f.prototype.notifyBeanChange=function(e,t,r){var i=this.beanToDolphin.get(e);if(d(i)){var a=this.dolphin.findPresentationModelById(i);if(d(a)){var s=this.classes.get(a.presentationModelType),u=s[t],l=a.findAttributeByPropertyName(t);if(d(u)&&d(l)){var c=l.getValue();return l.setValue(o(this,r)),n(this,u,c)}}}},f.prototype.notifyArrayChange=function(e,t,r,n,s){if(!l(e,t)){var u=this.beanToDolphin.get(e),c=e[t];if(d(u)&&d(c)){Array.isArray(s)&&s.length>0&&a(this.dolphin,u,t,r,r+s.length);for(var f=r;r+n>f;f++)i(this.dolphin,u,t,f,o(this,c[f]))}}},f.prototype.onBeanUpdate=function(e){this.propertyUpdateHandlers.push(e)},f.prototype.onArrayUpdate=function(e){this.arrayUpdateHandlers.push(e)},f.prototype.registerClass=function(e){if(!this.classes.has(e.id)){var t={};e.attributes.filter(function(e){return e.propertyName.search(/^@@@ /)<0}).forEach(function(e){t[e.propertyName]=h,e.onValueChange(function(r){t[e.propertyName]=r.newValue})}),this.classes.set(e.id,t)}},f.prototype.unregisterClass=function(e){this.classes[\"delete\"](e.id)},f.prototype.load=function(e){var t=this,r=this.classes.get(e.presentationModelType),o={};return e.attributes.filter(function(e){return e.tag===opendolphin.Tag.value()&&e.propertyName.search(/^@@@ /)<0}).forEach(function(i){o[i.propertyName]=null,i.onValueChange(function(a){if(a.oldValue!==a.newValue){var s=n(t,r[i.propertyName],a.oldValue),u=n(t,r[i.propertyName],a.newValue);t.propertyUpdateHandlers.forEach(function(t){t(e.presentationModelType,o,i.propertyName,u,s)})}})}),this.beanFromDolphin.set(e.id,o),this.beanToDolphin.set(o,e.id),this.classInfos.set(e.id,r),o},f.prototype.unload=function(e){var t=this.beanFromDolphin.get(e.id);return this.beanFromDolphin[\"delete\"](e.id),this.beanToDolphin[\"delete\"](t),this.classInfos[\"delete\"](e.id),t},f.prototype.addListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),o=e.findAttributeByPropertyName(\"pos\"),i=e.findAttributeByPropertyName(\"element\");if(!(d(t)&&d(r)&&d(o)&&d(i)))throw new Error(\"Invalid list modification update received\");var a=this.classInfos.get(t.value),l=this.beanFromDolphin.get(t.value);if(!d(l)||!d(a))throw new Error(\"Invalid list modification update received. Source bean unknown.\");var f=e.presentationModelType,p=n(this,a[r.value],i.value);s(this,f,l,r.value);try{u(l,r.value),this.arrayUpdateHandlers.forEach(function(e){e(f,l,r.value,o.value,0,p)})}finally{c()}},f.prototype.delListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),n=e.findAttributeByPropertyName(\"from\"),o=e.findAttributeByPropertyName(\"to\");if(!(d(t)&&d(r)&&d(n)&&d(o)))throw new Error(\"Invalid list modification update received\");var i=this.beanFromDolphin.get(t.value);if(!d(i))throw new Error(\"Invalid list modification update received. Source bean unknown.\");var a=e.presentationModelType;s(this,a,i,r.value);try{u(i,r.value),this.arrayUpdateHandlers.forEach(function(e){e(a,i,r.value,n.value,o.value-n.value)})}finally{c()}},f.prototype.setListEntry=function(e){var t=e.findAttributeByPropertyName(\"source\"),r=e.findAttributeByPropertyName(\"attribute\"),o=e.findAttributeByPropertyName(\"pos\"),i=e.findAttributeByPropertyName(\"element\");if(!(d(t)&&d(r)&&d(o)&&d(i)))throw new Error(\"Invalid list modification update received\");var a=this.classInfos.get(t.value),l=this.beanFromDolphin.get(t.value);if(!d(l)||!d(a))throw new Error(\"Invalid list modification update received. Source bean unknown.\");var f=e.presentationModelType,p=n(this,a[r.value],i.value);s(this,f,l,r.value);try{u(l,r.value),this.arrayUpdateHandlers.forEach(function(e){e(f,l,r.value,o.value,1,p)})}finally{c()}},f.prototype.mapParamToDolphin=function(e){if(!d(e))return{value:e,type:h};var t=typeof e;if(\"object\"===t){var r=this.beanToDolphin.get(e);if(d(r))return{value:r,type:v};throw new TypeError(\"Only managed Dolphin Beans can be used\")}if(\"string\"===t||\"number\"===t||\"boolean\"===t)return{value:e,type:y};throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\")},r.ClassRepository=f,r.UNKNOWN=h,r.BASIC_TYPE=y,r.DOLPHIN_BEAN=v},{\"../bower_components/core.js/library/fn/map\":2,\"./polyfills.js\":28,\"./utils.js\":29}],28:[function(e,t,r){Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var r,n;if(null==this)throw new TypeError(\" this is null or not defined\");var o=Object(this),i=o.length>>>0;if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");for(arguments.length>1&&(r=t),n=0;i>n;){var a;n in o&&(a=o[n],e.call(r,a,n,o)),n++}}),Array.prototype.filter||(Array.prototype.filter=function(e){\"use strict\";if(void 0===this||null===this)throw new TypeError;var t=Object(this),r=t.length>>>0;if(\"function\"!=typeof e)throw new TypeError;for(var n=[],o=arguments.length>=2?arguments[1]:void 0,i=0;r>i;i++)if(i in t){var a=t[i];e.call(o,a,i,t)&&n.push(a)}return n})},{}],29:[function(e,t,r){\"use strict\";t.exports.exists=function(e){return\"undefined\"!=typeof e&&null!==e}},{}]},{},[1])(1)});\n//# sourceMappingURL=dolphin.min.js.map","require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nmodule.exports = require('../modules/$').core.Map;","require('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/$').core.Promise;","var $ = require('./$');\nfunction assert(condition, msg1, msg2){\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\n}\nassert.def = $.assertDefined;\nassert.fn = function(it){\n  if(!$.isFunction(it))throw TypeError(it + ' is not a function!');\n  return it;\n};\nassert.obj = function(it){\n  if(!$.isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\nassert.inst = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\nmodule.exports = assert;","var $        = require('./$')\n  , TAG      = require('./$.wks')('toStringTag')\n  , toString = {}.toString;\nfunction cof(it){\n  return toString.call(it).slice(8, -1);\n}\ncof.classof = function(it){\n  var O, T;\n  return it == undefined ? it === undefined ? 'Undefined' : 'Null'\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : cof(O);\n};\ncof.set = function(it, tag, stat){\n  if(it && !$.has(it = stat ? it : it.prototype, TAG))$.hide(it, TAG, tag);\n};\nmodule.exports = cof;","'use strict';\nvar $        = require('./$')\n  , ctx      = require('./$.ctx')\n  , safe     = require('./$.uid').safe\n  , assert   = require('./$.assert')\n  , $iter    = require('./$.iter')\n  , has      = $.has\n  , set      = $.set\n  , isObject = $.isObject\n  , hide     = $.hide\n  , step     = $iter.step\n  , isFrozen = Object.isFrozen || $.core.Object.isFrozen\n  , ID       = safe('id')\n  , O1       = safe('O1')\n  , LAST     = safe('last')\n  , FIRST    = safe('first')\n  , ITER     = safe('iter')\n  , SIZE     = $.DESC ? safe('size') : 'size'\n  , id       = 0;\n\nfunction fastKey(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\n  // can't set id to frozen object\n  if(isFrozen(it))return 'F';\n  if(!has(it, ID)){\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n}\n\nfunction getEntry(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index != 'F')return that[O1][index];\n  // frozen object case\n  for(entry = that[FIRST]; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n}\n\nmodule.exports = {\n  getConstructor: function(NAME, IS_MAP, ADDER){\n    function C(iterable){\n      var that = assert.inst(this, C, NAME);\n      set(that, O1, $.create(null));\n      set(that, SIZE, 0);\n      set(that, LAST, undefined);\n      set(that, FIRST, undefined);\n      if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n    }\n    $.mix(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that[FIRST] = that[LAST] = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that[O1][entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that[FIRST] == entry)that[FIRST] = next;\n          if(that[LAST] == entry)that[LAST] = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments[1], 3)\n          , entry;\n        while(entry = entry ? entry.n : this[FIRST]){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if($.DESC)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return assert.def(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that[LAST] = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that[LAST],          // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that[FIRST])that[FIRST] = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index != 'F')that[O1][index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  getIterConstructor: function(){\n    return function(iterated, kind){\n      set(this, ITER, {o: iterated, k: kind});\n    };\n  },\n  next: function(){\n    var iter  = this[ITER]\n      , kind  = iter.k\n      , entry = iter.l;\n    // revert to the last existing entry\n    while(entry && entry.r)entry = entry.p;\n    // get next entry\n    if(!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])){\n      // or finish the iteration\n      iter.o = undefined;\n      return step(1);\n    }\n    // return step by kind\n    if(kind == 'key'  )return step(0, entry.k);\n    if(kind == 'value')return step(0, entry.v);\n    return step(0, [entry.k, entry.v]);\n  }\n};","'use strict';\nvar $     = require('./$')\n  , $def  = require('./$.def')\n  , $iter = require('./$.iter')\n  , assertInstance = require('./$.assert').inst;\n\nmodule.exports = function(NAME, methods, common, IS_MAP, isWeak){\n  var Base  = $.g[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  function fixMethod(KEY, CHAIN){\n    var method = proto[KEY];\n    if($.FW)proto[KEY] = function(a, b){\n      var result = method.call(this, a === 0 ? 0 : a, b);\n      return CHAIN ? this : result;\n    };\n  }\n  if(!$.isFunction(C) || !(isWeak || !$iter.BUGGY && proto.forEach && proto.entries)){\n    // create collection constructor\n    C = common.getConstructor(NAME, IS_MAP, ADDER);\n    $.mix(C.prototype, methods);\n  } else {\n    var inst  = new C\n      , chain = inst[ADDER](isWeak ? {} : -0, 1)\n      , buggyZero;\n    // wrap for init collections from iterable\n    if(!require('./$.iter-detect')(function(iter){ new C(iter); })){ // eslint-disable-line no-new\n      C = function(iterable){\n        assertInstance(this, C, NAME);\n        var that = new Base;\n        if(iterable != undefined)$iter.forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      };\n      C.prototype = proto;\n      if($.FW)proto.constructor = C;\n    }\n    isWeak || inst.forEach(function(val, key){\n      buggyZero = 1 / key === -Infinity;\n    });\n    // fix converting -0 key to +0\n    if(buggyZero){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    // + fix .add & .set for chaining\n    if(buggyZero || chain !== inst)fixMethod(ADDER, true);\n  }\n\n  require('./$.cof').set(C, NAME);\n  require('./$.species')(C);\n\n  O[NAME] = C;\n  $def($def.G + $def.W + $def.F * (C != Base), O);\n\n  // add .keys, .values, .entries, [@@iterator]\n  // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n  if(!isWeak)$iter.std(\n    C, NAME,\n    common.getIterConstructor(), common.next,\n    IS_MAP ? 'key+value' : 'value' , !IS_MAP, true\n  );\n\n  return C;\n};","// Optional / simple context binding\nvar assertFunction = require('./$.assert').fn;\nmodule.exports = function(fn, that, length){\n  assertFunction(fn);\n  if(~length && that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  } return function(/* ...args */){\n      return fn.apply(that, arguments);\n    };\n};","var $          = require('./$')\n  , global     = $.g\n  , core       = $.core\n  , isFunction = $.isFunction;\nfunction ctx(fn, that){\n  return function(){\n    return fn.apply(that, arguments);\n  };\n}\n// type bitmap\n$def.F = 1;  // forced\n$def.G = 2;  // global\n$def.S = 4;  // static\n$def.P = 8;  // proto\n$def.B = 16; // bind\n$def.W = 32; // wrap\nfunction $def(type, name, source){\n  var key, own, out, exp\n    , isGlobal = type & $def.G\n    , target   = isGlobal ? global : type & $def.S\n        ? global[name] : (global[name] || {}).prototype\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\n  if(isGlobal)source = name;\n  for(key in source){\n    // contains in native\n    own = !(type & $def.F) && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    if(isGlobal && !isFunction(target[key]))exp = source[key];\n    // bind timers to global for call from export context\n    else if(type & $def.B && own)exp = ctx(out, global);\n    // wrap global constructors for prevent change them in library\n    else if(type & $def.W && target[key] == out)!function(C){\n      exp = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      exp.prototype = C.prototype;\n    }(out);\n    else exp = type & $def.P && isFunction(out) ? ctx(Function.call, out) : out;\n    // export\n    $.hide(exports, key, exp);\n  }\n}\nmodule.exports = $def;","module.exports = function($){\n  $.FW   = false;\n  $.path = $.core;\n  return $;\n};","// Fast apply\n// http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n    case 5: return un ? fn(args[0], args[1], args[2], args[3], args[4])\n                      : fn.call(that, args[0], args[1], args[2], args[3], args[4]);\n  } return              fn.apply(that, args);\n};","var SYMBOL_ITERATOR = require('./$.wks')('iterator')\n  , SAFE_CLOSING    = false;\ntry {\n  var riter = [7][SYMBOL_ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\nmodule.exports = function(exec){\n  if(!SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[SYMBOL_ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[SYMBOL_ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","'use strict';\nvar $                 = require('./$')\n  , ctx               = require('./$.ctx')\n  , cof               = require('./$.cof')\n  , $def              = require('./$.def')\n  , assertObject      = require('./$.assert').obj\n  , SYMBOL_ITERATOR   = require('./$.wks')('iterator')\n  , FF_ITERATOR       = '@@iterator'\n  , Iterators         = {}\n  , IteratorPrototype = {};\n// Safari has byggy iterators w/o `next`\nvar BUGGY = 'keys' in [] && !('next' in [].keys());\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nsetIterator(IteratorPrototype, $.that);\nfunction setIterator(O, value){\n  $.hide(O, SYMBOL_ITERATOR, value);\n  // Add iterator for FF iterator protocol\n  if(FF_ITERATOR in [])$.hide(O, FF_ITERATOR, value);\n}\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\n  var proto = Constructor.prototype\n    , iter  = proto[SYMBOL_ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT] || value;\n  // Define iterator\n  if($.FW)setIterator(proto, iter);\n  if(iter !== value){\n    var iterProto = $.getProto(iter.call(new Constructor));\n    // Set @@toStringTag to native iterators\n    cof.set(iterProto, NAME + ' Iterator', true);\n    // FF fix\n    if($.FW)$.has(proto, FF_ITERATOR) && setIterator(iterProto, $.that);\n  }\n  // Plug for library\n  Iterators[NAME] = iter;\n  // FF & v8 fix\n  Iterators[NAME + ' Iterator'] = $.that;\n  return iter;\n}\nfunction getIterator(it){\n  var Symbol  = $.g.Symbol\n    , ext     = it[Symbol && Symbol.iterator || FF_ITERATOR]\n    , getIter = ext || it[SYMBOL_ITERATOR] || Iterators[cof.classof(it)];\n  return assertObject(getIter.call(it));\n}\nfunction closeIterator(iterator){\n  var ret = iterator['return'];\n  if(ret !== undefined)assertObject(ret.call(iterator));\n}\nfunction stepCall(iterator, fn, value, entries){\n  try {\n    return entries ? fn(assertObject(value)[0], value[1]) : fn(value);\n  } catch(e){\n    closeIterator(iterator);\n    throw e;\n  }\n}\nvar $iter = module.exports = {\n  BUGGY: BUGGY,\n  Iterators: Iterators,\n  prototype: IteratorPrototype,\n  step: function(done, value){\n    return {value: value, done: !!done};\n  },\n  stepCall: stepCall,\n  close: closeIterator,\n  is: function(it){\n    var O      = Object(it)\n      , Symbol = $.g.Symbol\n      , SYM    = Symbol && Symbol.iterator || FF_ITERATOR;\n    return SYM in O || SYMBOL_ITERATOR in O || $.has(Iterators, cof.classof(O));\n  },\n  get: getIterator,\n  set: setIterator,\n  create: function(Constructor, NAME, next, proto){\n    Constructor.prototype = $.create(proto || $iter.prototype, {next: $.desc(1, next)});\n    cof.set(Constructor, NAME + ' Iterator');\n  },\n  define: defineIterator,\n  std: function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCE){\n    function createIter(kind){\n      return function(){\n        return new Constructor(this, kind);\n      };\n    }\n    $iter.create(Constructor, NAME, next);\n    var entries = createIter('key+value')\n      , values  = createIter('value')\n      , proto   = Base.prototype\n      , methods, key;\n    if(DEFAULT == 'value')values = defineIterator(Base, NAME, values, 'values');\n    else entries = defineIterator(Base, NAME, entries, 'entries');\n    if(DEFAULT){\n      methods = {\n        entries: entries,\n        keys:    IS_SET ? values : createIter('key'),\n        values:  values\n      };\n      $def($def.P + $def.F * BUGGY, NAME, methods);\n      if(FORCE)for(key in methods){\n        if(!(key in proto))$.hide(proto, key, methods[key]);\n      }\n    }\n  },\n  forOf: function(iterable, entries, fn, that){\n    var iterator = getIterator(iterable)\n      , f = ctx(fn, that, entries ? 2 : 1)\n      , step;\n    while(!(step = iterator.next()).done){\n      if(stepCall(iterator, f, step.value, entries) === false){\n        return closeIterator(iterator);\n      }\n    }\n  }\n};","'use strict';\nvar global = typeof self != 'undefined' ? self : Function('return this')()\n  , core   = {}\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = {}.hasOwnProperty\n  , ceil  = Math.ceil\n  , floor = Math.floor\n  , max   = Math.max\n  , min   = Math.min;\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\nvar DESC = !!function(){\n  try {\n    return defineProperty({}, 'a', {get: function(){ return 2; }}).a == 2;\n  } catch(e){ /* empty */ }\n}();\nvar hide = createDefiner(1);\n// 7.1.4 ToInteger\nfunction toInteger(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n}\nfunction desc(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n}\nfunction simpleSet(object, key, value){\n  object[key] = value;\n  return object;\n}\nfunction createDefiner(bitmap){\n  return DESC ? function(object, key, value){\n    return $.setDesc(object, key, desc(bitmap, value)); // eslint-disable-line no-use-before-define\n  } : simpleSet;\n}\n\nfunction isObject(it){\n  return it !== null && (typeof it == 'object' || typeof it == 'function');\n}\nfunction isFunction(it){\n  return typeof it == 'function';\n}\nfunction assertDefined(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n}\n\nvar $ = module.exports = require('./$.fw')({\n  g: global,\n  core: core,\n  html: global.document && document.documentElement,\n  // http://jsperf.com/core-js-isobject\n  isObject:   isObject,\n  isFunction: isFunction,\n  it: function(it){\n    return it;\n  },\n  that: function(){\n    return this;\n  },\n  // 7.1.4 ToInteger\n  toInteger: toInteger,\n  // 7.1.15 ToLength\n  toLength: function(it){\n    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  },\n  toIndex: function(index, length){\n    index = toInteger(index);\n    return index < 0 ? max(index + length, 0) : min(index, length);\n  },\n  has: function(it, key){\n    return hasOwnProperty.call(it, key);\n  },\n  create:     Object.create,\n  getProto:   Object.getPrototypeOf,\n  DESC:       DESC,\n  desc:       desc,\n  getDesc:    Object.getOwnPropertyDescriptor,\n  setDesc:    defineProperty,\n  getKeys:    Object.keys,\n  getNames:   Object.getOwnPropertyNames,\n  getSymbols: Object.getOwnPropertySymbols,\n  // Dummy, fix for not array-like ES3 string in es5 module\n  assertDefined: assertDefined,\n  ES5Object: Object,\n  toObject: function(it){\n    return $.ES5Object(assertDefined(it));\n  },\n  hide: hide,\n  def: createDefiner(0),\n  set: global.Symbol ? simpleSet : hide,\n  mix: function(target, src){\n    for(var key in src)hide(target, key, src[key]);\n    return target;\n  },\n  each: [].forEach\n});\nif(typeof __e != 'undefined')__e = core;\nif(typeof __g != 'undefined')__g = global;","var $ = require('./$');\nmodule.exports = function(C){\n  if($.DESC && $.FW)$.setDesc(C, require('./$.wks')('species'), {\n    configurable: true,\n    get: $.that\n  });\n};","'use strict';\n// true  -> String#at\n// false -> String#codePointAt\nvar $ = require('./$');\nmodule.exports = function(TO_STRING){\n  return function(pos){\n    var s = String($.assertDefined(this))\n      , i = $.toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l\n      || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n        ? TO_STRING ? s.charAt(i) : a\n        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","'use strict';\nvar $      = require('./$')\n  , ctx    = require('./$.ctx')\n  , cof    = require('./$.cof')\n  , invoke = require('./$.invoke')\n  , global             = $.g\n  , isFunction         = $.isFunction\n  , html               = $.html\n  , document           = global.document\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , postMessage        = global.postMessage\n  , addEventListener   = global.addEventListener\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nfunction run(){\n  var id = +this;\n  if($.has(queue, id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n}\nfunction listner(event){\n  run.call(event.data);\n}\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!isFunction(setTask) || !isFunction(clearTask)){\n  setTask = function(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(isFunction(fn) ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(cof(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Modern browsers, skip implementation for WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is object\n  } else if(addEventListener && isFunction(postMessage) && !global.importScripts){\n    defer = function(id){\n      postMessage(id, '*');\n    };\n    addEventListener('message', listner, false);\n  // WebWorkers\n  } else if(isFunction(MessageChannel)){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // IE8-\n  } else if(document && ONREADYSTATECHANGE in document.createElement('script')){\n    defer = function(id){\n      html.appendChild(document.createElement('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","var sid = 0;\nfunction uid(key){\n  return 'Symbol(' + key + ')_' + (++sid + Math.random()).toString(36);\n}\nuid.safe = require('./$').g.Symbol || uid;\nmodule.exports = uid;","// 22.1.3.31 Array.prototype[@@unscopables]\nvar $           = require('./$')\n  , UNSCOPABLES = require('./$.wks')('unscopables');\nif($.FW && !(UNSCOPABLES in []))$.hide(Array.prototype, UNSCOPABLES, {});\nmodule.exports = function(key){\n  if($.FW)[][UNSCOPABLES][key] = true;\n};","var global = require('./$').g\n  , store  = {};\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    global.Symbol && global.Symbol[name] || require('./$.uid').safe('Symbol.' + name));\n};","var $          = require('./$')\n  , setUnscope = require('./$.unscope')\n  , ITER       = require('./$.uid').safe('iter')\n  , $iter      = require('./$.iter')\n  , step       = $iter.step\n  , Iterators  = $iter.Iterators;\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\n$iter.std(Array, 'Array', function(iterated, kind){\n  $.set(this, ITER, {o: $.toObject(iterated), i: 0, k: kind});\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , kind  = iter.k\n    , index = iter.i++;\n  if(!O || index >= O.length){\n    iter.o = undefined;\n    return step(1);\n  }\n  if(kind == 'key'  )return step(0, index);\n  if(kind == 'value')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'value');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\nsetUnscope('keys');\nsetUnscope('values');\nsetUnscope('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $       = require('./$')\n  , ctx     = require('./$.ctx')\n  , cof     = require('./$.cof')\n  , $def    = require('./$.def')\n  , assert  = require('./$.assert')\n  , $iter   = require('./$.iter')\n  , SPECIES = require('./$.wks')('species')\n  , RECORD  = require('./$.uid').safe('record')\n  , forOf   = $iter.forOf\n  , PROMISE = 'Promise'\n  , global  = $.g\n  , process = global.process\n  , asap    = process && process.nextTick || require('./$.task').set\n  , P       = global[PROMISE]\n  , Base    = P\n  , isFunction     = $.isFunction\n  , isObject       = $.isObject\n  , assertFunction = assert.fn\n  , assertObject   = assert.obj\n  , test;\n\n// helpers\nfunction getConstructor(C){\n  var S = assertObject(C)[SPECIES];\n  return S != undefined ? S : C;\n}\nfunction isThenable(it){\n  var then;\n  if(isObject(it))then = it.then;\n  return isFunction(then) ? then : false;\n}\nfunction isUnhandled(promise){\n  var record = promise[RECORD]\n    , chain  = record.c\n    , i      = 0\n    , react;\n  if(record.h)return false;\n  while(chain.length > i){\n    react = chain[i++];\n    if(react.fail || !isUnhandled(react.P))return false;\n  } return true;\n}\nfunction notify(record, isReject){\n  var chain = record.c;\n  if(isReject || chain.length)asap(function(){\n    var promise = record.p\n      , value   = record.v\n      , ok      = record.s == 1\n      , i       = 0;\n    if(isReject && isUnhandled(promise)){\n      setTimeout(function(){\n        if(isUnhandled(promise)){\n          if(cof(process) == 'process'){\n            process.emit('unhandledRejection', value, promise);\n          } else if(global.console && isFunction(console.error)){\n            console.error('Unhandled promise rejection', value);\n          }\n        }\n      }, 1e3);\n    } else while(chain.length > i)!function(react){\n      var cb = ok ? react.ok : react.fail\n        , ret, then;\n      try {\n        if(cb){\n          if(!ok)record.h = true;\n          ret = cb === true ? value : cb(value);\n          if(ret === react.P){\n            react.rej(TypeError(PROMISE + '-chain cycle'));\n          } else if(then = isThenable(ret)){\n            then.call(ret, react.res, react.rej);\n          } else react.res(ret);\n        } else react.rej(value);\n      } catch(err){\n        react.rej(err);\n      }\n    }(chain[i++]);\n    chain.length = 0;\n  });\n}\nfunction $reject(value){\n  var record = this;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  record.v = value;\n  record.s = 2;\n  notify(record, true);\n}\nfunction $resolve(value){\n  var record = this\n    , then, wrapper;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  try {\n    if(then = isThenable(value)){\n      wrapper = {r: record, d: false}; // wrap\n      then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n    } else {\n      record.v = value;\n      record.s = 1;\n      notify(record);\n    }\n  } catch(err){\n    $reject.call(wrapper || {r: record, d: false}, err); // wrap\n  }\n}\n\n// constructor polyfill\nif(!(isFunction(P) && isFunction(P.resolve) && P.resolve(test = new P(function(){})) == test)){\n  // 25.4.3.1 Promise(executor)\n  P = function Promise(executor){\n    assertFunction(executor);\n    var record = {\n      p: assert.inst(this, P, PROMISE),       // <- promise\n      c: [],                                  // <- chain\n      s: 0,                                   // <- state\n      d: false,                               // <- done\n      v: undefined,                           // <- value\n      h: false                                // <- handled rejection\n    };\n    $.hide(this, RECORD, record);\n    try {\n      executor(ctx($resolve, record, 1), ctx($reject, record, 1));\n    } catch(err){\n      $reject.call(record, err);\n    }\n  };\n  $.mix(P.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var S = assertObject(assertObject(this).constructor)[SPECIES];\n      var react = {\n        ok:   isFunction(onFulfilled) ? onFulfilled : true,\n        fail: isFunction(onRejected)  ? onRejected  : false\n      };\n      var promise = react.P = new (S != undefined ? S : P)(function(res, rej){\n        react.res = assertFunction(res);\n        react.rej = assertFunction(rej);\n      });\n      var record = this[RECORD];\n      record.c.push(react);\n      record.s && notify(record);\n      return promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n}\n\n// export\n$def($def.G + $def.W + $def.F * (P != Base), {Promise: P});\ncof.set(P, PROMISE);\nrequire('./$.species')(P);\n\n// statics\n$def($def.S, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    return new (getConstructor(this))(function(res, rej){\n      rej(r);\n    });\n  },\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    return isObject(x) && RECORD in x && $.getProto(x) === this.prototype\n      ? x : new (getConstructor(this))(function(res){\n        res(x);\n      });\n  }\n});\n$def($def.S + $def.F * !require('./$.iter-detect')(function(iter){\n  P.all(iter)['catch'](function(){});\n}), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C      = getConstructor(this)\n      , values = [];\n    return new C(function(res, rej){\n      forOf(iterable, false, values.push, values);\n      var remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        C.resolve(promise).then(function(value){\n          results[index] = value;\n          --remaining || res(results);\n        }, rej);\n      });\n      else res(results);\n    });\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C = getConstructor(this);\n    return new C(function(res, rej){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(res, rej);\n      });\n    });\n  }\n});","var set   = require('./$').set\n  , at    = require('./$.string-at')(true)\n  , ITER  = require('./$.uid').safe('iter')\n  , $iter = require('./$.iter')\n  , step  = $iter.step;\n\n// 21.1.3.27 String.prototype[@@iterator]()\n$iter.std(String, 'String', function(iterated){\n  set(this, ITER, {o: String(iterated), i: 0});\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var iter  = this[ITER]\n    , O     = iter.o\n    , index = iter.i\n    , point;\n  if(index >= O.length)return step(1);\n  point = at.call(O, index);\n  iter.i += point.length;\n  return step(0, point);\n});","require('./es6.array.iterator');\nvar $           = require('./$')\n  , Iterators   = require('./$.iter').Iterators\n  , ITERATOR    = require('./$.wks')('iterator')\n  , ArrayValues = Iterators.Array\n  , NodeList    = $.g.NodeList;\nif($.FW && NodeList && !(ITERATOR in NodeList.prototype)){\n  $.hide(NodeList.prototype, ITERATOR, ArrayValues);\n}\nIterators.NodeList = ArrayValues;","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar ObjectObserver = (window.ObjectObserver);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nfunction fromDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, type, value) {\n    return type === DOLPHIN_BEAN? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction modifyList(bean, attribute, from, count, newElements) {\n    var list = bean[attribute];\n    if (!exists(list)) {\n        bean[attribute] = list = [];\n    } else if (!Array.isArray(list)) {\n        bean[attribute] = list = [list];\n    }\n    if (typeof newElements === 'undefined') {\n        list.splice(from, count);\n    } else {\n        list.splice(from, count, newElements);\n    }\n}\n\n\nfunction ClassRepository() {\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n}\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return attribute.tag === opendolphin.Tag.value();\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                bean[attribute.propertyName] = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n            }\n        });\n    });\n    var observer = new ObjectObserver(bean);\n    observer.open(function (added, removed, changed) {\n        Object.keys(added).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], added[property]);\n                attribute.setValue(value);\n            }\n        });\n        Object.keys(removed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                attribute.setValue(null);\n            }\n        });\n        Object.keys(changed).forEach(function (property) {\n            var attribute = model.findAttributeByPropertyName(property);\n            if (exists(attribute)) {\n                var value = toDolphin(_this, classInfo[property], changed[property]);\n                attribute.setValue(value);\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 0, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            modifyList(bean, attribute.value, from.value, to.value - from.value);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            modifyList(bean, attribute.value, pos.value, 1, entry);\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","/*jslint browserify: true */\n/* global Platform, opendolphin, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar ObjectObserver = (window.ObjectObserver);\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return value === null? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object'? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            handler(type, bean, propertyName, [], undefined);\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        if (Array.isArray(removedElements) && removedElements.length > 0) {\n            sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n        }\n        for (var i = index; i < index + count; i++) {\n            sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n        }\n    }\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var _this = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(_this, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(_this, classInfo[attribute.propertyName], event.newValue);\n                _this.propertyUpdateHandlers.forEach(function(handler) {\n                    handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 0, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, from.value, to.value - from.value);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 1, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\n\n\n\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n"],"sourceRoot":"/source/"}