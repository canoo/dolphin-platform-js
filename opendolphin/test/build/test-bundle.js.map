{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/index.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/isarray/index.js","node_modules/chai/index.js","node_modules/chai/lib/chai.js","node_modules/chai/lib/chai/assertion.js","node_modules/chai/lib/chai/config.js","node_modules/chai/lib/chai/core/assertions.js","node_modules/chai/lib/chai/interface/assert.js","node_modules/chai/lib/chai/interface/expect.js","node_modules/chai/lib/chai/interface/should.js","node_modules/chai/lib/chai/utils/addChainableMethod.js","node_modules/chai/lib/chai/utils/addMethod.js","node_modules/chai/lib/chai/utils/addProperty.js","node_modules/chai/lib/chai/utils/expectTypes.js","node_modules/chai/lib/chai/utils/flag.js","node_modules/chai/lib/chai/utils/getActual.js","node_modules/chai/lib/chai/utils/getEnumerableProperties.js","node_modules/chai/lib/chai/utils/getMessage.js","node_modules/chai/lib/chai/utils/getName.js","node_modules/chai/lib/chai/utils/getPathInfo.js","node_modules/chai/lib/chai/utils/getPathValue.js","node_modules/chai/lib/chai/utils/getProperties.js","node_modules/chai/lib/chai/utils/hasProperty.js","node_modules/chai/lib/chai/utils/index.js","node_modules/chai/lib/chai/utils/inspect.js","node_modules/chai/lib/chai/utils/objDisplay.js","node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","node_modules/chai/lib/chai/utils/overwriteMethod.js","node_modules/chai/lib/chai/utils/overwriteProperty.js","node_modules/chai/lib/chai/utils/test.js","node_modules/chai/lib/chai/utils/transferFlags.js","node_modules/chai/node_modules/assertion-error/index.js","node_modules/chai/node_modules/deep-eql/index.js","node_modules/chai/node_modules/deep-eql/lib/eql.js","node_modules/chai/node_modules/deep-eql/node_modules/type-detect/index.js","node_modules/chai/node_modules/deep-eql/node_modules/type-detect/lib/type.js","node_modules/chai/node_modules/type-detect/lib/type.js","opendolphin/js/dolphin/Attribute.ts","opendolphin/js/dolphin/AttributeCreatedNotification.ts","opendolphin/js/dolphin/AttributeMetadataChangedCommand.ts","opendolphin/js/dolphin/CallNamedActionCommand.ts","opendolphin/js/dolphin/ChangeAttributeMetadataCommand.ts","opendolphin/js/dolphin/ClientAttribute.ts","opendolphin/js/dolphin/ClientConnector.ts","opendolphin/js/dolphin/ClientDolphin.ts","opendolphin/js/dolphin/ClientModelStore.ts","opendolphin/js/dolphin/ClientPresentationModel.ts","opendolphin/js/dolphin/Codec.ts","opendolphin/js/dolphin/Command.ts","opendolphin/js/dolphin/CommandBatcher.ts","opendolphin/js/dolphin/CreatePresentationModelCommand.ts","opendolphin/js/dolphin/DataCommand.ts","opendolphin/js/dolphin/DeleteAllPresentationModelsOfTypeCommand.ts","opendolphin/js/dolphin/DeletePresentationModelCommand.ts","opendolphin/js/dolphin/DeletedAllPresentationModelsOfTypeNotification.ts","opendolphin/js/dolphin/DeletedPresentationModelNotification.ts","opendolphin/js/dolphin/DolphinBuilder.ts","opendolphin/js/dolphin/EmptyNotification.ts","opendolphin/js/dolphin/EventBus.ts","opendolphin/js/dolphin/GetPresentationModelCommand.ts","opendolphin/js/dolphin/HttpTransmitter.ts","opendolphin/js/dolphin/InitializeAttributeCommand.ts","opendolphin/js/dolphin/NamedCommand.ts","opendolphin/js/dolphin/NoTransmitter.ts","opendolphin/js/dolphin/SignalCommand.ts","opendolphin/js/dolphin/SwitchPresentationModelCommand.ts","opendolphin/js/dolphin/ValueChangedCommand.ts","opendolphin/test/src/ChangeAttributeMetadataCommandTests.ts","opendolphin/test/src/ClientAttributeTests.ts","opendolphin/test/src/ClientConnectorTests.ts","opendolphin/test/src/ClientDolphinTests.ts","opendolphin/test/src/ClientModelStoreTests.ts","opendolphin/test/src/ClientPresentationModelTests.ts","opendolphin/test/src/CodecTest.ts","opendolphin/test/src/CommandBatcherTests.ts","opendolphin/test/src/CreatePresentationModelCommandTests.ts","opendolphin/test/src/DolphinBuilderTest.ts","opendolphin/test/src/EmptyNotificationTests.ts","opendolphin/test/src/NamedCommandTests.ts","opendolphin/test/src/ValueChangedCommandTests.ts"],"names":[],"mappingsvlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvp0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7mDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"test-bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('./lib/chai');\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = []\n  , exports = module.exports = {};\n\n/*!\n * Chai version\n */\n\nexports.version = '3.5.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(this, util);\n    used.push(fn);\n  }\n\n  return this;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * @api private\n   */\n\n  function Assertion (obj, msg, stack) {\n    flag(this, 'ssfi', stack || arguments.callee);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (true !== showDiff) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      var msg = util.getMessage(this, arguments)\n        , actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n   includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40\n\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , toString = Object.prototype.toString\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to\n   * improve the readability of your assertions. They\n   * do not provide testing capabilities unless they\n   * have been overwritten by a plugin.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same' ].forEach(function (chain) {\n    Assertion.addProperty(chain, function () {\n      return this;\n    });\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates any of assertions following in the chain.\n   *\n   *     expect(foo).to.not.equal('bar');\n   *     expect(goodFn).to.not.throw(Error);\n   *     expect({ foo: 'baz' }).to.have.property('foo')\n   *       .and.not.equal('bar');\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Sets the `deep` flag, later used by the `equal` and\n   * `property` assertions.\n   *\n   *     expect(foo).to.deep.equal({ bar: 'baz' });\n   *     expect({ foo: { bar: { baz: 'quux' } } })\n   *       .to.have.deep.property('foo.bar.baz', 'quux');\n   *\n   * `.deep.property` special characters can be escaped\n   * by adding two slashes before the `.` or `[]`.\n   *\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Sets the `any` flag, (opposite of the `all` flag)\n   * later used in the `keys` assertion.\n   *\n   *     expect(foo).to.have.any.keys('bar', 'baz');\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false)\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Sets the `all` flag (opposite of the `any` flag)\n   * later used by the `keys` assertion.\n   *\n   *     expect(foo).to.have.all.keys('bar', 'baz');\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type)\n   *\n   * The `a` and `an` assertions are aliases that can be\n   * used either as language chains or to assert a value's\n   * type.\n   *\n   *     // typeof\n   *     expect('test').to.be.a('string');\n   *     expect({ foo: 'bar' }).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(new Promise).to.be.a('promise');\n   *     expect(new Float32Array()).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   *     // es6 overrides\n   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');\n   *\n   *     // language chain\n   *     expect(foo).to.be.an.instanceof(Foo);\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj)\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(value)\n   *\n   * The `include` and `contain` assertions can be used as either property\n   * based language chains or as methods to assert the inclusion of an object\n   * in an array or a substring in a string. When used as language chains,\n   * they toggle the `contains` flag for the `keys` assertion.\n   *\n   *     expect([1,2,3]).to.include(2);\n   *     expect('foobar').to.contain('foo');\n   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Object|String|Number} obj\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    _.expectTypes(this, ['array', 'object', 'string']);\n\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var expected = false;\n\n    if (_.type(obj) === 'array' && _.type(val) === 'object') {\n      for (var i in obj) {\n        if (_.eql(obj[i], val)) {\n          expected = true;\n          break;\n        }\n      }\n    } else if (_.type(val) === 'object') {\n      if (!flag(this, 'negate')) {\n        for (var k in val) new Assertion(obj).property(k, val[k]);\n        return;\n      }\n      var subset = {};\n      for (var k in val) subset[k] = obj[k];\n      expected = _.eql(subset, val);\n    } else {\n      expected = (obj != undefined) && ~obj.indexOf(val);\n    }\n    this.assert(\n        expected\n      , 'expected #{this} to include ' + _.inspect(val)\n      , 'expected #{this} to not include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is truthy.\n   *\n   *     expect('everything').to.be.ok;\n   *     expect(1).to.be.ok;\n   *     expect(false).to.not.be.ok;\n   *     expect(undefined).to.not.be.ok;\n   *     expect(null).to.not.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is `true`.\n   *\n   *     expect(true).to.be.true;\n   *     expect(1).to.not.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , this.negate ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is `false`.\n   *\n   *     expect(false).to.be.false;\n   *     expect(0).to.not.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , this.negate ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is `null`.\n   *\n   *     expect(null).to.be.null;\n   *     expect(undefined).to.not.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *     expect(null).to.not.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   * Asserts that the target is `NaN`.\n   *\n   *     expect('foo').to.be.NaN;\n   *     expect(4).not.to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi'\n   *       , bar = null\n   *       , baz;\n   *\n   *     expect(foo).to.exist;\n   *     expect(bar).to.not.exist;\n   *     expect(baz).to.not.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    this.assert(\n        null != flag(this, 'object')\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n\n  /**\n   * ### .empty\n   *\n   * Asserts that the target's length is `0`. For arrays and strings, it checks\n   * the `length` property. For objects, it gets the count of\n   * enumerable keys.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *     expect({}).to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var obj = flag(this, 'object')\n      , expected = obj;\n\n    if (Array.isArray(obj) || 'string' === typeof object) {\n      expected = obj.length;\n    } else if (typeof obj === 'object') {\n      expected = Object.keys(obj).length;\n    }\n\n    this.assert(\n        !expected\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an arguments object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = Object.prototype.toString.call(obj);\n    this.assert(\n        '[object Arguments]' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(value)\n   *\n   * Asserts that the target is strictly equal (`===`) to `value`.\n   * Alternately, if the `deep` flag is set, asserts that\n   * the target is deeply equal to `value`.\n   *\n   *     expect('hello').to.equal('hello');\n   *     expect(42).to.equal(42);\n   *     expect(1).to.not.equal(true);\n   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @alias deep.equal\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(value)\n   *\n   * Asserts that the target is deeply equal to `value`.\n   *\n   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(value)\n   *\n   * Asserts that the target is greater than `value`.\n   *\n   *     expect(10).to.be.above(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above ' + n\n        , 'expected #{this} to be at most ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(value)\n   *\n   * Asserts that the target is greater than or equal to `value`.\n   *\n   *     expect(10).to.be.at.least(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.least(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least ' + n\n        , 'expected #{this} to be below ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(value)\n   *\n   * Asserts that the target is less than `value`.\n   *\n   *     expect(5).to.be.below(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below ' + n\n        , 'expected #{this} to be at least ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(value)\n   *\n   * Asserts that the target is less than or equal to `value`.\n   *\n   *     expect(5).to.be.at.most(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.most(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most ' + n\n        , 'expected #{this} to be above ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish)\n   *\n   * Asserts that the target is within a range.\n   *\n   *     expect(7).to.be.within(5,10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a length range. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name within\n   * @param {Number} start lowerbound inclusive\n   * @param {Number} finish upperbound inclusive\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , range = start + '..' + finish;\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor)\n   *\n   * Asserts that the target is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , Chai = new Tea('chai');\n   *\n   *     expect(Chai).to.be.an.instanceof(Tea);\n   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} message _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var name = _.getName(constructor);\n    this.assert(\n        flag(this, 'object') instanceof constructor\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name, [value])\n   *\n   * Asserts that the target has a property `name`, optionally asserting that\n   * the value of that property is strictly equal to  `value`.\n   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n   * references into objects and arrays.\n   *\n   *     // simple referencing\n   *     var obj = { foo: 'bar' };\n   *     expect(obj).to.have.property('foo');\n   *     expect(obj).to.have.property('foo', 'bar');\n   *\n   *     // deep referencing\n   *     var deepObj = {\n   *         green: { tea: 'matcha' }\n   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n   *     };\n   *\n   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n   *\n   * You can also use an array as the starting point of a `deep.property`\n   * assertion, or traverse nested arrays.\n   *\n   *     var arr = [\n   *         [ 'chai', 'matcha', 'konacha' ]\n   *       , [ { tea: 'chai' }\n   *         , { tea: 'matcha' }\n   *         , { tea: 'konacha' } ]\n   *     ];\n   *\n   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n   *\n   * Furthermore, `property` changes the subject of the assertion\n   * to be the value of that property from the original object. This\n   * permits for further chainable assertions on that property.\n   *\n   *     expect(obj).to.have.property('foo')\n   *       .that.is.a('string');\n   *     expect(deepObj).to.have.property('green')\n   *       .that.is.an('object')\n   *       .that.deep.equals({ tea: 'matcha' });\n   *     expect(deepObj).to.have.property('teas')\n   *       .that.is.an('array')\n   *       .with.deep.property('[2]')\n   *         .that.deep.equals({ tea: 'konacha' });\n   *\n   * Note that dots and bracket in `name` must be backslash-escaped when\n   * the `deep` flag is set, while they must NOT be escaped when the `deep`\n   * flag is not set.\n   *\n   *     // simple referencing\n   *     var css = { '.link[target]': 42 };\n   *     expect(css).to.have.property('.link[target]', 42);\n   *\n   *     // deep referencing\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name property\n   * @alias deep.property\n   * @param {String} name\n   * @param {Mixed} value (optional)\n   * @param {String} message _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('property', function (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isDeep = !!flag(this, 'deep')\n      , descriptor = isDeep ? 'deep property ' : 'property '\n      , negate = flag(this, 'negate')\n      , obj = flag(this, 'object')\n      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null\n      , hasProperty = isDeep\n        ? pathInfo.exists\n        : _.hasProperty(name, obj)\n      , value = isDeep\n        ? pathInfo.value\n        : obj[name];\n\n    if (negate && arguments.length > 1) {\n      if (undefined === value) {\n        msg = (msg != null) ? msg + ': ' : '';\n        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n      }\n    } else {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          val === value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  });\n\n\n  /**\n   * ### .ownProperty(name)\n   *\n   * Asserts that the target has an own property `name`.\n   *\n   *     expect('test').to.have.ownProperty('length');\n   *\n   * @name ownProperty\n   * @alias haveOwnProperty\n   * @param {String} name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnProperty (name, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        obj.hasOwnProperty(name)\n      , 'expected #{this} to have own property ' + _.inspect(name)\n      , 'expected #{this} to not have own property ' + _.inspect(name)\n    );\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, message]])\n   *\n   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.\n   *\n   *     expect('test').to.have.ownPropertyDescriptor('length');\n   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });\n   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });\n   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);\n   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .length\n   *\n   * Sets the `doLength` flag later used as a chain precursor to a value\n   * comparison for the `length` property.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * *Deprecation notice:* Using `length` as an assertion will be deprecated\n   * in version 2.4.0 and removed in 3.0.0. Code using the old style of\n   * asserting for `length` property value using `length(value)` should be\n   * switched to use `lengthOf(value)` instead.\n   *\n   * @name length\n   * @namespace BDD\n   * @api public\n   */\n\n  /**\n   * ### .lengthOf(value[, message])\n   *\n   * Asserts that the target's `length` property has\n   * the expected value.\n   *\n   *     expect([ 1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foobar').to.have.lengthOf(6);\n   *\n   * @name lengthOf\n   * @param {Number} length\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addMethod('lengthOf', assertLength);\n\n  /**\n   * ### .match(regexp)\n   *\n   * Asserts that the target matches a regular expression.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} RegularExpression\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(string)\n   *\n   * Asserts that the string target contains another string.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * @name string\n   * @param {String} string\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n\n  /**\n   * ### .keys(key1, [key2], [...])\n   *\n   * Asserts that the target contains any or all of the passed-in keys.\n   * Use in combination with `any`, `all`, `contains`, or `have` will affect\n   * what will pass.\n   *\n   * When used in conjunction with `any`, at least one key that is passed\n   * in must exist in the target object. This is regardless whether or not\n   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`\n   * should be used in the assertion. If neither are used, the assertion is\n   * defaulted to `all`.\n   *\n   * When both `all` and `contain` are used, the target object must have at\n   * least all of the passed-in keys but may have more keys not listed.\n   *\n   * When both `all` and `have` are used, the target object must both contain\n   * all of the passed-in keys AND the number of keys in the target object must\n   * match the number of keys passed in (in other words, a target object must\n   * have all and only all of the passed-in keys).\n   *\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});\n   *\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , str\n      , ok = true\n      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';\n\n    switch (_.type(keys)) {\n      case \"array\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        break;\n      case \"object\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        keys = Object.keys(keys);\n        break;\n      default:\n        keys = Array.prototype.slice.call(arguments);\n    }\n\n    if (!keys.length) throw new Error('keys required');\n\n    var actual = Object.keys(obj)\n      , expected = keys\n      , len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all');\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      var intersection = expected.filter(function(key) {\n        return ~actual.indexOf(key);\n      });\n      ok = intersection.length > 0;\n    }\n\n    // Has all\n    if (all) {\n      ok = keys.every(function(key){\n        return ~actual.indexOf(key);\n      });\n      if (!flag(this, 'negate') && !flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key){\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + str\n      , 'expected #{this} to not ' + str\n      , expected.slice(0).sort()\n      , actual.sort()\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw(constructor)\n   *\n   * Asserts that the function target will throw a specific error, or specific type of error\n   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n   * for the error's message.\n   *\n   *     var err = new ReferenceError('This is a bad function.');\n   *     var fn = function () { throw err; }\n   *     expect(fn).to.throw(ReferenceError);\n   *     expect(fn).to.throw(Error);\n   *     expect(fn).to.throw(/bad function/);\n   *     expect(fn).to.not.throw('good function');\n   *     expect(fn).to.throw(ReferenceError, /bad function/);\n   *     expect(fn).to.throw(err);\n   *\n   * Please note that when a throw expectation is negated, it will check each\n   * parameter independently, starting with error constructor type. The appropriate way\n   * to check for the existence of a type of error but for a message that does not match\n   * is to use `and`.\n   *\n   *     expect(fn).to.throw(ReferenceError)\n   *        .and.not.throw(/good function/);\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {ErrorConstructor} constructor\n   * @param {String|RegExp} expected error message\n   * @param {String} message _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (constructor, errMsg, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('function');\n\n    var thrown = false\n      , desiredError = null\n      , name = null\n      , thrownError = null;\n\n    if (arguments.length === 0) {\n      errMsg = null;\n      constructor = null;\n    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n      errMsg = constructor;\n      constructor = null;\n    } else if (constructor && constructor instanceof Error) {\n      desiredError = constructor;\n      constructor = null;\n      errMsg = null;\n    } else if (typeof constructor === 'function') {\n      name = constructor.prototype.name;\n      if (!name || (name === 'Error' && constructor !== Error)) {\n        name = constructor.name || (new constructor()).name;\n      }\n    } else {\n      constructor = null;\n    }\n\n    try {\n      obj();\n    } catch (err) {\n      // first, check desired error\n      if (desiredError) {\n        this.assert(\n            err === desiredError\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp}'\n          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        flag(this, 'object', err);\n        return this;\n      }\n\n      // next, check constructor\n      if (constructor) {\n        this.assert(\n            err instanceof constructor\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n          , name\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        if (!errMsg) {\n          flag(this, 'object', err);\n          return this;\n        }\n      }\n\n      // next, check message\n      var message = 'error' === _.type(err) && \"message\" in err\n        ? err.message\n        : '' + err;\n\n      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n        this.assert(\n            errMsg.exec(message)\n          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n          , 'expected #{this} to throw error not matching #{exp}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n        this.assert(\n            ~message.indexOf(errMsg)\n          , 'expected #{this} to throw error including #{exp} but got #{act}'\n          , 'expected #{this} to throw error not including #{act}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else {\n        thrown = true;\n        thrownError = err;\n      }\n    }\n\n    var actuallyGot = ''\n      , expectedThrown = name !== null\n        ? name\n        : desiredError\n          ? '#{exp}' //_.inspect(desiredError)\n          : 'an error';\n\n    if (thrown) {\n      actuallyGot = ' but #{act} was thrown'\n    }\n\n    this.assert(\n        thrown === true\n      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n    );\n\n    flag(this, 'object', thrownError);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method)\n   *\n   * Asserts that the object or class target will respond to a method.\n   *\n   *     Klass.prototype.bar = function(){};\n   *     expect(Klass).to.respondTo('bar');\n   *     expect(obj).to.respondTo('bar');\n   *\n   * To check if a constructor will respond to a static function,\n   * set the `itself` flag.\n   *\n   *     Klass.baz = function(){};\n   *     expect(Klass).itself.to.respondTo('baz');\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === _.type(obj) && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Sets the `itself` flag, later used by the `respondTo` assertion.\n   *\n   *     function Foo() {}\n   *     Foo.bar = function() {}\n   *     Foo.prototype.baz = function() {}\n   *\n   *     expect(Foo).itself.to.respondTo('bar');\n   *     expect(Foo).itself.not.to.respondTo('baz');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(method)\n   *\n   * Asserts that the target passes a given truth test.\n   *\n   *     expect(1).to.satisfy(function(num) { return num > 0; });\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , this.negate ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta)\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj, msg).is.a('number');\n    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {\n      throw new Error('the arguments to closeTo or approximately must be numbers');\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  function isSubsetOf(subset, superset, cmp) {\n    return subset.every(function(elem) {\n      if (!cmp) return superset.indexOf(elem) !== -1;\n\n      return superset.some(function(elem2) {\n        return cmp(elem, elem2);\n      });\n    })\n  }\n\n  /**\n   * ### .members(set)\n   *\n   * Asserts that the target is a superset of `set`,\n   * or that the target and `set` have the same strictly-equal (===) members.\n   * Alternately, if the `deep` flag is set, set members are compared for deep\n   * equality.\n   *\n   *     expect([1, 2, 3]).to.include.members([3, 2]);\n   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n   *\n   *     expect([4, 2]).to.have.members([2, 4]);\n   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n   *\n   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj).to.be.an('array');\n    new Assertion(subset).to.be.an('array');\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    if (flag(this, 'contains')) {\n      return this.assert(\n          isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to be a superset of #{act}'\n        , 'expected #{this} to not be a superset of #{act}'\n        , obj\n        , subset\n      );\n    }\n\n    this.assert(\n        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to have the same members as #{act}'\n        , 'expected #{this} to not have the same members as #{act}'\n        , obj\n        , subset\n    );\n  });\n\n  /**\n   * ### .oneOf(list)\n   *\n   * Assert that a value appears somewhere in the top level of array `list`.\n   *\n   *     expect('a').to.be.oneOf(['a', 'b', 'c']);\n   *     expect(9).to.not.be.oneOf(['z']);\n   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);\n   *\n   *     var three = [3];\n   *     // for object-types, contents are not compared\n   *     expect(three).to.not.be.oneOf([1, 2, [3]]);\n   *     // comparing references works\n   *     expect(three).to.be.oneOf([1, 2, three]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object');\n    new Assertion(list).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(function)\n   *\n   * Asserts that a function changes an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 3 };\n   *     var noChangeFn = function() { return 'foo' + 'bar'; }\n   *     expect(fn).to.change(obj, 'val');\n   *     expect(noChangeFn).to.not.change(obj, 'val')\n   *\n   * @name change\n   * @alias changes\n   * @alias Change\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      initial !== object[prop]\n      , 'expected .' + prop + ' to change'\n      , 'expected .' + prop + ' to not change'\n    );\n  }\n\n  Assertion.addChainableMethod('change', assertChanges);\n  Assertion.addChainableMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(function)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     expect(fn).to.increase(obj, 'val');\n   *\n   * @name increase\n   * @alias increases\n   * @alias Increase\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial > 0\n      , 'expected .' + prop + ' to increase'\n      , 'expected .' + prop + ' to not increase'\n    );\n  }\n\n  Assertion.addChainableMethod('increase', assertIncreases);\n  Assertion.addChainableMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(function)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     expect(fn).to.decrease(obj, 'val');\n   *\n   * @name decrease\n   * @alias decreases\n   * @alias Decrease\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial < 0\n      , 'expected .' + prop + ' to decrease'\n      , 'expected .' + prop + ' to not decrease'\n    );\n  }\n\n  Assertion.addChainableMethod('decrease', assertDecreases);\n  Assertion.addChainableMethod('decreases', assertDecreases);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible (can have new properties added to\n   * it).\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect({}).to.be.extensible;\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isExtensible;\n\n    try {\n      isExtensible = Object.isExtensible(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isExtensible = false;\n      else throw err;\n    }\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect({}).to.not.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isSealed;\n\n    try {\n      isSealed = Object.isSealed(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isSealed = true;\n      else throw err;\n    }\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect({}).to.not.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isFrozen;\n\n    try {\n      isFrozen = Object.isFrozen(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isFrozen = true;\n      else throw err;\n    }\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   * Asserts that value is NaN\n   *\n   *    assert.isNaN('foo', 'foo is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   * Asserts that value is not NaN\n   *\n   *    assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg).not.to.be.NaN;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('number');\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude).not.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop);\n  };\n\n  /**\n   * ### .deepProperty(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`, which can be a\n   * string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name deepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop);\n  };\n\n  /**\n   * ### .notDeepProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notDeepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`.\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.property(prop, val);\n  };\n\n  /**\n   * ### .propertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`.\n   *\n   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n   *\n   * @name propertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for deep\n   * reference.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`. `property` can use dot- and\n   * bracket-notation for deep reference.\n   *\n   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *\n   * @name deepPropertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg).to.have.length(len);\n  };\n\n  /**\n   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n   *\n   * Asserts that `function` will throw an error that is an instance of\n   * `constructor`, or alternately that it will throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, ReferenceError, 'function throws a reference error');\n   *     assert.throws(fn, ReferenceError, /function throws a reference error/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errt, errs, msg) {\n    if ('string' === typeof errt || errt instanceof RegExp) {\n      errs = errt;\n      errt = null;\n    }\n\n    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(function, [constructor/regexp], [message])\n   *\n   * Asserts that `function` will _not_ throw an error that is an instance of\n   * `constructor`, or alternately that it will not throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n   *\n   * @name doesNotThrow\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, type, msg) {\n    if ('string' === typeof type) {\n      msg = type;\n      type = null;\n    }\n\n    new Assertion(fn, msg).to.not.Throw(type);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        throw new Error('Invalid operator \"' + operator + '\"');\n    }\n    var test = new Assertion(ok, msg);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members.\n   * Order is not taken into account.\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.\n   * Order is not taken into account.\n   *\n   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset`.\n   * Order is not taken into account.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` - using deep equality checking.\n   * Order is not taken into account.\n   * Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ {a: 1}, {b: 2}, {c: 3} ], [ {b: 2}, {a: 1}, {b: 2} ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg).to.be.oneOf(list);\n  }\n\n   /**\n   * ### .changes(function, object, property)\n   *\n   * Asserts that a function changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop) {\n    new Assertion(fn).to.change(obj, prop);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property)\n   *\n   * Asserts that a function does not changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop) {\n    new Assertion(fn).to.not.change(obj, prop);\n  }\n\n   /**\n   * ### .increases(function, object, property)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop) {\n    new Assertion(fn).to.increase(obj, prop);\n  }\n\n   /**\n   * ### .doesNotIncrease(function, object, property)\n   *\n   * Asserts that a function does not increase object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.increase(obj, prop);\n  }\n\n   /**\n   * ### .decreases(function, object, property)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop) {\n    new Assertion(fn).to.decrease(obj, prop);\n  }\n\n   /**\n   * ### .doesNotDecrease(function, object, property)\n   *\n   * Asserts that a function does not decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.decrease(obj, prop);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freese({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.frozen;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Expect\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace Should\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar transferFlags = require('./transferFlags');\nvar flag = require('./flag');\nvar config = require('../config');\n\n/*!\n * Module variables\n */\n\n// Check whether `__proto__` is supported\nvar hasProtoSupport = '__proto__' in Object;\n\n// Without `__proto__` support, this module will need to add properties to a function.\n// However, some Function.prototype methods cannot be overwritten,\n// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\nvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### addChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var assert = function assert() {\n          var old_ssfi = flag(this, 'ssfi');\n          if (old_ssfi && config.includeStack === false)\n            flag(this, 'ssfi', assert);\n          var result = chainableBehavior.method.apply(this, arguments);\n          return result === undefined ? this : result;\n        };\n\n        // Use `__proto__` if available\n        if (hasProtoSupport) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = assert.__proto__ = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (!excludeNames.test(asserterName)) {\n              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n              Object.defineProperty(assert, asserterName, pd);\n            }\n          });\n        }\n\n        transferFlags(this, assert);\n        return assert;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\n\n/**\n * ### .addMethod (ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\nvar flag = require('./flag');\n\nmodule.exports = function (ctx, name, method) {\n  ctx[name] = function () {\n    var old_ssfi = flag(this, 'ssfi');\n    if (old_ssfi && config.includeStack === false)\n      flag(this, 'ssfi', ctx[name]);\n    var result = method.apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\nvar flag = require('./flag');\n\n/**\n * ### addProperty (ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  Object.defineProperty(ctx, name,\n    { get: function addProperty() {\n        var old_ssfi = flag(this, 'ssfi');\n        if (old_ssfi && config.includeStack === false)\n          flag(this, 'ssfi', addProperty);\n\n        var result = getter.call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function (obj, types) {\n  var obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  if (!types.some(function (expected) { return type(obj) === expected; })) {\n    throw new AssertionError(\n      'object tested must be ' + str + ', but ' + type(obj) + ' given'\n    );\n  }\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function (obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function (obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - getName utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getName(func)\n *\n * Gets the name of a function, in a cross-browser way.\n *\n * @param {Function} a function (usually a constructor)\n * @namespace Utils\n * @name getName\n */\n\nmodule.exports = function (func) {\n  if (func.name) return func.name;\n\n  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n  return match && match[1] ? match[1] : \"\";\n};\n","/*!\n * Chai - getPathInfo utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar hasProperty = require('./hasProperty');\n\n/**\n * ### .getPathInfo(path, object)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nmodule.exports = function getPathInfo(path, obj) {\n  var parsed = parsePath(path),\n      last = parsed[parsed.length - 1];\n\n  var info = {\n    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: _getPathValue(parsed, obj)\n  };\n  info.exists = hasProperty(info.name, info.parent);\n\n  return info;\n};\n\n\n/*!\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `_getPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be as near infinitely deep and nested\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath (path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[')\n    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function (value) {\n    var re = /^\\[(\\d+)\\]$/\n      , mArr = re.exec(value);\n    if (mArr) return { i: parseFloat(mArr[1]) };\n    else return { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n  });\n}\n\n\n/*!\n * ## _getPathValue(parsed, obj)\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(parsed, obj);\n *\n * @param {Object} parsed definition from `parsePath`.\n * @param {Object} object to search against\n * @param {Number} object to search against\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction _getPathValue (parsed, obj, index) {\n  var tmp = obj\n    , res;\n\n  index = (index === undefined ? parsed.length : index);\n\n  for (var i = 0, l = index; i < l; i++) {\n    var part = parsed[i];\n    if (tmp) {\n      if ('undefined' !== typeof part.p)\n        tmp = tmp[part.p];\n      else if ('undefined' !== typeof part.i)\n        tmp = tmp[part.i];\n      if (i == (l - 1)) res = tmp;\n    } else {\n      res = undefined;\n    }\n  }\n  return res;\n}\n","/*!\n * Chai - getPathValue utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\nvar getPathInfo = require('./getPathInfo');\n\n/**\n * ### .getPathValue(path, object)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue('prop1.str', obj); // Hello\n *     getPathValue('prop1.att[2]', obj); // b\n *     getPathValue('prop2.arr[0].nested', obj); // Universe\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\nmodule.exports = function(path, obj) {\n  var info = getPathInfo(path, obj);\n  return info.value;\n};\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - hasProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has\n * named property or numeric array index.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with natives\n * and null/undefined values.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty('str', obj);  // true\n *     hasProperty('constructor', obj);  // true\n *     hasProperty('bar', obj);  // false\n *\n *     hasProperty('length', obj.str); // true\n *     hasProperty(1, obj.str);  // true\n *     hasProperty(5, obj.str);  // false\n *\n *     hasProperty('length', obj.arr);  // true\n *     hasProperty(2, obj.arr);  // true\n *     hasProperty(3, obj.arr);  // false\n *\n * @param {Objuect} object\n * @param {String|Number} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nvar literals = {\n    'number': Number\n  , 'string': String\n};\n\nmodule.exports = function hasProperty(name, obj) {\n  var ot = type(obj);\n\n  // Bad Object, obviously no props at all\n  if(ot === 'null' || ot === 'undefined')\n    return false;\n\n  // The `in` operator does not work with certain literals\n  // box these before the check\n  if(literals[ot] && typeof obj !== 'object')\n    obj = new literals[ot](obj);\n\n  return name in obj;\n};\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main exports\n */\n\nvar exports = module.exports = {};\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path value\n */\n\nexports.getPathValue = require('./getPathValue');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = require('./getPathInfo');\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = require('./hasProperty');\n\n/*!\n * Function name\n */\n\nexports.getName = require('./getName');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('./getName');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\nmodule.exports = inspect;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      var name = getName(value);\n      var nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    var name = getName(value);\n    var nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str;\n  if (value.__lookupGetter__) {\n    if (value.__lookupGetter__(key)) {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay (object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function (obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.length(3);\n *     expect(myFoo).to.have.length.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function () {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    return result === undefined ? this : result;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function () {\n    var result = method(_method).apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteMethod (ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () { return this; };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  ctx[name] = function () {\n    var result = method(_super).apply(this, arguments);\n    return result === undefined ? this : result;\n  }\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteProperty (ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter(_super).call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * # test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, and `message`)\n * will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function (assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","module.exports = require('./lib/eql');\n","/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar type = require('type-detect');\n\n/*!\n * Buffer.isBuffer browser shim\n */\n\nvar Buffer;\ntry { Buffer = require('buffer').Buffer; }\ncatch(ex) {\n  Buffer = {};\n  Buffer.isBuffer = function() { return false; }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\n\n/**\n * Assert super-strict (egal) equality between\n * two objects of any type.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @param {Array} memoised (optional)\n * @return {Boolean} equal match\n */\n\nfunction deepEqual(a, b, m) {\n  if (sameValue(a, b)) {\n    return true;\n  } else if ('date' === type(a)) {\n    return dateEqual(a, b);\n  } else if ('regexp' === type(a)) {\n    return regexpEqual(a, b);\n  } else if (Buffer.isBuffer(a)) {\n    return bufferEqual(a, b);\n  } else if ('arguments' === type(a)) {\n    return argumentsEqual(a, b, m);\n  } else if (!typeEqual(a, b)) {\n    return false;\n  } else if (('object' !== type(a) && 'object' !== type(b))\n  && ('array' !== type(a) && 'array' !== type(b))) {\n    return sameValue(a, b);\n  } else {\n    return objectEqual(a, b, m);\n  }\n}\n\n/*!\n * Strict (egal) equality test. Ensures that NaN always\n * equals NaN and `-0` does not equal `+0`.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} equal match\n */\n\nfunction sameValue(a, b) {\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  return a !== a && b !== b;\n}\n\n/*!\n * Compare the types of two given objects and\n * return if they are equal. Note that an Array\n * has a type of `array` (not `object`) and arguments\n * have a type of `arguments` (not `array`/`object`).\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction typeEqual(a, b) {\n  return type(a) === type(b);\n}\n\n/*!\n * Compare two Date objects by asserting that\n * the time values are equal using `saveValue`.\n *\n * @param {Date} a\n * @param {Date} b\n * @return {Boolean} result\n */\n\nfunction dateEqual(a, b) {\n  if ('date' !== type(b)) return false;\n  return sameValue(a.getTime(), b.getTime());\n}\n\n/*!\n * Compare two regular expressions by converting them\n * to string and checking for `sameValue`.\n *\n * @param {RegExp} a\n * @param {RegExp} b\n * @return {Boolean} result\n */\n\nfunction regexpEqual(a, b) {\n  if ('regexp' !== type(b)) return false;\n  return sameValue(a.toString(), b.toString());\n}\n\n/*!\n * Assert deep equality of two `arguments` objects.\n * Unfortunately, these must be sliced to arrays\n * prior to test to ensure no bad behavior.\n *\n * @param {Arguments} a\n * @param {Arguments} b\n * @param {Array} memoize (optional)\n * @return {Boolean} result\n */\n\nfunction argumentsEqual(a, b, m) {\n  if ('arguments' !== type(b)) return false;\n  a = [].slice.call(a);\n  b = [].slice.call(b);\n  return deepEqual(a, b, m);\n}\n\n/*!\n * Get enumerable properties of a given object.\n *\n * @param {Object} a\n * @return {Array} property names\n */\n\nfunction enumerable(a) {\n  var res = [];\n  for (var key in a) res.push(key);\n  return res;\n}\n\n/*!\n * Simple equality for flat iterable objects\n * such as Arrays or Node.js buffers.\n *\n * @param {Iterable} a\n * @param {Iterable} b\n * @return {Boolean} result\n */\n\nfunction iterableEqual(a, b) {\n  if (a.length !==  b.length) return false;\n\n  var i = 0;\n  var match = true;\n\n  for (; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      match = false;\n      break;\n    }\n  }\n\n  return match;\n}\n\n/*!\n * Extension to `iterableEqual` specifically\n * for Node.js Buffers.\n *\n * @param {Buffer} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction bufferEqual(a, b) {\n  if (!Buffer.isBuffer(b)) return false;\n  return iterableEqual(a, b);\n}\n\n/*!\n * Block for `objectEqual` ensuring non-existing\n * values don't get in.\n *\n * @param {Mixed} object\n * @return {Boolean} result\n */\n\nfunction isValue(a) {\n  return a !== null && a !== undefined;\n}\n\n/*!\n * Recursively check the equality of two objects.\n * Once basic sameness has been established it will\n * defer to `deepEqual` for each enumerable key\n * in the object.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction objectEqual(a, b, m) {\n  if (!isValue(a) || !isValue(b)) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  var i;\n  if (m) {\n    for (i = 0; i < m.length; i++) {\n      if ((m[i][0] === a && m[i][1] === b)\n      ||  (m[i][0] === b && m[i][1] === a)) {\n        return true;\n      }\n    }\n  } else {\n    m = [];\n  }\n\n  try {\n    var ka = enumerable(a);\n    var kb = enumerable(b);\n  } catch (ex) {\n    return false;\n  }\n\n  ka.sort();\n  kb.sort();\n\n  if (!iterableEqual(ka, kb)) {\n    return false;\n  }\n\n  m.push([ a, b ]);\n\n  var key;\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], m)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","module.exports = require('./lib/type');\n","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/*!\n * Detectable javascript natives\n */\n\nvar natives = {\n    '[object Array]': 'array'\n  , '[object RegExp]': 'regexp'\n  , '[object Function]': 'function'\n  , '[object Arguments]': 'arguments'\n  , '[object Date]': 'date'\n};\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\n\nfunction getType (obj) {\n  var str = Object.prototype.toString.call(obj);\n  if (natives[str]) return natives[str];\n  if (obj === null) return 'null';\n  if (obj === undefined) return 'undefined';\n  if (obj === Object(obj)) return 'object';\n  return typeof obj;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library () {\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function (type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function (obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nvar objectTypeRegexp = /^\\[object (.*)\\]$/;\n\nfunction getType(obj) {\n  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();\n  // Let \"new String('')\" return 'object'\n  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';\n  // PhantomJS has type \"DOMWindow\" for null\n  if (obj === null) return 'null';\n  // PhantomJS has type \"DOMWindow\" for undefined\n  if (obj === undefined) return 'undefined';\n  return type;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library() {\n  if (!(this instanceof Library)) return new Library();\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function(type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function(obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n","\"use strict\";\nvar __cov_0q_cZiLgq0kxGbW3gkWuxA = (Function('return this'))();\nif (!__cov_0q_cZiLgq0kxGbW3gkWuxA.__coverage__) { __cov_0q_cZiLgq0kxGbW3gkWuxA.__coverage__ = {}; }\n__cov_0q_cZiLgq0kxGbW3gkWuxA = __cov_0q_cZiLgq0kxGbW3gkWuxA.__coverage__;\nif (!(__cov_0q_cZiLgq0kxGbW3gkWuxA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Attribute.ts'])) {\n   __cov_0q_cZiLgq0kxGbW3gkWuxA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Attribute.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Attribute.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":1,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"b\":{},\"f\":{\"1\":0,\"2\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":3,\"loc\":{\"start\":{\"line\":3,\"column\":17},\"end\":{\"line\":3,\"column\":29}}},\"2\":{\"name\":\"Attribute\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":4,\"column\":25}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":7,\"column\":5}},\"3\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":5,\"column\":5}},\"4\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":6,\"column\":21}},\"5\":{\"start\":{\"line\":8,\"column\":0},\"end\":{\"line\":8,\"column\":43}},\"6\":{\"start\":{\"line\":9,\"column\":0},\"end\":{\"line\":9,\"column\":26}},\"7\":{\"start\":{\"line\":10,\"column\":0},\"end\":{\"line\":10,\"column\":31}}},\"branchMap\":{}};\n}\n__cov_0q_cZiLgq0kxGbW3gkWuxA = __cov_0q_cZiLgq0kxGbW3gkWuxA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Attribute.ts'];\n__cov_0q_cZiLgq0kxGbW3gkWuxA.s['1']++;exports.__esModule=true;__cov_0q_cZiLgq0kxGbW3gkWuxA.s['2']++;var Attribute=function(){__cov_0q_cZiLgq0kxGbW3gkWuxA.f['1']++;function Attribute(){__cov_0q_cZiLgq0kxGbW3gkWuxA.f['2']++;}__cov_0q_cZiLgq0kxGbW3gkWuxA.s['4']++;return Attribute;}();__cov_0q_cZiLgq0kxGbW3gkWuxA.s['5']++;Attribute.QUALIFIER_PROPERTY='qualifier';__cov_0q_cZiLgq0kxGbW3gkWuxA.s['6']++;Attribute.VALUE='value';__cov_0q_cZiLgq0kxGbW3gkWuxA.s['7']++;exports['default']=Attribute;\n","\"use strict\";\nvar __cov_n2M0rD7lWAHhFgU0c1Yyvw = (Function('return this'))();\nif (!__cov_n2M0rD7lWAHhFgU0c1Yyvw.__coverage__) { __cov_n2M0rD7lWAHhFgU0c1Yyvw.__coverage__ = {}; }\n__cov_n2M0rD7lWAHhFgU0c1Yyvw = __cov_n2M0rD7lWAHhFgU0c1Yyvw.__coverage__;\nif (!(__cov_n2M0rD7lWAHhFgU0c1Yyvw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeCreatedNotification.ts'])) {\n   __cov_n2M0rD7lWAHhFgU0c1Yyvw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeCreatedNotification.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeCreatedNotification.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":36},\"end\":{\"line\":14,\"column\":54}}},\"7\":{\"name\":\"AttributeCreatedNotification\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":96}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":28,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":52}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":26,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":40}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":42}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":34}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":36}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":38}},\"24\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":83}},\"25\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":21}},\"26\":{\"start\":{\"line\":27,\"column\":4},\"end\":{\"line\":27,\"column\":40}},\"27\":{\"start\":{\"line\":29,\"column\":0},\"end\":{\"line\":29,\"column\":50}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_n2M0rD7lWAHhFgU0c1Yyvw = __cov_n2M0rD7lWAHhFgU0c1Yyvw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeCreatedNotification.ts'];\n__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['1']++;var __extends=(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['1'][0]++,this)&&(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['1'][1]++,this.__extends)||(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['1'][2]++,function(){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['1']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['2']++;var extendStatics=(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['2'][0]++,Object.setPrototypeOf)||(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['2'][2]++,function(d,b){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['2']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['3']++;d.__proto__=b;})||(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['2'][3]++,function(d,b){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['3']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['4']++;for(var p in b){__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['5']++;if(b.hasOwnProperty(p)){__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['3'][0]++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['6']++;d[p]=b[p];}else{__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['3'][1]++;}}});__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['7']++;return function(d,b){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['4']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['8']++;extendStatics(d,b);function __(){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['5']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['10']++;this.constructor=d;}__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['11']++;d.prototype=b===null?(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['4'][0]++,Object.create(b)):(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['12']++;exports.__esModule=true;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['13']++;var Command_1=require('./Command');__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['14']++;var AttributeCreatedNotification=function(_super){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['6']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['15']++;__extends(AttributeCreatedNotification,_super);function AttributeCreatedNotification(pmId,attributeId,propertyName,newValue,qualifier){__cov_n2M0rD7lWAHhFgU0c1Yyvw.f['7']++;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['17']++;var _this=(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['5'][0]++,_super.call(this))||(__cov_n2M0rD7lWAHhFgU0c1Yyvw.b['5'][1]++,this);__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['18']++;_this.pmId=pmId;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['19']++;_this.attributeId=attributeId;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['20']++;_this.propertyName=propertyName;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['21']++;_this.newValue=newValue;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['22']++;_this.qualifier=qualifier;__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['23']++;_this.id='AttributeCreated';__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['24']++;_this.className='org.opendolphin.core.comm.AttributeCreatedNotification';__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['25']++;return _this;}__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['26']++;return AttributeCreatedNotification;}(Command_1['default']);__cov_n2M0rD7lWAHhFgU0c1Yyvw.s['27']++;exports['default']=AttributeCreatedNotification;\n","\"use strict\";\nvar __cov_kFUIuHuOky$fF6vJyzb8ZA = (Function('return this'))();\nif (!__cov_kFUIuHuOky$fF6vJyzb8ZA.__coverage__) { __cov_kFUIuHuOky$fF6vJyzb8ZA.__coverage__ = {}; }\n__cov_kFUIuHuOky$fF6vJyzb8ZA = __cov_kFUIuHuOky$fF6vJyzb8ZA.__coverage__;\nif (!(__cov_kFUIuHuOky$fF6vJyzb8ZA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeMetadataChangedCommand.ts'])) {\n   __cov_kFUIuHuOky$fF6vJyzb8ZA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeMetadataChangedCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeMetadataChangedCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":39},\"end\":{\"line\":14,\"column\":57}}},\"7\":{\"name\":\"AttributeMetadataChangedCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":79}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":26,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":55}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":24,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":40}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":42}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":28}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":46}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":86}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":21}},\"24\":{\"start\":{\"line\":25,\"column\":4},\"end\":{\"line\":25,\"column\":43}},\"25\":{\"start\":{\"line\":27,\"column\":0},\"end\":{\"line\":27,\"column\":53}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_kFUIuHuOky$fF6vJyzb8ZA = __cov_kFUIuHuOky$fF6vJyzb8ZA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/AttributeMetadataChangedCommand.ts'];\n__cov_kFUIuHuOky$fF6vJyzb8ZA.s['1']++;var __extends=(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['1'][0]++,this)&&(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['1'][1]++,this.__extends)||(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['1'][2]++,function(){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['1']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['2']++;var extendStatics=(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['2'][0]++,Object.setPrototypeOf)||(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['2'][2]++,function(d,b){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['2']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['3']++;d.__proto__=b;})||(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['2'][3]++,function(d,b){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['3']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['4']++;for(var p in b){__cov_kFUIuHuOky$fF6vJyzb8ZA.s['5']++;if(b.hasOwnProperty(p)){__cov_kFUIuHuOky$fF6vJyzb8ZA.b['3'][0]++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['6']++;d[p]=b[p];}else{__cov_kFUIuHuOky$fF6vJyzb8ZA.b['3'][1]++;}}});__cov_kFUIuHuOky$fF6vJyzb8ZA.s['7']++;return function(d,b){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['4']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['8']++;extendStatics(d,b);function __(){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['5']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['10']++;this.constructor=d;}__cov_kFUIuHuOky$fF6vJyzb8ZA.s['11']++;d.prototype=b===null?(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['4'][0]++,Object.create(b)):(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_kFUIuHuOky$fF6vJyzb8ZA.s['12']++;exports.__esModule=true;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['13']++;var Command_1=require('./Command');__cov_kFUIuHuOky$fF6vJyzb8ZA.s['14']++;var AttributeMetadataChangedCommand=function(_super){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['6']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['15']++;__extends(AttributeMetadataChangedCommand,_super);function AttributeMetadataChangedCommand(attributeId,metadataName,value){__cov_kFUIuHuOky$fF6vJyzb8ZA.f['7']++;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['17']++;var _this=(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['5'][0]++,_super.call(this))||(__cov_kFUIuHuOky$fF6vJyzb8ZA.b['5'][1]++,this);__cov_kFUIuHuOky$fF6vJyzb8ZA.s['18']++;_this.attributeId=attributeId;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['19']++;_this.metadataName=metadataName;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['20']++;_this.value=value;__cov_kFUIuHuOky$fF6vJyzb8ZA.s['21']++;_this.id='AttributeMetadataChanged';__cov_kFUIuHuOky$fF6vJyzb8ZA.s['22']++;_this.className='org.opendolphin.core.comm.AttributeMetadataChangedCommand';__cov_kFUIuHuOky$fF6vJyzb8ZA.s['23']++;return _this;}__cov_kFUIuHuOky$fF6vJyzb8ZA.s['24']++;return AttributeMetadataChangedCommand;}(Command_1['default']);__cov_kFUIuHuOky$fF6vJyzb8ZA.s['25']++;exports['default']=AttributeMetadataChangedCommand;\n","\"use strict\";\nvar __cov_AaVz7HKwkE2KPAGhUucb4Q = (Function('return this'))();\nif (!__cov_AaVz7HKwkE2KPAGhUucb4Q.__coverage__) { __cov_AaVz7HKwkE2KPAGhUucb4Q.__coverage__ = {}; }\n__cov_AaVz7HKwkE2KPAGhUucb4Q = __cov_AaVz7HKwkE2KPAGhUucb4Q.__coverage__;\nif (!(__cov_AaVz7HKwkE2KPAGhUucb4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CallNamedActionCommand.ts'])) {\n   __cov_AaVz7HKwkE2KPAGhUucb4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CallNamedActionCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CallNamedActionCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":30},\"end\":{\"line\":14,\"column\":48}}},\"7\":{\"name\":\"CallNamedActionCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":48}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":46}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":38}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":37}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":77}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":34}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":44}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_AaVz7HKwkE2KPAGhUucb4Q = __cov_AaVz7HKwkE2KPAGhUucb4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CallNamedActionCommand.ts'];\n__cov_AaVz7HKwkE2KPAGhUucb4Q.s['1']++;var __extends=(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['1'][0]++,this)&&(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['1'][1]++,this.__extends)||(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['1'][2]++,function(){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['1']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['2']++;var extendStatics=(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['2'][0]++,Object.setPrototypeOf)||(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['2'][2]++,function(d,b){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['2']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['3']++;d.__proto__=b;})||(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['2'][3]++,function(d,b){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['3']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['4']++;for(var p in b){__cov_AaVz7HKwkE2KPAGhUucb4Q.s['5']++;if(b.hasOwnProperty(p)){__cov_AaVz7HKwkE2KPAGhUucb4Q.b['3'][0]++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['6']++;d[p]=b[p];}else{__cov_AaVz7HKwkE2KPAGhUucb4Q.b['3'][1]++;}}});__cov_AaVz7HKwkE2KPAGhUucb4Q.s['7']++;return function(d,b){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['4']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['8']++;extendStatics(d,b);function __(){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['5']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['10']++;this.constructor=d;}__cov_AaVz7HKwkE2KPAGhUucb4Q.s['11']++;d.prototype=b===null?(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['4'][0]++,Object.create(b)):(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_AaVz7HKwkE2KPAGhUucb4Q.s['12']++;exports.__esModule=true;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['13']++;var Command_1=require('./Command');__cov_AaVz7HKwkE2KPAGhUucb4Q.s['14']++;var CallNamedActionCommand=function(_super){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['6']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['15']++;__extends(CallNamedActionCommand,_super);function CallNamedActionCommand(actionName){__cov_AaVz7HKwkE2KPAGhUucb4Q.f['7']++;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['17']++;var _this=(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['5'][0]++,_super.call(this))||(__cov_AaVz7HKwkE2KPAGhUucb4Q.b['5'][1]++,this);__cov_AaVz7HKwkE2KPAGhUucb4Q.s['18']++;_this.actionName=actionName;__cov_AaVz7HKwkE2KPAGhUucb4Q.s['19']++;_this.id='CallNamedAction';__cov_AaVz7HKwkE2KPAGhUucb4Q.s['20']++;_this.className='org.opendolphin.core.comm.CallNamedActionCommand';__cov_AaVz7HKwkE2KPAGhUucb4Q.s['21']++;return _this;}__cov_AaVz7HKwkE2KPAGhUucb4Q.s['22']++;return CallNamedActionCommand;}(Command_1['default']);__cov_AaVz7HKwkE2KPAGhUucb4Q.s['23']++;exports['default']=CallNamedActionCommand;\n","\"use strict\";\nvar __cov_MBv39ygfyujvs5eJpY9wRQ = (Function('return this'))();\nif (!__cov_MBv39ygfyujvs5eJpY9wRQ.__coverage__) { __cov_MBv39ygfyujvs5eJpY9wRQ.__coverage__ = {}; }\n__cov_MBv39ygfyujvs5eJpY9wRQ = __cov_MBv39ygfyujvs5eJpY9wRQ.__coverage__;\nif (!(__cov_MBv39ygfyujvs5eJpY9wRQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ChangeAttributeMetadataCommand.ts'])) {\n   __cov_MBv39ygfyujvs5eJpY9wRQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ChangeAttributeMetadataCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ChangeAttributeMetadataCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":38},\"end\":{\"line\":14,\"column\":56}}},\"7\":{\"name\":\"ChangeAttributeMetadataCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":78}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":26,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":54}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":24,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":40}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":42}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":28}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":45}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":85}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":21}},\"24\":{\"start\":{\"line\":25,\"column\":4},\"end\":{\"line\":25,\"column\":42}},\"25\":{\"start\":{\"line\":27,\"column\":0},\"end\":{\"line\":27,\"column\":52}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_MBv39ygfyujvs5eJpY9wRQ = __cov_MBv39ygfyujvs5eJpY9wRQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ChangeAttributeMetadataCommand.ts'];\n__cov_MBv39ygfyujvs5eJpY9wRQ.s['1']++;var __extends=(__cov_MBv39ygfyujvs5eJpY9wRQ.b['1'][0]++,this)&&(__cov_MBv39ygfyujvs5eJpY9wRQ.b['1'][1]++,this.__extends)||(__cov_MBv39ygfyujvs5eJpY9wRQ.b['1'][2]++,function(){__cov_MBv39ygfyujvs5eJpY9wRQ.f['1']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['2']++;var extendStatics=(__cov_MBv39ygfyujvs5eJpY9wRQ.b['2'][0]++,Object.setPrototypeOf)||(__cov_MBv39ygfyujvs5eJpY9wRQ.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_MBv39ygfyujvs5eJpY9wRQ.b['2'][2]++,function(d,b){__cov_MBv39ygfyujvs5eJpY9wRQ.f['2']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['3']++;d.__proto__=b;})||(__cov_MBv39ygfyujvs5eJpY9wRQ.b['2'][3]++,function(d,b){__cov_MBv39ygfyujvs5eJpY9wRQ.f['3']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['4']++;for(var p in b){__cov_MBv39ygfyujvs5eJpY9wRQ.s['5']++;if(b.hasOwnProperty(p)){__cov_MBv39ygfyujvs5eJpY9wRQ.b['3'][0]++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['6']++;d[p]=b[p];}else{__cov_MBv39ygfyujvs5eJpY9wRQ.b['3'][1]++;}}});__cov_MBv39ygfyujvs5eJpY9wRQ.s['7']++;return function(d,b){__cov_MBv39ygfyujvs5eJpY9wRQ.f['4']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['8']++;extendStatics(d,b);function __(){__cov_MBv39ygfyujvs5eJpY9wRQ.f['5']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['10']++;this.constructor=d;}__cov_MBv39ygfyujvs5eJpY9wRQ.s['11']++;d.prototype=b===null?(__cov_MBv39ygfyujvs5eJpY9wRQ.b['4'][0]++,Object.create(b)):(__cov_MBv39ygfyujvs5eJpY9wRQ.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_MBv39ygfyujvs5eJpY9wRQ.s['12']++;exports.__esModule=true;__cov_MBv39ygfyujvs5eJpY9wRQ.s['13']++;var Command_1=require('./Command');__cov_MBv39ygfyujvs5eJpY9wRQ.s['14']++;var ChangeAttributeMetadataCommand=function(_super){__cov_MBv39ygfyujvs5eJpY9wRQ.f['6']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['15']++;__extends(ChangeAttributeMetadataCommand,_super);function ChangeAttributeMetadataCommand(attributeId,metadataName,value){__cov_MBv39ygfyujvs5eJpY9wRQ.f['7']++;__cov_MBv39ygfyujvs5eJpY9wRQ.s['17']++;var _this=(__cov_MBv39ygfyujvs5eJpY9wRQ.b['5'][0]++,_super.call(this))||(__cov_MBv39ygfyujvs5eJpY9wRQ.b['5'][1]++,this);__cov_MBv39ygfyujvs5eJpY9wRQ.s['18']++;_this.attributeId=attributeId;__cov_MBv39ygfyujvs5eJpY9wRQ.s['19']++;_this.metadataName=metadataName;__cov_MBv39ygfyujvs5eJpY9wRQ.s['20']++;_this.value=value;__cov_MBv39ygfyujvs5eJpY9wRQ.s['21']++;_this.id='ChangeAttributeMetadata';__cov_MBv39ygfyujvs5eJpY9wRQ.s['22']++;_this.className='org.opendolphin.core.comm.ChangeAttributeMetadataCommand';__cov_MBv39ygfyujvs5eJpY9wRQ.s['23']++;return _this;}__cov_MBv39ygfyujvs5eJpY9wRQ.s['24']++;return ChangeAttributeMetadataCommand;}(Command_1['default']);__cov_MBv39ygfyujvs5eJpY9wRQ.s['25']++;exports['default']=ChangeAttributeMetadataCommand;\n","\"use strict\";\nvar __cov_A_0RP5n2OzxLXfMABzPTRA = (Function('return this'))();\nif (!__cov_A_0RP5n2OzxLXfMABzPTRA.__coverage__) { __cov_A_0RP5n2OzxLXfMABzPTRA.__coverage__ = {}; }\n__cov_A_0RP5n2OzxLXfMABzPTRA = __cov_A_0RP5n2OzxLXfMABzPTRA.__coverage__;\nif (!(__cov_A_0RP5n2OzxLXfMABzPTRA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientAttribute.ts'])) {\n   __cov_A_0RP5n2OzxLXfMABzPTRA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientAttribute.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientAttribute.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":1,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":23},\"end\":{\"line\":4,\"column\":35}}},\"2\":{\"name\":\"ClientAttribute\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":5,\"column\":61}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":37},\"end\":{\"line\":14,\"column\":49}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":18,\"loc\":{\"start\":{\"line\":18,\"column\":53},\"end\":{\"line\":18,\"column\":82}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":24,\"loc\":{\"start\":{\"line\":24,\"column\":53},\"end\":{\"line\":24,\"column\":65}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":27,\"loc\":{\"start\":{\"line\":27,\"column\":41},\"end\":{\"line\":27,\"column\":53}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":30,\"loc\":{\"start\":{\"line\":30,\"column\":41},\"end\":{\"line\":30,\"column\":61}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":38,\"loc\":{\"start\":{\"line\":38,\"column\":45},\"end\":{\"line\":38,\"column\":69}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":45,\"loc\":{\"start\":{\"line\":45,\"column\":45},\"end\":{\"line\":45,\"column\":57}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":48,\"loc\":{\"start\":{\"line\":48,\"column\":33},\"end\":{\"line\":48,\"column\":50}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":69,\"loc\":{\"start\":{\"line\":69,\"column\":46},\"end\":{\"line\":69,\"column\":70}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":73,\"loc\":{\"start\":{\"line\":73,\"column\":50},\"end\":{\"line\":73,\"column\":74}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":76,\"loc\":{\"start\":{\"line\":76,\"column\":41},\"end\":{\"line\":76,\"column\":68}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":39}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":84,\"column\":5}},\"4\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":12,\"column\":5}},\"5\":{\"start\":{\"line\":6,\"column\":8},\"end\":{\"line\":6,\"column\":41}},\"6\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":78}},\"7\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":58}},\"8\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":62}},\"9\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":29}},\"10\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":37}},\"11\":{\"start\":{\"line\":14,\"column\":4},\"end\":{\"line\":17,\"column\":6}},\"12\":{\"start\":{\"line\":15,\"column\":8},\"end\":{\"line\":15,\"column\":98}},\"13\":{\"start\":{\"line\":16,\"column\":8},\"end\":{\"line\":16,\"column\":22}},\"14\":{\"start\":{\"line\":18,\"column\":4},\"end\":{\"line\":23,\"column\":6}},\"15\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":21,\"column\":9}},\"16\":{\"start\":{\"line\":20,\"column\":12},\"end\":{\"line\":20,\"column\":98}},\"17\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":51}},\"18\":{\"start\":{\"line\":24,\"column\":4},\"end\":{\"line\":26,\"column\":6}},\"19\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":38}},\"20\":{\"start\":{\"line\":27,\"column\":4},\"end\":{\"line\":29,\"column\":6}},\"21\":{\"start\":{\"line\":28,\"column\":8},\"end\":{\"line\":28,\"column\":26}},\"22\":{\"start\":{\"line\":30,\"column\":4},\"end\":{\"line\":37,\"column\":6}},\"23\":{\"start\":{\"line\":31,\"column\":8},\"end\":{\"line\":31,\"column\":65}},\"24\":{\"start\":{\"line\":32,\"column\":8},\"end\":{\"line\":33,\"column\":19}},\"25\":{\"start\":{\"line\":33,\"column\":12},\"end\":{\"line\":33,\"column\":19}},\"26\":{\"start\":{\"line\":34,\"column\":8},\"end\":{\"line\":34,\"column\":34}},\"27\":{\"start\":{\"line\":35,\"column\":8},\"end\":{\"line\":35,\"column\":35}},\"28\":{\"start\":{\"line\":36,\"column\":8},\"end\":{\"line\":36,\"column\":89}},\"29\":{\"start\":{\"line\":38,\"column\":4},\"end\":{\"line\":44,\"column\":6}},\"30\":{\"start\":{\"line\":39,\"column\":8},\"end\":{\"line\":40,\"column\":19}},\"31\":{\"start\":{\"line\":40,\"column\":12},\"end\":{\"line\":40,\"column\":19}},\"32\":{\"start\":{\"line\":41,\"column\":8},\"end\":{\"line\":41,\"column\":42}},\"33\":{\"start\":{\"line\":42,\"column\":8},\"end\":{\"line\":42,\"column\":38}},\"34\":{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":96}},\"35\":{\"start\":{\"line\":45,\"column\":4},\"end\":{\"line\":47,\"column\":6}},\"36\":{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":30}},\"37\":{\"start\":{\"line\":48,\"column\":4},\"end\":{\"line\":68,\"column\":6}},\"38\":{\"start\":{\"line\":49,\"column\":8},\"end\":{\"line\":51,\"column\":9}},\"39\":{\"start\":{\"line\":50,\"column\":12},\"end\":{\"line\":50,\"column\":24}},\"40\":{\"start\":{\"line\":52,\"column\":8},\"end\":{\"line\":52,\"column\":27}},\"41\":{\"start\":{\"line\":53,\"column\":8},\"end\":{\"line\":55,\"column\":9}},\"42\":{\"start\":{\"line\":54,\"column\":12},\"end\":{\"line\":54,\"column\":37}},\"43\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":59,\"column\":9}},\"44\":{\"start\":{\"line\":57,\"column\":12},\"end\":{\"line\":57,\"column\":123}},\"45\":{\"start\":{\"line\":58,\"column\":12},\"end\":{\"line\":58,\"column\":50}},\"46\":{\"start\":{\"line\":60,\"column\":8},\"end\":{\"line\":60,\"column\":23}},\"47\":{\"start\":{\"line\":61,\"column\":8},\"end\":{\"line\":63,\"column\":9}},\"48\":{\"start\":{\"line\":62,\"column\":12},\"end\":{\"line\":62,\"column\":22}},\"49\":{\"start\":{\"line\":64,\"column\":8},\"end\":{\"line\":66,\"column\":9}},\"50\":{\"start\":{\"line\":65,\"column\":12},\"end\":{\"line\":65,\"column\":94}},\"51\":{\"start\":{\"line\":67,\"column\":8},\"end\":{\"line\":67,\"column\":22}},\"52\":{\"start\":{\"line\":69,\"column\":4},\"end\":{\"line\":72,\"column\":6}},\"53\":{\"start\":{\"line\":70,\"column\":8},\"end\":{\"line\":70,\"column\":50}},\"54\":{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":71,\"column\":73}},\"55\":{\"start\":{\"line\":73,\"column\":4},\"end\":{\"line\":75,\"column\":6}},\"56\":{\"start\":{\"line\":74,\"column\":8},\"end\":{\"line\":74,\"column\":54}},\"57\":{\"start\":{\"line\":76,\"column\":4},\"end\":{\"line\":82,\"column\":6}},\"58\":{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":81,\"column\":9}},\"59\":{\"start\":{\"line\":78,\"column\":12},\"end\":{\"line\":78,\"column\":62}},\"60\":{\"start\":{\"line\":79,\"column\":12},\"end\":{\"line\":79,\"column\":49}},\"61\":{\"start\":{\"line\":83,\"column\":4},\"end\":{\"line\":83,\"column\":27}},\"62\":{\"start\":{\"line\":85,\"column\":0},\"end\":{\"line\":85,\"column\":72}},\"63\":{\"start\":{\"line\":86,\"column\":0},\"end\":{\"line\":86,\"column\":49}},\"64\":{\"start\":{\"line\":87,\"column\":0},\"end\":{\"line\":87,\"column\":42}}},\"branchMap\":{\"1\":{\"line\":19,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":8}},{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":8}}]},\"2\":{\"line\":32,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":32,\"column\":8},\"end\":{\"line\":32,\"column\":8}},{\"start\":{\"line\":32,\"column\":8},\"end\":{\"line\":32,\"column\":8}}]},\"3\":{\"line\":39,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":39,\"column\":8},\"end\":{\"line\":39,\"column\":8}},{\"start\":{\"line\":39,\"column\":8},\"end\":{\"line\":39,\"column\":8}}]},\"4\":{\"line\":49,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":49,\"column\":8},\"end\":{\"line\":49,\"column\":8}},{\"start\":{\"line\":49,\"column\":8},\"end\":{\"line\":49,\"column\":8}}]},\"5\":{\"line\":49,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":49,\"column\":12},\"end\":{\"line\":49,\"column\":25}},{\"start\":{\"line\":49,\"column\":29},\"end\":{\"line\":49,\"column\":47}}]},\"6\":{\"line\":53,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":53,\"column\":8},\"end\":{\"line\":53,\"column\":8}},{\"start\":{\"line\":53,\"column\":8},\"end\":{\"line\":53,\"column\":8}}]},\"7\":{\"line\":53,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":53,\"column\":12},\"end\":{\"line\":53,\"column\":36}},{\"start\":{\"line\":53,\"column\":40},\"end\":{\"line\":53,\"column\":65}},{\"start\":{\"line\":53,\"column\":69},\"end\":{\"line\":53,\"column\":93}}]},\"8\":{\"line\":56,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":8}},{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":8}}]},\"9\":{\"line\":61,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":61,\"column\":8},\"end\":{\"line\":61,\"column\":8}},{\"start\":{\"line\":61,\"column\":8},\"end\":{\"line\":61,\"column\":8}}]},\"10\":{\"line\":61,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":61,\"column\":12},\"end\":{\"line\":61,\"column\":66}},{\"start\":{\"line\":61,\"column\":70},\"end\":{\"line\":61,\"column\":92}}]},\"11\":{\"line\":64,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":64,\"column\":8},\"end\":{\"line\":64,\"column\":8}},{\"start\":{\"line\":64,\"column\":8},\"end\":{\"line\":64,\"column\":8}}]},\"12\":{\"line\":77,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}},{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}}]}}};\n}\n__cov_A_0RP5n2OzxLXfMABzPTRA = __cov_A_0RP5n2OzxLXfMABzPTRA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientAttribute.ts'];\n__cov_A_0RP5n2OzxLXfMABzPTRA.s['1']++;exports.__esModule=true;__cov_A_0RP5n2OzxLXfMABzPTRA.s['2']++;var EventBus_1=require('./EventBus');__cov_A_0RP5n2OzxLXfMABzPTRA.s['3']++;var ClientAttribute=function(){__cov_A_0RP5n2OzxLXfMABzPTRA.f['1']++;function ClientAttribute(propertyName,qualifier,value){__cov_A_0RP5n2OzxLXfMABzPTRA.f['2']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['5']++;this.propertyName=propertyName;__cov_A_0RP5n2OzxLXfMABzPTRA.s['6']++;this.id=''+ClientAttribute.clientAttributeInstanceCount++ +'C';__cov_A_0RP5n2OzxLXfMABzPTRA.s['7']++;this.valueChangeBus=new EventBus_1['default']();__cov_A_0RP5n2OzxLXfMABzPTRA.s['8']++;this.qualifierChangeBus=new EventBus_1['default']();__cov_A_0RP5n2OzxLXfMABzPTRA.s['9']++;this.setValue(value);__cov_A_0RP5n2OzxLXfMABzPTRA.s['10']++;this.setQualifier(qualifier);}__cov_A_0RP5n2OzxLXfMABzPTRA.s['11']++;ClientAttribute.prototype.copy=function(){__cov_A_0RP5n2OzxLXfMABzPTRA.f['3']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['12']++;var result=new ClientAttribute(this.propertyName,this.getQualifier(),this.getValue());__cov_A_0RP5n2OzxLXfMABzPTRA.s['13']++;return result;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['14']++;ClientAttribute.prototype.setPresentationModel=function(presentationModel){__cov_A_0RP5n2OzxLXfMABzPTRA.f['4']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['15']++;if(this.presentationModel){__cov_A_0RP5n2OzxLXfMABzPTRA.b['1'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['16']++;alert('You can not set a presentation model for an attribute that is already bound.');}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['1'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['17']++;this.presentationModel=presentationModel;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['18']++;ClientAttribute.prototype.getPresentationModel=function(){__cov_A_0RP5n2OzxLXfMABzPTRA.f['5']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['19']++;return this.presentationModel;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['20']++;ClientAttribute.prototype.getValue=function(){__cov_A_0RP5n2OzxLXfMABzPTRA.f['6']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['21']++;return this.value;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['22']++;ClientAttribute.prototype.setValue=function(newValue){__cov_A_0RP5n2OzxLXfMABzPTRA.f['7']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['23']++;var verifiedValue=ClientAttribute.checkValue(newValue);__cov_A_0RP5n2OzxLXfMABzPTRA.s['24']++;if(this.value==verifiedValue){__cov_A_0RP5n2OzxLXfMABzPTRA.b['2'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['25']++;return;}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['2'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['26']++;var oldValue=this.value;__cov_A_0RP5n2OzxLXfMABzPTRA.s['27']++;this.value=verifiedValue;__cov_A_0RP5n2OzxLXfMABzPTRA.s['28']++;this.valueChangeBus.trigger({'oldValue':oldValue,'newValue':verifiedValue});};__cov_A_0RP5n2OzxLXfMABzPTRA.s['29']++;ClientAttribute.prototype.setQualifier=function(newQualifier){__cov_A_0RP5n2OzxLXfMABzPTRA.f['8']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['30']++;if(this.qualifier==newQualifier){__cov_A_0RP5n2OzxLXfMABzPTRA.b['3'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['31']++;return;}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['3'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['32']++;var oldQualifier=this.qualifier;__cov_A_0RP5n2OzxLXfMABzPTRA.s['33']++;this.qualifier=newQualifier;__cov_A_0RP5n2OzxLXfMABzPTRA.s['34']++;this.qualifierChangeBus.trigger({'oldValue':oldQualifier,'newValue':newQualifier});};__cov_A_0RP5n2OzxLXfMABzPTRA.s['35']++;ClientAttribute.prototype.getQualifier=function(){__cov_A_0RP5n2OzxLXfMABzPTRA.f['9']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['36']++;return this.qualifier;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['37']++;ClientAttribute.checkValue=function(value){__cov_A_0RP5n2OzxLXfMABzPTRA.f['10']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['38']++;if((__cov_A_0RP5n2OzxLXfMABzPTRA.b['5'][0]++,value==null)||(__cov_A_0RP5n2OzxLXfMABzPTRA.b['5'][1]++,value==undefined)){__cov_A_0RP5n2OzxLXfMABzPTRA.b['4'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['39']++;return null;}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['4'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['40']++;var result=value;__cov_A_0RP5n2OzxLXfMABzPTRA.s['41']++;if((__cov_A_0RP5n2OzxLXfMABzPTRA.b['7'][0]++,result instanceof String)||(__cov_A_0RP5n2OzxLXfMABzPTRA.b['7'][1]++,result instanceof Boolean)||(__cov_A_0RP5n2OzxLXfMABzPTRA.b['7'][2]++,result instanceof Number)){__cov_A_0RP5n2OzxLXfMABzPTRA.b['6'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['42']++;result=value.valueOf();}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['6'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['43']++;if(result instanceof ClientAttribute){__cov_A_0RP5n2OzxLXfMABzPTRA.b['8'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['44']++;console.log('An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.');__cov_A_0RP5n2OzxLXfMABzPTRA.s['45']++;result=this.checkValue(value.value);}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['8'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['46']++;var ok=false;__cov_A_0RP5n2OzxLXfMABzPTRA.s['47']++;if((__cov_A_0RP5n2OzxLXfMABzPTRA.b['10'][0]++,this.SUPPORTED_VALUE_TYPES.indexOf(typeof result)>-1)||(__cov_A_0RP5n2OzxLXfMABzPTRA.b['10'][1]++,result instanceof Date)){__cov_A_0RP5n2OzxLXfMABzPTRA.b['9'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['48']++;ok=true;}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['9'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['49']++;if(!ok){__cov_A_0RP5n2OzxLXfMABzPTRA.b['11'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['50']++;throw new Error('Attribute values of this type are not allowed: '+typeof value);}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['11'][1]++;}__cov_A_0RP5n2OzxLXfMABzPTRA.s['51']++;return result;};__cov_A_0RP5n2OzxLXfMABzPTRA.s['52']++;ClientAttribute.prototype.onValueChange=function(eventHandler){__cov_A_0RP5n2OzxLXfMABzPTRA.f['11']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['53']++;this.valueChangeBus.onEvent(eventHandler);__cov_A_0RP5n2OzxLXfMABzPTRA.s['54']++;eventHandler({'oldValue':this.value,'newValue':this.value});};__cov_A_0RP5n2OzxLXfMABzPTRA.s['55']++;ClientAttribute.prototype.onQualifierChange=function(eventHandler){__cov_A_0RP5n2OzxLXfMABzPTRA.f['12']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['56']++;this.qualifierChangeBus.onEvent(eventHandler);};__cov_A_0RP5n2OzxLXfMABzPTRA.s['57']++;ClientAttribute.prototype.syncWith=function(sourceAttribute){__cov_A_0RP5n2OzxLXfMABzPTRA.f['13']++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['58']++;if(sourceAttribute){__cov_A_0RP5n2OzxLXfMABzPTRA.b['12'][0]++;__cov_A_0RP5n2OzxLXfMABzPTRA.s['59']++;this.setQualifier(sourceAttribute.getQualifier());__cov_A_0RP5n2OzxLXfMABzPTRA.s['60']++;this.setValue(sourceAttribute.value);}else{__cov_A_0RP5n2OzxLXfMABzPTRA.b['12'][1]++;}};__cov_A_0RP5n2OzxLXfMABzPTRA.s['61']++;return ClientAttribute;}();__cov_A_0RP5n2OzxLXfMABzPTRA.s['62']++;ClientAttribute.SUPPORTED_VALUE_TYPES=['string','number','boolean'];__cov_A_0RP5n2OzxLXfMABzPTRA.s['63']++;ClientAttribute.clientAttributeInstanceCount=0;__cov_A_0RP5n2OzxLXfMABzPTRA.s['64']++;exports.ClientAttribute=ClientAttribute;\n","\"use strict\";\nvar __cov_gyMepB3y087B_fjjWg2TUA = (Function('return this'))();\nif (!__cov_gyMepB3y087B_fjjWg2TUA.__coverage__) { __cov_gyMepB3y087B_fjjWg2TUA.__coverage__ = {}; }\n__cov_gyMepB3y087B_fjjWg2TUA = __cov_gyMepB3y087B_fjjWg2TUA.__coverage__;\nif (!(__cov_gyMepB3y087B_fjjWg2TUA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientConnector.ts'])) {\n   __cov_gyMepB3y087B_fjjWg2TUA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientConnector.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientConnector.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":1,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0,\"102\":0,\"103\":0,\"104\":0,\"105\":0,\"106\":0,\"107\":0,\"108\":0,\"109\":0,\"110\":0,\"111\":0,\"112\":0,\"113\":0,\"114\":0,\"115\":0,\"116\":0,\"117\":0,\"118\":0,\"119\":0,\"120\":0,\"121\":0,\"122\":0,\"123\":0,\"124\":0,\"125\":0,\"126\":0,\"127\":0,\"128\":0,\"129\":0,\"130\":0,\"131\":0,\"132\":0,\"133\":0,\"134\":0,\"135\":0,\"136\":0,\"137\":0,\"138\":0,\"139\":0,\"140\":0,\"141\":0,\"142\":0,\"143\":0,\"144\":0,\"145\":0,\"146\":0,\"147\":0,\"148\":0,\"149\":0,\"150\":0,\"151\":0,\"152\":0,\"153\":0,\"154\":0,\"155\":0,\"156\":0,\"157\":0,\"158\":0,\"159\":0,\"160\":0,\"161\":0,\"162\":0,\"163\":0,\"164\":0,\"165\":0,\"166\":0,\"167\":0,\"168\":0,\"169\":0,\"170\":0,\"171\":0,\"172\":0,\"173\":0,\"174\":0,\"175\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0],\"13\":[0,0],\"14\":[0,0],\"15\":[0,0],\"16\":[0,0],\"17\":[0,0],\"18\":[0,0],\"19\":[0,0],\"20\":[0,0],\"21\":[0,0],\"22\":[0,0],\"23\":[0,0],\"24\":[0,0],\"25\":[0,0],\"26\":[0,0],\"27\":[0,0],\"28\":[0,0],\"29\":[0,0],\"30\":[0,0],\"31\":[0,0],\"32\":[0,0],\"33\":[0,0],\"34\":[0,0],\"35\":[0,0],\"36\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":7,\"loc\":{\"start\":{\"line\":7,\"column\":23},\"end\":{\"line\":7,\"column\":35}}},\"2\":{\"name\":\"ClientConnector\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":4},\"end\":{\"line\":8,\"column\":80}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":21,\"loc\":{\"start\":{\"line\":21,\"column\":50},\"end\":{\"line\":21,\"column\":72}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":24,\"loc\":{\"start\":{\"line\":24,\"column\":47},\"end\":{\"line\":24,\"column\":66}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":27,\"loc\":{\"start\":{\"line\":27,\"column\":48},\"end\":{\"line\":27,\"column\":71}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":30,\"loc\":{\"start\":{\"line\":30,\"column\":50},\"end\":{\"line\":30,\"column\":72}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":33,\"loc\":{\"start\":{\"line\":33,\"column\":38},\"end\":{\"line\":33,\"column\":64}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":36,\"loc\":{\"start\":{\"line\":36,\"column\":37},\"end\":{\"line\":36,\"column\":68}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":44,\"loc\":{\"start\":{\"line\":44,\"column\":43},\"end\":{\"line\":44,\"column\":55}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":58,\"loc\":{\"start\":{\"line\":58,\"column\":43},\"end\":{\"line\":58,\"column\":58}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":59,\"loc\":{\"start\":{\"line\":59,\"column\":44},\"end\":{\"line\":59,\"column\":64}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":62,\"loc\":{\"start\":{\"line\":62,\"column\":29},\"end\":{\"line\":62,\"column\":48}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":73,\"loc\":{\"start\":{\"line\":73,\"column\":23},\"end\":{\"line\":73,\"column\":35}}},\"14\":{\"name\":\"(anonymous_14)\",\"line\":76,\"loc\":{\"start\":{\"line\":76,\"column\":39},\"end\":{\"line\":76,\"column\":58}}},\"15\":{\"name\":\"(anonymous_15)\",\"line\":109,\"loc\":{\"start\":{\"line\":109,\"column\":50},\"end\":{\"line\":109,\"column\":75}}},\"16\":{\"name\":\"(anonymous_16)\",\"line\":112,\"loc\":{\"start\":{\"line\":112,\"column\":69},\"end\":{\"line\":112,\"column\":94}}},\"17\":{\"name\":\"(anonymous_17)\",\"line\":119,\"loc\":{\"start\":{\"line\":119,\"column\":78},\"end\":{\"line\":119,\"column\":103}}},\"18\":{\"name\":\"(anonymous_18)\",\"line\":123,\"loc\":{\"start\":{\"line\":123,\"column\":69},\"end\":{\"line\":123,\"column\":94}}},\"19\":{\"name\":\"(anonymous_19)\",\"line\":129,\"loc\":{\"start\":{\"line\":129,\"column\":41},\"end\":{\"line\":129,\"column\":57}}},\"20\":{\"name\":\"(anonymous_20)\",\"line\":145,\"loc\":{\"start\":{\"line\":145,\"column\":58},\"end\":{\"line\":145,\"column\":83}}},\"21\":{\"name\":\"(anonymous_21)\",\"line\":165,\"loc\":{\"start\":{\"line\":165,\"column\":69},\"end\":{\"line\":165,\"column\":94}}},\"22\":{\"name\":\"(anonymous_22)\",\"line\":179,\"loc\":{\"start\":{\"line\":179,\"column\":65},\"end\":{\"line\":179,\"column\":90}}},\"23\":{\"name\":\"(anonymous_23)\",\"line\":191,\"loc\":{\"start\":{\"line\":191,\"column\":43},\"end\":{\"line\":191,\"column\":59}}},\"24\":{\"name\":\"(anonymous_24)\",\"line\":209,\"loc\":{\"start\":{\"line\":209,\"column\":70},\"end\":{\"line\":209,\"column\":95}}},\"25\":{\"name\":\"(anonymous_25)\",\"line\":216,\"loc\":{\"start\":{\"line\":216,\"column\":61},\"end\":{\"line\":216,\"column\":86}}},\"26\":{\"name\":\"(anonymous_26)\",\"line\":221,\"loc\":{\"start\":{\"line\":221,\"column\":39},\"end\":{\"line\":221,\"column\":51}}},\"27\":{\"name\":\"(anonymous_27)\",\"line\":231,\"loc\":{\"start\":{\"line\":231,\"column\":51},\"end\":{\"line\":231,\"column\":63}}},\"28\":{\"name\":\"(anonymous_28)\",\"line\":237,\"loc\":{\"start\":{\"line\":237,\"column\":28},\"end\":{\"line\":237,\"column\":46}}},\"29\":{\"name\":\"(anonymous_29)\",\"line\":242,\"loc\":{\"start\":{\"line\":242,\"column\":40},\"end\":{\"line\":242,\"column\":52}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":53}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":69}},\"4\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":5,\"column\":33}},\"5\":{\"start\":{\"line\":6,\"column\":0},\"end\":{\"line\":6,\"column\":51}},\"6\":{\"start\":{\"line\":7,\"column\":0},\"end\":{\"line\":250,\"column\":5}},\"7\":{\"start\":{\"line\":8,\"column\":4},\"end\":{\"line\":20,\"column\":5}},\"8\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":48}},\"9\":{\"start\":{\"line\":9,\"column\":34},\"end\":{\"line\":9,\"column\":46}},\"10\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":59}},\"11\":{\"start\":{\"line\":10,\"column\":39},\"end\":{\"line\":10,\"column\":57}},\"12\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":31}},\"13\":{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":38}},\"14\":{\"start\":{\"line\":13,\"column\":8},\"end\":{\"line\":13,\"column\":33}},\"15\":{\"start\":{\"line\":14,\"column\":8},\"end\":{\"line\":14,\"column\":29}},\"16\":{\"start\":{\"line\":15,\"column\":8},\"end\":{\"line\":15,\"column\":39}},\"17\":{\"start\":{\"line\":16,\"column\":8},\"end\":{\"line\":16,\"column\":43}},\"18\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":31}},\"19\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":46}},\"20\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":91}},\"21\":{\"start\":{\"line\":21,\"column\":4},\"end\":{\"line\":23,\"column\":6}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":41}},\"23\":{\"start\":{\"line\":24,\"column\":4},\"end\":{\"line\":26,\"column\":6}},\"24\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":35}},\"25\":{\"start\":{\"line\":27,\"column\":4},\"end\":{\"line\":29,\"column\":6}},\"26\":{\"start\":{\"line\":28,\"column\":8},\"end\":{\"line\":28,\"column\":40}},\"27\":{\"start\":{\"line\":30,\"column\":4},\"end\":{\"line\":32,\"column\":6}},\"28\":{\"start\":{\"line\":31,\"column\":8},\"end\":{\"line\":31,\"column\":41}},\"29\":{\"start\":{\"line\":33,\"column\":4},\"end\":{\"line\":35,\"column\":6}},\"30\":{\"start\":{\"line\":34,\"column\":8},\"end\":{\"line\":34,\"column\":47}},\"31\":{\"start\":{\"line\":36,\"column\":4},\"end\":{\"line\":43,\"column\":6}},\"32\":{\"start\":{\"line\":37,\"column\":8},\"end\":{\"line\":37,\"column\":74}},\"33\":{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":41,\"column\":9}},\"34\":{\"start\":{\"line\":39,\"column\":12},\"end\":{\"line\":39,\"column\":27}},\"35\":{\"start\":{\"line\":40,\"column\":12},\"end\":{\"line\":40,\"column\":19}},\"36\":{\"start\":{\"line\":42,\"column\":8},\"end\":{\"line\":42,\"column\":26}},\"37\":{\"start\":{\"line\":44,\"column\":4},\"end\":{\"line\":75,\"column\":6}},\"38\":{\"start\":{\"line\":45,\"column\":8},\"end\":{\"line\":45,\"column\":25}},\"39\":{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":54,\"column\":9}},\"40\":{\"start\":{\"line\":47,\"column\":12},\"end\":{\"line\":53,\"column\":13}},\"41\":{\"start\":{\"line\":48,\"column\":16},\"end\":{\"line\":48,\"column\":42}},\"42\":{\"start\":{\"line\":51,\"column\":16},\"end\":{\"line\":51,\"column\":46}},\"43\":{\"start\":{\"line\":52,\"column\":16},\"end\":{\"line\":52,\"column\":23}},\"44\":{\"start\":{\"line\":55,\"column\":8},\"end\":{\"line\":55,\"column\":37}},\"45\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":75}},\"46\":{\"start\":{\"line\":57,\"column\":8},\"end\":{\"line\":57,\"column\":75}},\"47\":{\"start\":{\"line\":58,\"column\":8},\"end\":{\"line\":58,\"column\":83}},\"48\":{\"start\":{\"line\":58,\"column\":60},\"end\":{\"line\":58,\"column\":79}},\"49\":{\"start\":{\"line\":59,\"column\":8},\"end\":{\"line\":74,\"column\":11}},\"50\":{\"start\":{\"line\":61,\"column\":12},\"end\":{\"line\":61,\"column\":32}},\"51\":{\"start\":{\"line\":62,\"column\":12},\"end\":{\"line\":66,\"column\":15}},\"52\":{\"start\":{\"line\":63,\"column\":16},\"end\":{\"line\":63,\"column\":52}},\"53\":{\"start\":{\"line\":64,\"column\":16},\"end\":{\"line\":65,\"column\":45}},\"54\":{\"start\":{\"line\":65,\"column\":20},\"end\":{\"line\":65,\"column\":45}},\"55\":{\"start\":{\"line\":67,\"column\":12},\"end\":{\"line\":70,\"column\":13}},\"56\":{\"start\":{\"line\":68,\"column\":16},\"end\":{\"line\":68,\"column\":48}},\"57\":{\"start\":{\"line\":73,\"column\":12},\"end\":{\"line\":73,\"column\":82}},\"58\":{\"start\":{\"line\":73,\"column\":37},\"end\":{\"line\":73,\"column\":63}},\"59\":{\"start\":{\"line\":76,\"column\":4},\"end\":{\"line\":108,\"column\":6}},\"60\":{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":106,\"column\":9}},\"61\":{\"start\":{\"line\":78,\"column\":12},\"end\":{\"line\":78,\"column\":51}},\"62\":{\"start\":{\"line\":80,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"63\":{\"start\":{\"line\":81,\"column\":12},\"end\":{\"line\":81,\"column\":70}},\"64\":{\"start\":{\"line\":83,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"65\":{\"start\":{\"line\":84,\"column\":12},\"end\":{\"line\":84,\"column\":79}},\"66\":{\"start\":{\"line\":86,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"67\":{\"start\":{\"line\":87,\"column\":12},\"end\":{\"line\":87,\"column\":70}},\"68\":{\"start\":{\"line\":89,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"69\":{\"start\":{\"line\":90,\"column\":12},\"end\":{\"line\":90,\"column\":59}},\"70\":{\"start\":{\"line\":92,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"71\":{\"start\":{\"line\":93,\"column\":12},\"end\":{\"line\":93,\"column\":70}},\"72\":{\"start\":{\"line\":95,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"73\":{\"start\":{\"line\":96,\"column\":12},\"end\":{\"line\":96,\"column\":66}},\"74\":{\"start\":{\"line\":98,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"75\":{\"start\":{\"line\":99,\"column\":12},\"end\":{\"line\":99,\"column\":71}},\"76\":{\"start\":{\"line\":101,\"column\":13},\"end\":{\"line\":106,\"column\":9}},\"77\":{\"start\":{\"line\":102,\"column\":12},\"end\":{\"line\":102,\"column\":62}},\"78\":{\"start\":{\"line\":105,\"column\":12},\"end\":{\"line\":105,\"column\":69}},\"79\":{\"start\":{\"line\":107,\"column\":8},\"end\":{\"line\":107,\"column\":20}},\"80\":{\"start\":{\"line\":109,\"column\":4},\"end\":{\"line\":111,\"column\":6}},\"81\":{\"start\":{\"line\":110,\"column\":8},\"end\":{\"line\":110,\"column\":34}},\"82\":{\"start\":{\"line\":112,\"column\":4},\"end\":{\"line\":118,\"column\":6}},\"83\":{\"start\":{\"line\":113,\"column\":8},\"end\":{\"line\":113,\"column\":85}},\"84\":{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":115,\"column\":24}},\"85\":{\"start\":{\"line\":115,\"column\":12},\"end\":{\"line\":115,\"column\":24}},\"86\":{\"start\":{\"line\":116,\"column\":8},\"end\":{\"line\":116,\"column\":86}},\"87\":{\"start\":{\"line\":117,\"column\":8},\"end\":{\"line\":117,\"column\":21}},\"88\":{\"start\":{\"line\":119,\"column\":4},\"end\":{\"line\":122,\"column\":6}},\"89\":{\"start\":{\"line\":120,\"column\":8},\"end\":{\"line\":120,\"column\":82}},\"90\":{\"start\":{\"line\":121,\"column\":8},\"end\":{\"line\":121,\"column\":20}},\"91\":{\"start\":{\"line\":123,\"column\":4},\"end\":{\"line\":144,\"column\":6}},\"92\":{\"start\":{\"line\":124,\"column\":8},\"end\":{\"line\":124,\"column\":25}},\"93\":{\"start\":{\"line\":125,\"column\":8},\"end\":{\"line\":127,\"column\":9}},\"94\":{\"start\":{\"line\":126,\"column\":12},\"end\":{\"line\":126,\"column\":126}},\"95\":{\"start\":{\"line\":128,\"column\":8},\"end\":{\"line\":128,\"column\":28}},\"96\":{\"start\":{\"line\":129,\"column\":8},\"end\":{\"line\":135,\"column\":11}},\"97\":{\"start\":{\"line\":130,\"column\":12},\"end\":{\"line\":130,\"column\":111}},\"98\":{\"start\":{\"line\":131,\"column\":12},\"end\":{\"line\":133,\"column\":13}},\"99\":{\"start\":{\"line\":132,\"column\":16},\"end\":{\"line\":132,\"column\":45}},\"100\":{\"start\":{\"line\":134,\"column\":12},\"end\":{\"line\":134,\"column\":45}},\"101\":{\"start\":{\"line\":136,\"column\":8},\"end\":{\"line\":136,\"column\":119}},\"102\":{\"start\":{\"line\":137,\"column\":8},\"end\":{\"line\":137,\"column\":43}},\"103\":{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":140,\"column\":9}},\"104\":{\"start\":{\"line\":139,\"column\":12},\"end\":{\"line\":139,\"column\":43}},\"105\":{\"start\":{\"line\":141,\"column\":8},\"end\":{\"line\":141,\"column\":63}},\"106\":{\"start\":{\"line\":142,\"column\":8},\"end\":{\"line\":142,\"column\":70}},\"107\":{\"start\":{\"line\":143,\"column\":8},\"end\":{\"line\":143,\"column\":24}},\"108\":{\"start\":{\"line\":145,\"column\":4},\"end\":{\"line\":164,\"column\":6}},\"109\":{\"start\":{\"line\":146,\"column\":8},\"end\":{\"line\":146,\"column\":116}},\"110\":{\"start\":{\"line\":147,\"column\":8},\"end\":{\"line\":150,\"column\":9}},\"111\":{\"start\":{\"line\":148,\"column\":12},\"end\":{\"line\":148,\"column\":184}},\"112\":{\"start\":{\"line\":149,\"column\":12},\"end\":{\"line\":149,\"column\":24}},\"113\":{\"start\":{\"line\":151,\"column\":8},\"end\":{\"line\":154,\"column\":9}},\"114\":{\"start\":{\"line\":153,\"column\":12},\"end\":{\"line\":153,\"column\":24}},\"115\":{\"start\":{\"line\":162,\"column\":8},\"end\":{\"line\":162,\"column\":57}},\"116\":{\"start\":{\"line\":163,\"column\":8},\"end\":{\"line\":163,\"column\":20}},\"117\":{\"start\":{\"line\":165,\"column\":4},\"end\":{\"line\":178,\"column\":6}},\"118\":{\"start\":{\"line\":166,\"column\":8},\"end\":{\"line\":166,\"column\":110}},\"119\":{\"start\":{\"line\":167,\"column\":8},\"end\":{\"line\":170,\"column\":9}},\"120\":{\"start\":{\"line\":168,\"column\":12},\"end\":{\"line\":168,\"column\":101}},\"121\":{\"start\":{\"line\":169,\"column\":12},\"end\":{\"line\":169,\"column\":24}},\"122\":{\"start\":{\"line\":171,\"column\":8},\"end\":{\"line\":171,\"column\":116}},\"123\":{\"start\":{\"line\":172,\"column\":8},\"end\":{\"line\":175,\"column\":9}},\"124\":{\"start\":{\"line\":173,\"column\":12},\"end\":{\"line\":173,\"column\":107}},\"125\":{\"start\":{\"line\":174,\"column\":12},\"end\":{\"line\":174,\"column\":24}},\"126\":{\"start\":{\"line\":176,\"column\":8},\"end\":{\"line\":176,\"column\":36}},\"127\":{\"start\":{\"line\":177,\"column\":8},\"end\":{\"line\":177,\"column\":24}},\"128\":{\"start\":{\"line\":179,\"column\":4},\"end\":{\"line\":208,\"column\":6}},\"129\":{\"start\":{\"line\":180,\"column\":8},\"end\":{\"line\":180,\"column\":139}},\"130\":{\"start\":{\"line\":181,\"column\":8},\"end\":{\"line\":196,\"column\":9}},\"131\":{\"start\":{\"line\":182,\"column\":12},\"end\":{\"line\":182,\"column\":128}},\"132\":{\"start\":{\"line\":183,\"column\":12},\"end\":{\"line\":195,\"column\":13}},\"133\":{\"start\":{\"line\":184,\"column\":16},\"end\":{\"line\":194,\"column\":17}},\"134\":{\"start\":{\"line\":185,\"column\":20},\"end\":{\"line\":185,\"column\":54}},\"135\":{\"start\":{\"line\":186,\"column\":20},\"end\":{\"line\":188,\"column\":21}},\"136\":{\"start\":{\"line\":187,\"column\":24},\"end\":{\"line\":187,\"column\":60}},\"137\":{\"start\":{\"line\":191,\"column\":20},\"end\":{\"line\":193,\"column\":23}},\"138\":{\"start\":{\"line\":192,\"column\":24},\"end\":{\"line\":192,\"column\":60}},\"139\":{\"start\":{\"line\":197,\"column\":8},\"end\":{\"line\":197,\"column\":30}},\"140\":{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":200,\"column\":9}},\"141\":{\"start\":{\"line\":199,\"column\":12},\"end\":{\"line\":199,\"column\":119}},\"142\":{\"start\":{\"line\":201,\"column\":8},\"end\":{\"line\":204,\"column\":9}},\"143\":{\"start\":{\"line\":202,\"column\":12},\"end\":{\"line\":202,\"column\":128}},\"144\":{\"start\":{\"line\":203,\"column\":12},\"end\":{\"line\":203,\"column\":76}},\"145\":{\"start\":{\"line\":205,\"column\":8},\"end\":{\"line\":205,\"column\":77}},\"146\":{\"start\":{\"line\":206,\"column\":8},\"end\":{\"line\":206,\"column\":79}},\"147\":{\"start\":{\"line\":207,\"column\":8},\"end\":{\"line\":207,\"column\":33}},\"148\":{\"start\":{\"line\":209,\"column\":4},\"end\":{\"line\":215,\"column\":6}},\"149\":{\"start\":{\"line\":210,\"column\":8},\"end\":{\"line\":210,\"column\":116}},\"150\":{\"start\":{\"line\":211,\"column\":8},\"end\":{\"line\":212,\"column\":24}},\"151\":{\"start\":{\"line\":212,\"column\":12},\"end\":{\"line\":212,\"column\":24}},\"152\":{\"start\":{\"line\":213,\"column\":8},\"end\":{\"line\":213,\"column\":74}},\"153\":{\"start\":{\"line\":214,\"column\":8},\"end\":{\"line\":214,\"column\":20}},\"154\":{\"start\":{\"line\":216,\"column\":4},\"end\":{\"line\":219,\"column\":6}},\"155\":{\"start\":{\"line\":217,\"column\":8},\"end\":{\"line\":217,\"column\":64}},\"156\":{\"start\":{\"line\":218,\"column\":8},\"end\":{\"line\":218,\"column\":20}},\"157\":{\"start\":{\"line\":221,\"column\":4},\"end\":{\"line\":230,\"column\":6}},\"158\":{\"start\":{\"line\":222,\"column\":8},\"end\":{\"line\":223,\"column\":19}},\"159\":{\"start\":{\"line\":223,\"column\":12},\"end\":{\"line\":223,\"column\":19}},\"160\":{\"start\":{\"line\":224,\"column\":8},\"end\":{\"line\":225,\"column\":19}},\"161\":{\"start\":{\"line\":225,\"column\":12},\"end\":{\"line\":225,\"column\":19}},\"162\":{\"start\":{\"line\":227,\"column\":8},\"end\":{\"line\":229,\"column\":9}},\"163\":{\"start\":{\"line\":228,\"column\":12},\"end\":{\"line\":228,\"column\":30}},\"164\":{\"start\":{\"line\":231,\"column\":4},\"end\":{\"line\":241,\"column\":6}},\"165\":{\"start\":{\"line\":232,\"column\":8},\"end\":{\"line\":232,\"column\":22}},\"166\":{\"start\":{\"line\":233,\"column\":8},\"end\":{\"line\":233,\"column\":28}},\"167\":{\"start\":{\"line\":234,\"column\":8},\"end\":{\"line\":240,\"column\":11}},\"168\":{\"start\":{\"line\":237,\"column\":48},\"end\":{\"line\":237,\"column\":67}},\"169\":{\"start\":{\"line\":242,\"column\":4},\"end\":{\"line\":248,\"column\":6}},\"170\":{\"start\":{\"line\":243,\"column\":8},\"end\":{\"line\":244,\"column\":19}},\"171\":{\"start\":{\"line\":244,\"column\":12},\"end\":{\"line\":244,\"column\":19}},\"172\":{\"start\":{\"line\":245,\"column\":8},\"end\":{\"line\":245,\"column\":29}},\"173\":{\"start\":{\"line\":247,\"column\":8},\"end\":{\"line\":247,\"column\":53}},\"174\":{\"start\":{\"line\":249,\"column\":4},\"end\":{\"line\":249,\"column\":27}},\"175\":{\"start\":{\"line\":251,\"column\":0},\"end\":{\"line\":251,\"column\":42}}},\"branchMap\":{\"1\":{\"line\":9,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":8}},{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":8}}]},\"2\":{\"line\":10,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}},{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}}]},\"3\":{\"line\":38,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":38,\"column\":8}},{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":38,\"column\":8}}]},\"4\":{\"line\":46,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":8}},{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":8}}]},\"5\":{\"line\":47,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":47,\"column\":12},\"end\":{\"line\":47,\"column\":12}},{\"start\":{\"line\":47,\"column\":12},\"end\":{\"line\":47,\"column\":12}}]},\"6\":{\"line\":64,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":64,\"column\":16},\"end\":{\"line\":64,\"column\":16}},{\"start\":{\"line\":64,\"column\":16},\"end\":{\"line\":64,\"column\":16}}]},\"7\":{\"line\":67,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":67,\"column\":12},\"end\":{\"line\":67,\"column\":12}},{\"start\":{\"line\":67,\"column\":12},\"end\":{\"line\":67,\"column\":12}}]},\"8\":{\"line\":77,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}},{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}}]},\"9\":{\"line\":80,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":80,\"column\":13},\"end\":{\"line\":80,\"column\":13}},{\"start\":{\"line\":80,\"column\":13},\"end\":{\"line\":80,\"column\":13}}]},\"10\":{\"line\":83,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":83,\"column\":13},\"end\":{\"line\":83,\"column\":13}},{\"start\":{\"line\":83,\"column\":13},\"end\":{\"line\":83,\"column\":13}}]},\"11\":{\"line\":86,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":86,\"column\":13},\"end\":{\"line\":86,\"column\":13}},{\"start\":{\"line\":86,\"column\":13},\"end\":{\"line\":86,\"column\":13}}]},\"12\":{\"line\":89,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":89,\"column\":13},\"end\":{\"line\":89,\"column\":13}},{\"start\":{\"line\":89,\"column\":13},\"end\":{\"line\":89,\"column\":13}}]},\"13\":{\"line\":92,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":92,\"column\":13},\"end\":{\"line\":92,\"column\":13}},{\"start\":{\"line\":92,\"column\":13},\"end\":{\"line\":92,\"column\":13}}]},\"14\":{\"line\":95,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":95,\"column\":13},\"end\":{\"line\":95,\"column\":13}},{\"start\":{\"line\":95,\"column\":13},\"end\":{\"line\":95,\"column\":13}}]},\"15\":{\"line\":98,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":98,\"column\":13},\"end\":{\"line\":98,\"column\":13}},{\"start\":{\"line\":98,\"column\":13},\"end\":{\"line\":98,\"column\":13}}]},\"16\":{\"line\":101,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":101,\"column\":13},\"end\":{\"line\":101,\"column\":13}},{\"start\":{\"line\":101,\"column\":13},\"end\":{\"line\":101,\"column\":13}}]},\"17\":{\"line\":114,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":114,\"column\":8}},{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":114,\"column\":8}}]},\"18\":{\"line\":125,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":125,\"column\":8},\"end\":{\"line\":125,\"column\":8}},{\"start\":{\"line\":125,\"column\":8},\"end\":{\"line\":125,\"column\":8}}]},\"19\":{\"line\":131,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":131,\"column\":12},\"end\":{\"line\":131,\"column\":12}},{\"start\":{\"line\":131,\"column\":12},\"end\":{\"line\":131,\"column\":12}}]},\"20\":{\"line\":131,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":131,\"column\":16},\"end\":{\"line\":131,\"column\":23}},{\"start\":{\"line\":131,\"column\":27},\"end\":{\"line\":131,\"column\":48}}]},\"21\":{\"line\":138,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":138,\"column\":8}},{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":138,\"column\":8}}]},\"22\":{\"line\":147,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":147,\"column\":8},\"end\":{\"line\":147,\"column\":8}},{\"start\":{\"line\":147,\"column\":8},\"end\":{\"line\":147,\"column\":8}}]},\"23\":{\"line\":151,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":151,\"column\":8},\"end\":{\"line\":151,\"column\":8}},{\"start\":{\"line\":151,\"column\":8},\"end\":{\"line\":151,\"column\":8}}]},\"24\":{\"line\":167,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":167,\"column\":8},\"end\":{\"line\":167,\"column\":8}},{\"start\":{\"line\":167,\"column\":8},\"end\":{\"line\":167,\"column\":8}}]},\"25\":{\"line\":172,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":172,\"column\":8},\"end\":{\"line\":172,\"column\":8}},{\"start\":{\"line\":172,\"column\":8},\"end\":{\"line\":172,\"column\":8}}]},\"26\":{\"line\":181,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":181,\"column\":8},\"end\":{\"line\":181,\"column\":8}},{\"start\":{\"line\":181,\"column\":8},\"end\":{\"line\":181,\"column\":8}}]},\"27\":{\"line\":183,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":183,\"column\":12},\"end\":{\"line\":183,\"column\":12}},{\"start\":{\"line\":183,\"column\":12},\"end\":{\"line\":183,\"column\":12}}]},\"28\":{\"line\":184,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":184,\"column\":16},\"end\":{\"line\":184,\"column\":16}},{\"start\":{\"line\":184,\"column\":16},\"end\":{\"line\":184,\"column\":16}}]},\"29\":{\"line\":186,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":186,\"column\":20},\"end\":{\"line\":186,\"column\":20}},{\"start\":{\"line\":186,\"column\":20},\"end\":{\"line\":186,\"column\":20}}]},\"30\":{\"line\":198,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":198,\"column\":8}},{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":198,\"column\":8}}]},\"31\":{\"line\":201,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":201,\"column\":8},\"end\":{\"line\":201,\"column\":8}},{\"start\":{\"line\":201,\"column\":8},\"end\":{\"line\":201,\"column\":8}}]},\"32\":{\"line\":211,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":211,\"column\":8},\"end\":{\"line\":211,\"column\":8}},{\"start\":{\"line\":211,\"column\":8},\"end\":{\"line\":211,\"column\":8}}]},\"33\":{\"line\":222,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":222,\"column\":8},\"end\":{\"line\":222,\"column\":8}},{\"start\":{\"line\":222,\"column\":8},\"end\":{\"line\":222,\"column\":8}}]},\"34\":{\"line\":224,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":224,\"column\":8},\"end\":{\"line\":224,\"column\":8}},{\"start\":{\"line\":224,\"column\":8},\"end\":{\"line\":224,\"column\":8}}]},\"35\":{\"line\":227,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":227,\"column\":8},\"end\":{\"line\":227,\"column\":8}},{\"start\":{\"line\":227,\"column\":8},\"end\":{\"line\":227,\"column\":8}}]},\"36\":{\"line\":243,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":243,\"column\":8},\"end\":{\"line\":243,\"column\":8}},{\"start\":{\"line\":243,\"column\":8},\"end\":{\"line\":243,\"column\":8}}]}}};\n}\n__cov_gyMepB3y087B_fjjWg2TUA = __cov_gyMepB3y087B_fjjWg2TUA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientConnector.ts'];\n__cov_gyMepB3y087B_fjjWg2TUA.s['1']++;exports.__esModule=true;__cov_gyMepB3y087B_fjjWg2TUA.s['2']++;var ClientAttribute_1=require('./ClientAttribute');__cov_gyMepB3y087B_fjjWg2TUA.s['3']++;var ClientPresentationModel_1=require('./ClientPresentationModel');__cov_gyMepB3y087B_fjjWg2TUA.s['4']++;var Codec_1=require('./Codec');__cov_gyMepB3y087B_fjjWg2TUA.s['5']++;var CommandBatcher_1=require('./CommandBatcher');__cov_gyMepB3y087B_fjjWg2TUA.s['6']++;var ClientConnector=function(){__cov_gyMepB3y087B_fjjWg2TUA.f['1']++;function ClientConnector(transmitter,clientDolphin,slackMS,maxBatchSize){__cov_gyMepB3y087B_fjjWg2TUA.f['2']++;__cov_gyMepB3y087B_fjjWg2TUA.s['8']++;if(slackMS===void 0){__cov_gyMepB3y087B_fjjWg2TUA.b['1'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['9']++;slackMS=0;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['1'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['10']++;if(maxBatchSize===void 0){__cov_gyMepB3y087B_fjjWg2TUA.b['2'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['11']++;maxBatchSize=50;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['2'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['12']++;this.commandQueue=[];__cov_gyMepB3y087B_fjjWg2TUA.s['13']++;this.currentlySending=false;__cov_gyMepB3y087B_fjjWg2TUA.s['14']++;this.pushEnabled=false;__cov_gyMepB3y087B_fjjWg2TUA.s['15']++;this.waiting=false;__cov_gyMepB3y087B_fjjWg2TUA.s['16']++;this.transmitter=transmitter;__cov_gyMepB3y087B_fjjWg2TUA.s['17']++;this.clientDolphin=clientDolphin;__cov_gyMepB3y087B_fjjWg2TUA.s['18']++;this.slackMS=slackMS;__cov_gyMepB3y087B_fjjWg2TUA.s['19']++;this.codec=new Codec_1['default']();__cov_gyMepB3y087B_fjjWg2TUA.s['20']++;this.commandBatcher=new CommandBatcher_1.BlindCommandBatcher(true,maxBatchSize);}__cov_gyMepB3y087B_fjjWg2TUA.s['21']++;ClientConnector.prototype.setCommandBatcher=function(newBatcher){__cov_gyMepB3y087B_fjjWg2TUA.f['3']++;__cov_gyMepB3y087B_fjjWg2TUA.s['22']++;this.commandBatcher=newBatcher;};__cov_gyMepB3y087B_fjjWg2TUA.s['23']++;ClientConnector.prototype.setPushEnabled=function(enabled){__cov_gyMepB3y087B_fjjWg2TUA.f['4']++;__cov_gyMepB3y087B_fjjWg2TUA.s['24']++;this.pushEnabled=enabled;};__cov_gyMepB3y087B_fjjWg2TUA.s['25']++;ClientConnector.prototype.setPushListener=function(newListener){__cov_gyMepB3y087B_fjjWg2TUA.f['5']++;__cov_gyMepB3y087B_fjjWg2TUA.s['26']++;this.pushListener=newListener;};__cov_gyMepB3y087B_fjjWg2TUA.s['27']++;ClientConnector.prototype.setReleaseCommand=function(newCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['6']++;__cov_gyMepB3y087B_fjjWg2TUA.s['28']++;this.releaseCommand=newCommand;};__cov_gyMepB3y087B_fjjWg2TUA.s['29']++;ClientConnector.prototype.reset=function(successHandler){__cov_gyMepB3y087B_fjjWg2TUA.f['7']++;__cov_gyMepB3y087B_fjjWg2TUA.s['30']++;this.transmitter.reset(successHandler);};__cov_gyMepB3y087B_fjjWg2TUA.s['31']++;ClientConnector.prototype.send=function(command,onFinished){__cov_gyMepB3y087B_fjjWg2TUA.f['8']++;__cov_gyMepB3y087B_fjjWg2TUA.s['32']++;this.commandQueue.push({command:command,handler:onFinished});__cov_gyMepB3y087B_fjjWg2TUA.s['33']++;if(this.currentlySending){__cov_gyMepB3y087B_fjjWg2TUA.b['3'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['34']++;this.release();__cov_gyMepB3y087B_fjjWg2TUA.s['35']++;return;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['3'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['36']++;this.doSendNext();};__cov_gyMepB3y087B_fjjWg2TUA.s['37']++;ClientConnector.prototype.doSendNext=function(){__cov_gyMepB3y087B_fjjWg2TUA.f['9']++;__cov_gyMepB3y087B_fjjWg2TUA.s['38']++;var _this=this;__cov_gyMepB3y087B_fjjWg2TUA.s['39']++;if(this.commandQueue.length<1){__cov_gyMepB3y087B_fjjWg2TUA.b['4'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['40']++;if(this.pushEnabled){__cov_gyMepB3y087B_fjjWg2TUA.b['5'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['41']++;this.enqueuePushCommand();}else{__cov_gyMepB3y087B_fjjWg2TUA.b['5'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['42']++;this.currentlySending=false;__cov_gyMepB3y087B_fjjWg2TUA.s['43']++;return;}}else{__cov_gyMepB3y087B_fjjWg2TUA.b['4'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['44']++;this.currentlySending=true;__cov_gyMepB3y087B_fjjWg2TUA.s['45']++;var cmdsAndHandlers=this.commandBatcher.batch(this.commandQueue);__cov_gyMepB3y087B_fjjWg2TUA.s['46']++;var callback=cmdsAndHandlers[cmdsAndHandlers.length-1].handler;__cov_gyMepB3y087B_fjjWg2TUA.s['47']++;var commands=cmdsAndHandlers.map(function(cah){__cov_gyMepB3y087B_fjjWg2TUA.f['10']++;__cov_gyMepB3y087B_fjjWg2TUA.s['48']++;return cah.command;});__cov_gyMepB3y087B_fjjWg2TUA.s['49']++;this.transmitter.transmit(commands,function(response){__cov_gyMepB3y087B_fjjWg2TUA.f['11']++;__cov_gyMepB3y087B_fjjWg2TUA.s['50']++;var touchedPMs=[];__cov_gyMepB3y087B_fjjWg2TUA.s['51']++;response.forEach(function(command){__cov_gyMepB3y087B_fjjWg2TUA.f['12']++;__cov_gyMepB3y087B_fjjWg2TUA.s['52']++;var touched=_this.handle(command);__cov_gyMepB3y087B_fjjWg2TUA.s['53']++;if(touched){__cov_gyMepB3y087B_fjjWg2TUA.b['6'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['54']++;touchedPMs.push(touched);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['6'][1]++;}});__cov_gyMepB3y087B_fjjWg2TUA.s['55']++;if(callback){__cov_gyMepB3y087B_fjjWg2TUA.b['7'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['56']++;callback.onFinished(touchedPMs);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['7'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['57']++;setTimeout(function(){__cov_gyMepB3y087B_fjjWg2TUA.f['13']++;__cov_gyMepB3y087B_fjjWg2TUA.s['58']++;return _this.doSendNext();},_this.slackMS);});};__cov_gyMepB3y087B_fjjWg2TUA.s['59']++;ClientConnector.prototype.handle=function(command){__cov_gyMepB3y087B_fjjWg2TUA.f['14']++;__cov_gyMepB3y087B_fjjWg2TUA.s['60']++;if(command.id=='Data'){__cov_gyMepB3y087B_fjjWg2TUA.b['8'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['61']++;return this.handleDataCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['8'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['62']++;if(command.id=='DeletePresentationModel'){__cov_gyMepB3y087B_fjjWg2TUA.b['9'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['63']++;return this.handleDeletePresentationModelCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['9'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['64']++;if(command.id=='DeleteAllPresentationModelsOfType'){__cov_gyMepB3y087B_fjjWg2TUA.b['10'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['65']++;return this.handleDeleteAllPresentationModelOfTypeCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['10'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['66']++;if(command.id=='CreatePresentationModel'){__cov_gyMepB3y087B_fjjWg2TUA.b['11'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['67']++;return this.handleCreatePresentationModelCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['11'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['68']++;if(command.id=='ValueChanged'){__cov_gyMepB3y087B_fjjWg2TUA.b['12'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['69']++;return this.handleValueChangedCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['12'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['70']++;if(command.id=='SwitchPresentationModel'){__cov_gyMepB3y087B_fjjWg2TUA.b['13'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['71']++;return this.handleSwitchPresentationModelCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['13'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['72']++;if(command.id=='InitializeAttribute'){__cov_gyMepB3y087B_fjjWg2TUA.b['14'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['73']++;return this.handleInitializeAttributeCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['14'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['74']++;if(command.id=='AttributeMetadataChanged'){__cov_gyMepB3y087B_fjjWg2TUA.b['15'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['75']++;return this.handleAttributeMetadataChangedCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['15'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['76']++;if(command.id=='CallNamedAction'){__cov_gyMepB3y087B_fjjWg2TUA.b['16'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['77']++;return this.handleCallNamedActionCommand(command);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['16'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['78']++;console.log('Cannot handle, unknown command '+command);}}}}}}}}}__cov_gyMepB3y087B_fjjWg2TUA.s['79']++;return null;};__cov_gyMepB3y087B_fjjWg2TUA.s['80']++;ClientConnector.prototype.handleDataCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['15']++;__cov_gyMepB3y087B_fjjWg2TUA.s['81']++;return serverCommand.data;};__cov_gyMepB3y087B_fjjWg2TUA.s['82']++;ClientConnector.prototype.handleDeletePresentationModelCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['16']++;__cov_gyMepB3y087B_fjjWg2TUA.s['83']++;var model=this.clientDolphin.findPresentationModelById(serverCommand.pmId);__cov_gyMepB3y087B_fjjWg2TUA.s['84']++;if(!model){__cov_gyMepB3y087B_fjjWg2TUA.b['17'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['85']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['17'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['86']++;this.clientDolphin.getClientModelStore().deletePresentationModel(model,true);__cov_gyMepB3y087B_fjjWg2TUA.s['87']++;return model;};__cov_gyMepB3y087B_fjjWg2TUA.s['88']++;ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['17']++;__cov_gyMepB3y087B_fjjWg2TUA.s['89']++;this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);__cov_gyMepB3y087B_fjjWg2TUA.s['90']++;return null;};__cov_gyMepB3y087B_fjjWg2TUA.s['91']++;ClientConnector.prototype.handleCreatePresentationModelCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['18']++;__cov_gyMepB3y087B_fjjWg2TUA.s['92']++;var _this=this;__cov_gyMepB3y087B_fjjWg2TUA.s['93']++;if(this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)){__cov_gyMepB3y087B_fjjWg2TUA.b['18'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['94']++;throw new Error('There already is a presentation model with id '+serverCommand.pmId+'  known to the client.');}else{__cov_gyMepB3y087B_fjjWg2TUA.b['18'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['95']++;var attributes=[];__cov_gyMepB3y087B_fjjWg2TUA.s['96']++;serverCommand.attributes.forEach(function(attr){__cov_gyMepB3y087B_fjjWg2TUA.f['19']++;__cov_gyMepB3y087B_fjjWg2TUA.s['97']++;var clientAttribute=_this.clientDolphin.attribute(attr.propertyName,attr.qualifier,attr.value);__cov_gyMepB3y087B_fjjWg2TUA.s['98']++;if((__cov_gyMepB3y087B_fjjWg2TUA.b['20'][0]++,attr.id)&&(__cov_gyMepB3y087B_fjjWg2TUA.b['20'][1]++,attr.id.match('.*S$'))){__cov_gyMepB3y087B_fjjWg2TUA.b['19'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['99']++;clientAttribute.id=attr.id;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['19'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['100']++;attributes.push(clientAttribute);});__cov_gyMepB3y087B_fjjWg2TUA.s['101']++;var clientPm=new ClientPresentationModel_1.ClientPresentationModel(serverCommand.pmId,serverCommand.pmType);__cov_gyMepB3y087B_fjjWg2TUA.s['102']++;clientPm.addAttributes(attributes);__cov_gyMepB3y087B_fjjWg2TUA.s['103']++;if(serverCommand.clientSideOnly){__cov_gyMepB3y087B_fjjWg2TUA.b['21'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['104']++;clientPm.clientSideOnly=true;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['21'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['105']++;this.clientDolphin.getClientModelStore().add(clientPm);__cov_gyMepB3y087B_fjjWg2TUA.s['106']++;this.clientDolphin.updatePresentationModelQualifier(clientPm);__cov_gyMepB3y087B_fjjWg2TUA.s['107']++;return clientPm;};__cov_gyMepB3y087B_fjjWg2TUA.s['108']++;ClientConnector.prototype.handleValueChangedCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['20']++;__cov_gyMepB3y087B_fjjWg2TUA.s['109']++;var clientAttribute=this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);__cov_gyMepB3y087B_fjjWg2TUA.s['110']++;if(!clientAttribute){__cov_gyMepB3y087B_fjjWg2TUA.b['22'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['111']++;console.log('attribute with id '+serverCommand.attributeId+' not found, cannot update old value '+serverCommand.oldValue+' to new value '+serverCommand.newValue);__cov_gyMepB3y087B_fjjWg2TUA.s['112']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['22'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['113']++;if(clientAttribute.getValue()==serverCommand.newValue){__cov_gyMepB3y087B_fjjWg2TUA.b['23'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['114']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['23'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['115']++;clientAttribute.setValue(serverCommand.newValue);__cov_gyMepB3y087B_fjjWg2TUA.s['116']++;return null;};__cov_gyMepB3y087B_fjjWg2TUA.s['117']++;ClientConnector.prototype.handleSwitchPresentationModelCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['21']++;__cov_gyMepB3y087B_fjjWg2TUA.s['118']++;var switchPm=this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);__cov_gyMepB3y087B_fjjWg2TUA.s['119']++;if(!switchPm){__cov_gyMepB3y087B_fjjWg2TUA.b['24'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['120']++;console.log('switch model with id '+serverCommand.pmId+' not found, cannot switch.');__cov_gyMepB3y087B_fjjWg2TUA.s['121']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['24'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['122']++;var sourcePm=this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);__cov_gyMepB3y087B_fjjWg2TUA.s['123']++;if(!sourcePm){__cov_gyMepB3y087B_fjjWg2TUA.b['25'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['124']++;console.log('source model with id '+serverCommand.sourcePmId+' not found, cannot switch.');__cov_gyMepB3y087B_fjjWg2TUA.s['125']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['25'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['126']++;switchPm.syncWith(sourcePm);__cov_gyMepB3y087B_fjjWg2TUA.s['127']++;return switchPm;};__cov_gyMepB3y087B_fjjWg2TUA.s['128']++;ClientConnector.prototype.handleInitializeAttributeCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['22']++;__cov_gyMepB3y087B_fjjWg2TUA.s['129']++;var attribute=new ClientAttribute_1.ClientAttribute(serverCommand.propertyName,serverCommand.qualifier,serverCommand.newValue);__cov_gyMepB3y087B_fjjWg2TUA.s['130']++;if(serverCommand.qualifier){__cov_gyMepB3y087B_fjjWg2TUA.b['26'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['131']++;var attributesCopy=this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);__cov_gyMepB3y087B_fjjWg2TUA.s['132']++;if(attributesCopy){__cov_gyMepB3y087B_fjjWg2TUA.b['27'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['133']++;if(!serverCommand.newValue){__cov_gyMepB3y087B_fjjWg2TUA.b['28'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['134']++;var attr=attributesCopy.shift();__cov_gyMepB3y087B_fjjWg2TUA.s['135']++;if(attr){__cov_gyMepB3y087B_fjjWg2TUA.b['29'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['136']++;attribute.setValue(attr.getValue());}else{__cov_gyMepB3y087B_fjjWg2TUA.b['29'][1]++;}}else{__cov_gyMepB3y087B_fjjWg2TUA.b['28'][1]++;__cov_gyMepB3y087B_fjjWg2TUA.s['137']++;attributesCopy.forEach(function(attr){__cov_gyMepB3y087B_fjjWg2TUA.f['23']++;__cov_gyMepB3y087B_fjjWg2TUA.s['138']++;attr.setValue(attribute.getValue());});}}else{__cov_gyMepB3y087B_fjjWg2TUA.b['27'][1]++;}}else{__cov_gyMepB3y087B_fjjWg2TUA.b['26'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['139']++;var presentationModel;__cov_gyMepB3y087B_fjjWg2TUA.s['140']++;if(serverCommand.pmId){__cov_gyMepB3y087B_fjjWg2TUA.b['30'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['141']++;presentationModel=this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['30'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['142']++;if(!presentationModel){__cov_gyMepB3y087B_fjjWg2TUA.b['31'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['143']++;presentationModel=new ClientPresentationModel_1.ClientPresentationModel(serverCommand.pmId,serverCommand.pmType);__cov_gyMepB3y087B_fjjWg2TUA.s['144']++;this.clientDolphin.getClientModelStore().add(presentationModel);}else{__cov_gyMepB3y087B_fjjWg2TUA.b['31'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['145']++;this.clientDolphin.addAttributeToModel(presentationModel,attribute);__cov_gyMepB3y087B_fjjWg2TUA.s['146']++;this.clientDolphin.updatePresentationModelQualifier(presentationModel);__cov_gyMepB3y087B_fjjWg2TUA.s['147']++;return presentationModel;};__cov_gyMepB3y087B_fjjWg2TUA.s['148']++;ClientConnector.prototype.handleAttributeMetadataChangedCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['24']++;__cov_gyMepB3y087B_fjjWg2TUA.s['149']++;var clientAttribute=this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);__cov_gyMepB3y087B_fjjWg2TUA.s['150']++;if(!clientAttribute){__cov_gyMepB3y087B_fjjWg2TUA.b['32'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['151']++;return null;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['32'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['152']++;clientAttribute[serverCommand.metadataName]=serverCommand.value;__cov_gyMepB3y087B_fjjWg2TUA.s['153']++;return null;};__cov_gyMepB3y087B_fjjWg2TUA.s['154']++;ClientConnector.prototype.handleCallNamedActionCommand=function(serverCommand){__cov_gyMepB3y087B_fjjWg2TUA.f['25']++;__cov_gyMepB3y087B_fjjWg2TUA.s['155']++;this.clientDolphin.send(serverCommand.actionName,null);__cov_gyMepB3y087B_fjjWg2TUA.s['156']++;return null;};__cov_gyMepB3y087B_fjjWg2TUA.s['157']++;ClientConnector.prototype.listen=function(){__cov_gyMepB3y087B_fjjWg2TUA.f['26']++;__cov_gyMepB3y087B_fjjWg2TUA.s['158']++;if(!this.pushEnabled){__cov_gyMepB3y087B_fjjWg2TUA.b['33'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['159']++;return;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['33'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['160']++;if(this.waiting){__cov_gyMepB3y087B_fjjWg2TUA.b['34'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['161']++;return;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['34'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['162']++;if(!this.currentlySending){__cov_gyMepB3y087B_fjjWg2TUA.b['35'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['163']++;this.doSendNext();}else{__cov_gyMepB3y087B_fjjWg2TUA.b['35'][1]++;}};__cov_gyMepB3y087B_fjjWg2TUA.s['164']++;ClientConnector.prototype.enqueuePushCommand=function(){__cov_gyMepB3y087B_fjjWg2TUA.f['27']++;__cov_gyMepB3y087B_fjjWg2TUA.s['165']++;var me=this;__cov_gyMepB3y087B_fjjWg2TUA.s['166']++;this.waiting=true;__cov_gyMepB3y087B_fjjWg2TUA.s['167']++;this.commandQueue.push({command:this.pushListener,handler:{onFinished:function(models){__cov_gyMepB3y087B_fjjWg2TUA.f['28']++;__cov_gyMepB3y087B_fjjWg2TUA.s['168']++;me.waiting=false;},onFinishedData:null}});};__cov_gyMepB3y087B_fjjWg2TUA.s['169']++;ClientConnector.prototype.release=function(){__cov_gyMepB3y087B_fjjWg2TUA.f['29']++;__cov_gyMepB3y087B_fjjWg2TUA.s['170']++;if(!this.waiting){__cov_gyMepB3y087B_fjjWg2TUA.b['36'][0]++;__cov_gyMepB3y087B_fjjWg2TUA.s['171']++;return;}else{__cov_gyMepB3y087B_fjjWg2TUA.b['36'][1]++;}__cov_gyMepB3y087B_fjjWg2TUA.s['172']++;this.waiting=false;__cov_gyMepB3y087B_fjjWg2TUA.s['173']++;this.transmitter.signal(this.releaseCommand);};__cov_gyMepB3y087B_fjjWg2TUA.s['174']++;return ClientConnector;}();__cov_gyMepB3y087B_fjjWg2TUA.s['175']++;exports.ClientConnector=ClientConnector;\n","\"use strict\";\nvar __cov_wQZQHXUSJIpKlvH2ZJnP9Q = (Function('return this'))();\nif (!__cov_wQZQHXUSJIpKlvH2ZJnP9Q.__coverage__) { __cov_wQZQHXUSJIpKlvH2ZJnP9Q.__coverage__ = {}; }\n__cov_wQZQHXUSJIpKlvH2ZJnP9Q = __cov_wQZQHXUSJIpKlvH2ZJnP9Q.__coverage__;\nif (!(__cov_wQZQHXUSJIpKlvH2ZJnP9Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientDolphin.ts'])) {\n   __cov_wQZQHXUSJIpKlvH2ZJnP9Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientDolphin.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientDolphin.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":9,\"loc\":{\"start\":{\"line\":9,\"column\":21},\"end\":{\"line\":9,\"column\":33}}},\"2\":{\"name\":\"ClientDolphin\",\"line\":10,\"loc\":{\"start\":{\"line\":10,\"column\":4},\"end\":{\"line\":10,\"column\":29}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":12,\"loc\":{\"start\":{\"line\":12,\"column\":49},\"end\":{\"line\":12,\"column\":76}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":15,\"loc\":{\"start\":{\"line\":15,\"column\":49},\"end\":{\"line\":15,\"column\":61}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":18,\"loc\":{\"start\":{\"line\":18,\"column\":35},\"end\":{\"line\":18,\"column\":70}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":21,\"loc\":{\"start\":{\"line\":21,\"column\":36},\"end\":{\"line\":21,\"column\":62}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":24,\"loc\":{\"start\":{\"line\":24,\"column\":40},\"end\":{\"line\":24,\"column\":62}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":28,\"loc\":{\"start\":{\"line\":28,\"column\":40},\"end\":{\"line\":28,\"column\":82}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":32,\"loc\":{\"start\":{\"line\":32,\"column\":48},\"end\":{\"line\":32,\"column\":68}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":39,\"loc\":{\"start\":{\"line\":39,\"column\":31},\"end\":{\"line\":39,\"column\":52}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":46,\"loc\":{\"start\":{\"line\":46,\"column\":50},\"end\":{\"line\":46,\"column\":78}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":49,\"loc\":{\"start\":{\"line\":49,\"column\":50},\"end\":{\"line\":49,\"column\":62}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":52,\"loc\":{\"start\":{\"line\":52,\"column\":55},\"end\":{\"line\":52,\"column\":67}}},\"14\":{\"name\":\"(anonymous_14)\",\"line\":55,\"loc\":{\"start\":{\"line\":55,\"column\":53},\"end\":{\"line\":55,\"column\":65}}},\"15\":{\"name\":\"(anonymous_15)\",\"line\":58,\"loc\":{\"start\":{\"line\":58,\"column\":61},\"end\":{\"line\":58,\"column\":94}}},\"16\":{\"name\":\"(anonymous_16)\",\"line\":61,\"loc\":{\"start\":{\"line\":61,\"column\":36},\"end\":{\"line\":61,\"column\":50}}},\"17\":{\"name\":\"(anonymous_17)\",\"line\":64,\"loc\":{\"start\":{\"line\":64,\"column\":56},\"end\":{\"line\":64,\"column\":70}}},\"18\":{\"name\":\"(anonymous_18)\",\"line\":67,\"loc\":{\"start\":{\"line\":67,\"column\":54},\"end\":{\"line\":67,\"column\":79}}},\"19\":{\"name\":\"(anonymous_19)\",\"line\":70,\"loc\":{\"start\":{\"line\":70,\"column\":63},\"end\":{\"line\":70,\"column\":96}}},\"20\":{\"name\":\"(anonymous_20)\",\"line\":73,\"loc\":{\"start\":{\"line\":73,\"column\":63},\"end\":{\"line\":73,\"column\":92}}},\"21\":{\"name\":\"(anonymous_21)\",\"line\":75,\"loc\":{\"start\":{\"line\":75,\"column\":50},\"end\":{\"line\":75,\"column\":77}}},\"22\":{\"name\":\"(anonymous_22)\",\"line\":79,\"loc\":{\"start\":{\"line\":79,\"column\":55},\"end\":{\"line\":79,\"column\":82}}},\"23\":{\"name\":\"(anonymous_23)\",\"line\":83,\"loc\":{\"start\":{\"line\":83,\"column\":27},\"end\":{\"line\":83,\"column\":54}}},\"24\":{\"name\":\"(anonymous_24)\",\"line\":87,\"loc\":{\"start\":{\"line\":87,\"column\":50},\"end\":{\"line\":87,\"column\":96}}},\"25\":{\"name\":\"(anonymous_25)\",\"line\":95,\"loc\":{\"start\":{\"line\":95,\"column\":49},\"end\":{\"line\":95,\"column\":94}}},\"26\":{\"name\":\"(anonymous_26)\",\"line\":101,\"loc\":{\"start\":{\"line\":101,\"column\":48},\"end\":{\"line\":101,\"column\":60}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":79}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":53}},\"4\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":5,\"column\":69}},\"5\":{\"start\":{\"line\":6,\"column\":0},\"end\":{\"line\":6,\"column\":57}},\"6\":{\"start\":{\"line\":7,\"column\":0},\"end\":{\"line\":7,\"column\":47}},\"7\":{\"start\":{\"line\":8,\"column\":0},\"end\":{\"line\":8,\"column\":49}},\"8\":{\"start\":{\"line\":9,\"column\":0},\"end\":{\"line\":105,\"column\":5}},\"9\":{\"start\":{\"line\":10,\"column\":4},\"end\":{\"line\":11,\"column\":5}},\"10\":{\"start\":{\"line\":12,\"column\":4},\"end\":{\"line\":14,\"column\":6}},\"11\":{\"start\":{\"line\":13,\"column\":8},\"end\":{\"line\":13,\"column\":47}},\"12\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":17,\"column\":6}},\"13\":{\"start\":{\"line\":16,\"column\":8},\"end\":{\"line\":16,\"column\":36}},\"14\":{\"start\":{\"line\":18,\"column\":4},\"end\":{\"line\":20,\"column\":6}},\"15\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":90}},\"16\":{\"start\":{\"line\":21,\"column\":4},\"end\":{\"line\":23,\"column\":6}},\"17\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":51}},\"18\":{\"start\":{\"line\":24,\"column\":4},\"end\":{\"line\":26,\"column\":6}},\"19\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":84}},\"20\":{\"start\":{\"line\":28,\"column\":4},\"end\":{\"line\":30,\"column\":6}},\"21\":{\"start\":{\"line\":29,\"column\":8},\"end\":{\"line\":29,\"column\":85}},\"22\":{\"start\":{\"line\":32,\"column\":4},\"end\":{\"line\":45,\"column\":6}},\"23\":{\"start\":{\"line\":33,\"column\":8},\"end\":{\"line\":33,\"column\":28}},\"24\":{\"start\":{\"line\":34,\"column\":8},\"end\":{\"line\":36,\"column\":9}},\"25\":{\"start\":{\"line\":35,\"column\":12},\"end\":{\"line\":35,\"column\":47}},\"26\":{\"start\":{\"line\":37,\"column\":8},\"end\":{\"line\":37,\"column\":84}},\"27\":{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":42,\"column\":9}},\"28\":{\"start\":{\"line\":39,\"column\":12},\"end\":{\"line\":41,\"column\":15}},\"29\":{\"start\":{\"line\":40,\"column\":16},\"end\":{\"line\":40,\"column\":46}},\"30\":{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":46}},\"31\":{\"start\":{\"line\":44,\"column\":8},\"end\":{\"line\":44,\"column\":21}},\"32\":{\"start\":{\"line\":46,\"column\":4},\"end\":{\"line\":48,\"column\":6}},\"33\":{\"start\":{\"line\":47,\"column\":8},\"end\":{\"line\":47,\"column\":49}},\"34\":{\"start\":{\"line\":49,\"column\":4},\"end\":{\"line\":51,\"column\":6}},\"35\":{\"start\":{\"line\":50,\"column\":8},\"end\":{\"line\":50,\"column\":37}},\"36\":{\"start\":{\"line\":52,\"column\":4},\"end\":{\"line\":54,\"column\":6}},\"37\":{\"start\":{\"line\":53,\"column\":8},\"end\":{\"line\":53,\"column\":69}},\"38\":{\"start\":{\"line\":55,\"column\":4},\"end\":{\"line\":57,\"column\":6}},\"39\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":67}},\"40\":{\"start\":{\"line\":58,\"column\":4},\"end\":{\"line\":60,\"column\":6}},\"41\":{\"start\":{\"line\":59,\"column\":8},\"end\":{\"line\":59,\"column\":96}},\"42\":{\"start\":{\"line\":61,\"column\":4},\"end\":{\"line\":63,\"column\":6}},\"43\":{\"start\":{\"line\":62,\"column\":8},\"end\":{\"line\":62,\"column\":50}},\"44\":{\"start\":{\"line\":64,\"column\":4},\"end\":{\"line\":66,\"column\":6}},\"45\":{\"start\":{\"line\":65,\"column\":8},\"end\":{\"line\":65,\"column\":72}},\"46\":{\"start\":{\"line\":67,\"column\":4},\"end\":{\"line\":69,\"column\":6}},\"47\":{\"start\":{\"line\":68,\"column\":8},\"end\":{\"line\":68,\"column\":80}},\"48\":{\"start\":{\"line\":70,\"column\":4},\"end\":{\"line\":72,\"column\":6}},\"49\":{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":71,\"column\":91}},\"50\":{\"start\":{\"line\":73,\"column\":4},\"end\":{\"line\":78,\"column\":6}},\"51\":{\"start\":{\"line\":74,\"column\":8},\"end\":{\"line\":74,\"column\":25}},\"52\":{\"start\":{\"line\":75,\"column\":8},\"end\":{\"line\":77,\"column\":11}},\"53\":{\"start\":{\"line\":76,\"column\":12},\"end\":{\"line\":76,\"column\":60}},\"54\":{\"start\":{\"line\":79,\"column\":4},\"end\":{\"line\":86,\"column\":6}},\"55\":{\"start\":{\"line\":80,\"column\":8},\"end\":{\"line\":81,\"column\":19}},\"56\":{\"start\":{\"line\":81,\"column\":12},\"end\":{\"line\":81,\"column\":19}},\"57\":{\"start\":{\"line\":82,\"column\":8},\"end\":{\"line\":82,\"column\":113}},\"58\":{\"start\":{\"line\":83,\"column\":8},\"end\":{\"line\":85,\"column\":11}},\"59\":{\"start\":{\"line\":84,\"column\":12},\"end\":{\"line\":84,\"column\":65}},\"60\":{\"start\":{\"line\":87,\"column\":4},\"end\":{\"line\":93,\"column\":6}},\"61\":{\"start\":{\"line\":88,\"column\":8},\"end\":{\"line\":88,\"column\":56}},\"62\":{\"start\":{\"line\":89,\"column\":8},\"end\":{\"line\":89,\"column\":70}},\"63\":{\"start\":{\"line\":90,\"column\":8},\"end\":{\"line\":92,\"column\":9}},\"64\":{\"start\":{\"line\":91,\"column\":12},\"end\":{\"line\":91,\"column\":223}},\"65\":{\"start\":{\"line\":95,\"column\":4},\"end\":{\"line\":100,\"column\":6}},\"66\":{\"start\":{\"line\":96,\"column\":8},\"end\":{\"line\":96,\"column\":92}},\"67\":{\"start\":{\"line\":97,\"column\":8},\"end\":{\"line\":97,\"column\":98}},\"68\":{\"start\":{\"line\":98,\"column\":8},\"end\":{\"line\":98,\"column\":50}},\"69\":{\"start\":{\"line\":99,\"column\":8},\"end\":{\"line\":99,\"column\":38}},\"70\":{\"start\":{\"line\":101,\"column\":4},\"end\":{\"line\":103,\"column\":6}},\"71\":{\"start\":{\"line\":102,\"column\":8},\"end\":{\"line\":102,\"column\":51}},\"72\":{\"start\":{\"line\":104,\"column\":4},\"end\":{\"line\":104,\"column\":25}},\"73\":{\"start\":{\"line\":106,\"column\":0},\"end\":{\"line\":106,\"column\":35}}},\"branchMap\":{\"1\":{\"line\":38,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":38,\"column\":8}},{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":38,\"column\":8}}]},\"2\":{\"line\":38,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":38,\"column\":12},\"end\":{\"line\":38,\"column\":22}},{\"start\":{\"line\":38,\"column\":26},\"end\":{\"line\":38,\"column\":47}}]},\"3\":{\"line\":80,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":80,\"column\":8},\"end\":{\"line\":80,\"column\":8}},{\"start\":{\"line\":80,\"column\":8},\"end\":{\"line\":80,\"column\":8}}]},\"4\":{\"line\":90,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":90,\"column\":8},\"end\":{\"line\":90,\"column\":8}},{\"start\":{\"line\":90,\"column\":8},\"end\":{\"line\":90,\"column\":8}}]}}};\n}\n__cov_wQZQHXUSJIpKlvH2ZJnP9Q = __cov_wQZQHXUSJIpKlvH2ZJnP9Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientDolphin.ts'];\n__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['1']++;exports.__esModule=true;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['2']++;var AttributeCreatedNotification_1=require('./AttributeCreatedNotification');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['3']++;var ClientAttribute_1=require('./ClientAttribute');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['4']++;var ClientPresentationModel_1=require('./ClientPresentationModel');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['5']++;var EmptyNotification_1=require('./EmptyNotification');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['6']++;var NamedCommand_1=require('./NamedCommand');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['7']++;var SignalCommand_1=require('./SignalCommand');__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['8']++;var ClientDolphin=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['1']++;function ClientDolphin(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['2']++;}__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['10']++;ClientDolphin.prototype.setClientConnector=function(clientConnector){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['3']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['11']++;this.clientConnector=clientConnector;};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['12']++;ClientDolphin.prototype.getClientConnector=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['4']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['13']++;return this.clientConnector;};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['14']++;ClientDolphin.prototype.send=function(commandName,onFinished){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['5']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['15']++;this.clientConnector.send(new NamedCommand_1['default'](commandName),onFinished);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['16']++;ClientDolphin.prototype.reset=function(successHandler){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['6']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['17']++;this.clientConnector.reset(successHandler);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['18']++;ClientDolphin.prototype.sendEmpty=function(onFinished){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['7']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['19']++;this.clientConnector.send(new EmptyNotification_1['default'](),onFinished);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['20']++;ClientDolphin.prototype.attribute=function(propertyName,qualifier,value){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['8']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['21']++;return new ClientAttribute_1.ClientAttribute(propertyName,qualifier,value);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['22']++;ClientDolphin.prototype.presentationModel=function(id,type){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['9']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['23']++;var attributes=[];__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['24']++;for(var _i=2;_i<arguments.length;_i++){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['25']++;attributes[_i-2]=arguments[_i];}__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['26']++;var model=new ClientPresentationModel_1.ClientPresentationModel(id,type);__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['27']++;if((__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['2'][0]++,attributes)&&(__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['2'][1]++,attributes.length>0)){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['1'][0]++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['28']++;attributes.forEach(function(attribute){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['10']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['29']++;model.addAttribute(attribute);});}else{__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['1'][1]++;}__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['30']++;this.getClientModelStore().add(model);__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['31']++;return model;};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['32']++;ClientDolphin.prototype.setClientModelStore=function(clientModelStore){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['11']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['33']++;this.clientModelStore=clientModelStore;};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['34']++;ClientDolphin.prototype.getClientModelStore=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['12']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['35']++;return this.clientModelStore;};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['36']++;ClientDolphin.prototype.listPresentationModelIds=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['13']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['37']++;return this.getClientModelStore().listPresentationModelIds();};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['38']++;ClientDolphin.prototype.listPresentationModels=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['14']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['39']++;return this.getClientModelStore().listPresentationModels();};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['40']++;ClientDolphin.prototype.findAllPresentationModelByType=function(presentationModelType){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['15']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['41']++;return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['42']++;ClientDolphin.prototype.getAt=function(id){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['16']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['43']++;return this.findPresentationModelById(id);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['44']++;ClientDolphin.prototype.findPresentationModelById=function(id){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['17']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['45']++;return this.getClientModelStore().findPresentationModelById(id);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['46']++;ClientDolphin.prototype.deletePresentationModel=function(modelToDelete){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['18']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['47']++;this.getClientModelStore().deletePresentationModel(modelToDelete,true);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['48']++;ClientDolphin.prototype.deleteAllPresentationModelOfType=function(presentationModelType){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['19']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['49']++;this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['50']++;ClientDolphin.prototype.updatePresentationModelQualifier=function(presentationModel){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['20']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['51']++;var _this=this;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['52']++;presentationModel.getAttributes().forEach(function(sourceAttribute){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['21']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['53']++;_this.updateAttributeQualifier(sourceAttribute);});};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['54']++;ClientDolphin.prototype.updateAttributeQualifier=function(sourceAttribute){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['22']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['55']++;if(!sourceAttribute.getQualifier()){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['3'][0]++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['56']++;return;}else{__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['3'][1]++;}__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['57']++;var attributes=this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['58']++;attributes.forEach(function(targetAttribute){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['23']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['59']++;targetAttribute.setValue(sourceAttribute.getValue());});};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['60']++;ClientDolphin.prototype.addAttributeToModel=function(presentationModel,clientAttribute){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['24']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['61']++;presentationModel.addAttribute(clientAttribute);__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['62']++;this.getClientModelStore().registerAttribute(clientAttribute);__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['63']++;if(!presentationModel.clientSideOnly){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['4'][0]++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['64']++;this.clientConnector.send(new AttributeCreatedNotification_1['default'](presentationModel.id,clientAttribute.id,clientAttribute.propertyName,clientAttribute.getValue(),clientAttribute.getQualifier()),null);}else{__cov_wQZQHXUSJIpKlvH2ZJnP9Q.b['4'][1]++;}};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['65']++;ClientDolphin.prototype.startPushListening=function(pushActionName,releaseActionName){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['25']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['66']++;this.clientConnector.setPushListener(new NamedCommand_1['default'](pushActionName));__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['67']++;this.clientConnector.setReleaseCommand(new SignalCommand_1['default'](releaseActionName));__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['68']++;this.clientConnector.setPushEnabled(true);__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['69']++;this.clientConnector.listen();};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['70']++;ClientDolphin.prototype.stopPushListening=function(){__cov_wQZQHXUSJIpKlvH2ZJnP9Q.f['26']++;__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['71']++;this.clientConnector.setPushEnabled(false);};__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['72']++;return ClientDolphin;}();__cov_wQZQHXUSJIpKlvH2ZJnP9Q.s['73']++;exports['default']=ClientDolphin;\n","\"use strict\";\nvar __cov_0MjpvFxcVY1n9$6KwaReMA = (Function('return this'))();\nif (!__cov_0MjpvFxcVY1n9$6KwaReMA.__coverage__) { __cov_0MjpvFxcVY1n9$6KwaReMA.__coverage__ = {}; }\n__cov_0MjpvFxcVY1n9$6KwaReMA = __cov_0MjpvFxcVY1n9$6KwaReMA.__coverage__;\nif (!(__cov_0MjpvFxcVY1n9$6KwaReMA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientModelStore.ts'])) {\n   __cov_0MjpvFxcVY1n9$6KwaReMA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientModelStore.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientModelStore.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":1,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0,\"102\":0,\"103\":0,\"104\":0,\"105\":0,\"106\":0,\"107\":0,\"108\":0,\"109\":0,\"110\":0,\"111\":0,\"112\":0,\"113\":0,\"114\":0,\"115\":0,\"116\":0,\"117\":0,\"118\":0,\"119\":0,\"120\":0,\"121\":0,\"122\":0,\"123\":0,\"124\":0,\"125\":0,\"126\":0,\"127\":0,\"128\":0,\"129\":0,\"130\":0,\"131\":0,\"132\":0,\"133\":0,\"134\":0,\"135\":0,\"136\":0,\"137\":0,\"138\":0,\"139\":0,\"140\":0,\"141\":0,\"142\":0,\"143\":0,\"144\":0,\"145\":0,\"146\":0,\"147\":0,\"148\":0,\"149\":0,\"150\":0,\"151\":0,\"152\":0,\"153\":0,\"154\":0,\"155\":0,\"156\":0,\"157\":0,\"158\":0,\"159\":0,\"160\":0,\"161\":0,\"162\":0,\"163\":0,\"164\":0,\"165\":0,\"166\":0,\"167\":0,\"168\":0,\"169\":0,\"170\":0,\"171\":0,\"172\":0,\"173\":0,\"174\":0,\"175\":0,\"176\":0,\"177\":0,\"178\":0,\"179\":0,\"180\":0,\"181\":0,\"182\":0,\"183\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0],\"13\":[0,0],\"14\":[0,0],\"15\":[0,0],\"16\":[0,0],\"17\":[0,0],\"18\":[0,0],\"19\":[0,0],\"20\":[0,0],\"21\":[0,0],\"22\":[0,0],\"23\":[0,0],\"24\":[0,0],\"25\":[0,0],\"26\":[0,0],\"27\":[0,0],\"28\":[0,0],\"29\":[0,0],\"30\":[0,0],\"31\":[0,0],\"32\":[0,0],\"33\":[0,0],\"34\":[0,0],\"35\":[0,0],\"36\":[0,0],\"37\":[0,0],\"38\":[0,0],\"39\":[0,0],\"40\":[0,0],\"41\":[0,0],\"42\":[0,0],\"43\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":12,\"loc\":{\"start\":{\"line\":12,\"column\":1},\"end\":{\"line\":12,\"column\":17}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":24},\"end\":{\"line\":16,\"column\":36}}},\"3\":{\"name\":\"ClientModelStore\",\"line\":17,\"loc\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":17,\"column\":45}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":25,\"loc\":{\"start\":{\"line\":25,\"column\":50},\"end\":{\"line\":25,\"column\":62}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":28,\"loc\":{\"start\":{\"line\":28,\"column\":47},\"end\":{\"line\":28,\"column\":64}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":36,\"loc\":{\"start\":{\"line\":36,\"column\":38},\"end\":{\"line\":36,\"column\":59}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":40,\"loc\":{\"start\":{\"line\":40,\"column\":51},\"end\":{\"line\":40,\"column\":72}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":48,\"loc\":{\"start\":{\"line\":48,\"column\":32},\"end\":{\"line\":48,\"column\":47}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":52,\"loc\":{\"start\":{\"line\":52,\"column\":57},\"end\":{\"line\":52,\"column\":73}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":55,\"loc\":{\"start\":{\"line\":55,\"column\":30},\"end\":{\"line\":55,\"column\":46}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":60,\"loc\":{\"start\":{\"line\":60,\"column\":36},\"end\":{\"line\":60,\"column\":51}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":65,\"loc\":{\"start\":{\"line\":65,\"column\":37},\"end\":{\"line\":65,\"column\":54}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":82,\"loc\":{\"start\":{\"line\":82,\"column\":40},\"end\":{\"line\":82,\"column\":57}}},\"14\":{\"name\":\"(anonymous_14)\",\"line\":91,\"loc\":{\"start\":{\"line\":91,\"column\":42},\"end\":{\"line\":91,\"column\":63}}},\"15\":{\"name\":\"(anonymous_15)\",\"line\":102,\"loc\":{\"start\":{\"line\":102,\"column\":56},\"end\":{\"line\":102,\"column\":74}}},\"16\":{\"name\":\"(anonymous_16)\",\"line\":104,\"loc\":{\"start\":{\"line\":104,\"column\":40},\"end\":{\"line\":104,\"column\":57}}},\"17\":{\"name\":\"(anonymous_17)\",\"line\":105,\"loc\":{\"start\":{\"line\":105,\"column\":42},\"end\":{\"line\":105,\"column\":58}}},\"18\":{\"name\":\"(anonymous_18)\",\"line\":113,\"loc\":{\"start\":{\"line\":113,\"column\":60},\"end\":{\"line\":113,\"column\":77}}},\"19\":{\"name\":\"(anonymous_19)\",\"line\":130,\"loc\":{\"start\":{\"line\":130,\"column\":63},\"end\":{\"line\":130,\"column\":80}}},\"20\":{\"name\":\"(anonymous_20)\",\"line\":145,\"loc\":{\"start\":{\"line\":145,\"column\":58},\"end\":{\"line\":145,\"column\":70}}},\"21\":{\"name\":\"(anonymous_21)\",\"line\":155,\"loc\":{\"start\":{\"line\":155,\"column\":56},\"end\":{\"line\":155,\"column\":68}}},\"22\":{\"name\":\"(anonymous_22)\",\"line\":165,\"loc\":{\"start\":{\"line\":165,\"column\":59},\"end\":{\"line\":165,\"column\":73}}},\"23\":{\"name\":\"(anonymous_23)\",\"line\":168,\"loc\":{\"start\":{\"line\":168,\"column\":64},\"end\":{\"line\":168,\"column\":80}}},\"24\":{\"name\":\"(anonymous_24)\",\"line\":174,\"loc\":{\"start\":{\"line\":174,\"column\":66},\"end\":{\"line\":174,\"column\":99}}},\"25\":{\"name\":\"(anonymous_25)\",\"line\":177,\"loc\":{\"start\":{\"line\":177,\"column\":35},\"end\":{\"line\":177,\"column\":49}}},\"26\":{\"name\":\"(anonymous_26)\",\"line\":182,\"loc\":{\"start\":{\"line\":182,\"column\":57},\"end\":{\"line\":182,\"column\":82}}},\"27\":{\"name\":\"(anonymous_27)\",\"line\":194,\"loc\":{\"start\":{\"line\":194,\"column\":59},\"end\":{\"line\":194,\"column\":73}}},\"28\":{\"name\":\"(anonymous_28)\",\"line\":197,\"loc\":{\"start\":{\"line\":197,\"column\":50},\"end\":{\"line\":197,\"column\":71}}},\"29\":{\"name\":\"(anonymous_29)\",\"line\":203,\"loc\":{\"start\":{\"line\":203,\"column\":53},\"end\":{\"line\":203,\"column\":74}}},\"30\":{\"name\":\"(anonymous_30)\",\"line\":209,\"loc\":{\"start\":{\"line\":209,\"column\":51},\"end\":{\"line\":209,\"column\":65}}},\"31\":{\"name\":\"(anonymous_31)\",\"line\":212,\"loc\":{\"start\":{\"line\":212,\"column\":57},\"end\":{\"line\":212,\"column\":78}}},\"32\":{\"name\":\"(anonymous_32)\",\"line\":225,\"loc\":{\"start\":{\"line\":225,\"column\":60},\"end\":{\"line\":225,\"column\":81}}},\"33\":{\"name\":\"(anonymous_33)\",\"line\":240,\"loc\":{\"start\":{\"line\":240,\"column\":62},\"end\":{\"line\":240,\"column\":83}}},\"34\":{\"name\":\"(anonymous_34)\",\"line\":246,\"loc\":{\"start\":{\"line\":246,\"column\":52},\"end\":{\"line\":246,\"column\":76}}},\"35\":{\"name\":\"(anonymous_35)\",\"line\":249,\"loc\":{\"start\":{\"line\":249,\"column\":59},\"end\":{\"line\":249,\"column\":106}}},\"36\":{\"name\":\"(anonymous_36)\",\"line\":250,\"loc\":{\"start\":{\"line\":250,\"column\":41},\"end\":{\"line\":250,\"column\":65}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":26}},\"2\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":41}},\"3\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":5,\"column\":83}},\"4\":{\"start\":{\"line\":6,\"column\":0},\"end\":{\"line\":6,\"column\":83}},\"5\":{\"start\":{\"line\":7,\"column\":0},\"end\":{\"line\":7,\"column\":115}},\"6\":{\"start\":{\"line\":8,\"column\":0},\"end\":{\"line\":8,\"column\":95}},\"7\":{\"start\":{\"line\":9,\"column\":0},\"end\":{\"line\":9,\"column\":39}},\"8\":{\"start\":{\"line\":10,\"column\":0},\"end\":{\"line\":10,\"column\":61}},\"9\":{\"start\":{\"line\":11,\"column\":0},\"end\":{\"line\":11,\"column\":9}},\"10\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":15,\"column\":47}},\"11\":{\"start\":{\"line\":13,\"column\":4},\"end\":{\"line\":13,\"column\":44}},\"12\":{\"start\":{\"line\":14,\"column\":4},\"end\":{\"line\":14,\"column\":50}},\"13\":{\"start\":{\"line\":16,\"column\":0},\"end\":{\"line\":257,\"column\":5}},\"14\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":24,\"column\":5}},\"15\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":43}},\"16\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":44}},\"17\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":51}},\"18\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":41}},\"19\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":48}},\"20\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":63}},\"21\":{\"start\":{\"line\":25,\"column\":4},\"end\":{\"line\":27,\"column\":6}},\"22\":{\"start\":{\"line\":26,\"column\":8},\"end\":{\"line\":26,\"column\":34}},\"23\":{\"start\":{\"line\":28,\"column\":4},\"end\":{\"line\":39,\"column\":6}},\"24\":{\"start\":{\"line\":29,\"column\":8},\"end\":{\"line\":29,\"column\":25}},\"25\":{\"start\":{\"line\":30,\"column\":8},\"end\":{\"line\":32,\"column\":9}},\"26\":{\"start\":{\"line\":31,\"column\":12},\"end\":{\"line\":31,\"column\":19}},\"27\":{\"start\":{\"line\":33,\"column\":8},\"end\":{\"line\":33,\"column\":64}},\"28\":{\"start\":{\"line\":34,\"column\":8},\"end\":{\"line\":34,\"column\":85}},\"29\":{\"start\":{\"line\":35,\"column\":8},\"end\":{\"line\":35,\"column\":46}},\"30\":{\"start\":{\"line\":36,\"column\":8},\"end\":{\"line\":38,\"column\":11}},\"31\":{\"start\":{\"line\":37,\"column\":12},\"end\":{\"line\":37,\"column\":47}},\"32\":{\"start\":{\"line\":40,\"column\":4},\"end\":{\"line\":64,\"column\":6}},\"33\":{\"start\":{\"line\":41,\"column\":8},\"end\":{\"line\":41,\"column\":25}},\"34\":{\"start\":{\"line\":42,\"column\":8},\"end\":{\"line\":42,\"column\":41}},\"35\":{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":45,\"column\":9}},\"36\":{\"start\":{\"line\":44,\"column\":12},\"end\":{\"line\":44,\"column\":52}},\"37\":{\"start\":{\"line\":48,\"column\":8},\"end\":{\"line\":59,\"column\":11}},\"38\":{\"start\":{\"line\":49,\"column\":12},\"end\":{\"line\":49,\"column\":116}},\"39\":{\"start\":{\"line\":50,\"column\":12},\"end\":{\"line\":50,\"column\":84}},\"40\":{\"start\":{\"line\":51,\"column\":12},\"end\":{\"line\":58,\"column\":13}},\"41\":{\"start\":{\"line\":52,\"column\":16},\"end\":{\"line\":54,\"column\":19}},\"42\":{\"start\":{\"line\":53,\"column\":20},\"end\":{\"line\":53,\"column\":97}},\"43\":{\"start\":{\"line\":55,\"column\":16},\"end\":{\"line\":57,\"column\":19}},\"44\":{\"start\":{\"line\":56,\"column\":20},\"end\":{\"line\":56,\"column\":56}},\"45\":{\"start\":{\"line\":60,\"column\":8},\"end\":{\"line\":63,\"column\":11}},\"46\":{\"start\":{\"line\":61,\"column\":12},\"end\":{\"line\":61,\"column\":159}},\"47\":{\"start\":{\"line\":62,\"column\":12},\"end\":{\"line\":62,\"column\":87}},\"48\":{\"start\":{\"line\":65,\"column\":4},\"end\":{\"line\":81,\"column\":6}},\"49\":{\"start\":{\"line\":66,\"column\":8},\"end\":{\"line\":68,\"column\":9}},\"50\":{\"start\":{\"line\":67,\"column\":12},\"end\":{\"line\":67,\"column\":25}},\"51\":{\"start\":{\"line\":69,\"column\":8},\"end\":{\"line\":71,\"column\":9}},\"52\":{\"start\":{\"line\":70,\"column\":12},\"end\":{\"line\":70,\"column\":69}},\"53\":{\"start\":{\"line\":72,\"column\":8},\"end\":{\"line\":72,\"column\":26}},\"54\":{\"start\":{\"line\":73,\"column\":8},\"end\":{\"line\":79,\"column\":9}},\"55\":{\"start\":{\"line\":74,\"column\":12},\"end\":{\"line\":74,\"column\":57}},\"56\":{\"start\":{\"line\":75,\"column\":12},\"end\":{\"line\":75,\"column\":51}},\"57\":{\"start\":{\"line\":76,\"column\":12},\"end\":{\"line\":76,\"column\":38}},\"58\":{\"start\":{\"line\":77,\"column\":12},\"end\":{\"line\":77,\"column\":108}},\"59\":{\"start\":{\"line\":78,\"column\":12},\"end\":{\"line\":78,\"column\":25}},\"60\":{\"start\":{\"line\":80,\"column\":8},\"end\":{\"line\":80,\"column\":21}},\"61\":{\"start\":{\"line\":82,\"column\":4},\"end\":{\"line\":101,\"column\":6}},\"62\":{\"start\":{\"line\":83,\"column\":8},\"end\":{\"line\":83,\"column\":25}},\"63\":{\"start\":{\"line\":84,\"column\":8},\"end\":{\"line\":86,\"column\":9}},\"64\":{\"start\":{\"line\":85,\"column\":12},\"end\":{\"line\":85,\"column\":25}},\"65\":{\"start\":{\"line\":87,\"column\":8},\"end\":{\"line\":87,\"column\":28}},\"66\":{\"start\":{\"line\":88,\"column\":8},\"end\":{\"line\":99,\"column\":9}},\"67\":{\"start\":{\"line\":89,\"column\":12},\"end\":{\"line\":89,\"column\":54}},\"68\":{\"start\":{\"line\":90,\"column\":12},\"end\":{\"line\":90,\"column\":56}},\"69\":{\"start\":{\"line\":91,\"column\":12},\"end\":{\"line\":96,\"column\":15}},\"70\":{\"start\":{\"line\":92,\"column\":16},\"end\":{\"line\":92,\"column\":53}},\"71\":{\"start\":{\"line\":93,\"column\":16},\"end\":{\"line\":95,\"column\":17}},\"72\":{\"start\":{\"line\":94,\"column\":20},\"end\":{\"line\":94,\"column\":64}},\"73\":{\"start\":{\"line\":97,\"column\":12},\"end\":{\"line\":97,\"column\":110}},\"74\":{\"start\":{\"line\":98,\"column\":12},\"end\":{\"line\":98,\"column\":27}},\"75\":{\"start\":{\"line\":100,\"column\":8},\"end\":{\"line\":100,\"column\":23}},\"76\":{\"start\":{\"line\":102,\"column\":4},\"end\":{\"line\":112,\"column\":6}},\"77\":{\"start\":{\"line\":103,\"column\":8},\"end\":{\"line\":103,\"column\":25}},\"78\":{\"start\":{\"line\":104,\"column\":8},\"end\":{\"line\":110,\"column\":11}},\"79\":{\"start\":{\"line\":105,\"column\":12},\"end\":{\"line\":109,\"column\":15}},\"80\":{\"start\":{\"line\":106,\"column\":16},\"end\":{\"line\":108,\"column\":17}},\"81\":{\"start\":{\"line\":107,\"column\":20},\"end\":{\"line\":107,\"column\":39}},\"82\":{\"start\":{\"line\":111,\"column\":8},\"end\":{\"line\":111,\"column\":23}},\"83\":{\"start\":{\"line\":113,\"column\":4},\"end\":{\"line\":129,\"column\":6}},\"84\":{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":116,\"column\":9}},\"85\":{\"start\":{\"line\":115,\"column\":12},\"end\":{\"line\":115,\"column\":19}},\"86\":{\"start\":{\"line\":117,\"column\":8},\"end\":{\"line\":117,\"column\":47}},\"87\":{\"start\":{\"line\":118,\"column\":8},\"end\":{\"line\":120,\"column\":9}},\"88\":{\"start\":{\"line\":119,\"column\":12},\"end\":{\"line\":119,\"column\":19}},\"89\":{\"start\":{\"line\":121,\"column\":8},\"end\":{\"line\":121,\"column\":74}},\"90\":{\"start\":{\"line\":122,\"column\":8},\"end\":{\"line\":125,\"column\":9}},\"91\":{\"start\":{\"line\":123,\"column\":12},\"end\":{\"line\":123,\"column\":36}},\"92\":{\"start\":{\"line\":124,\"column\":12},\"end\":{\"line\":124,\"column\":73}},\"93\":{\"start\":{\"line\":126,\"column\":8},\"end\":{\"line\":128,\"column\":9}},\"94\":{\"start\":{\"line\":127,\"column\":12},\"end\":{\"line\":127,\"column\":43}},\"95\":{\"start\":{\"line\":130,\"column\":4},\"end\":{\"line\":144,\"column\":6}},\"96\":{\"start\":{\"line\":131,\"column\":8},\"end\":{\"line\":133,\"column\":9}},\"97\":{\"start\":{\"line\":132,\"column\":12},\"end\":{\"line\":132,\"column\":19}},\"98\":{\"start\":{\"line\":134,\"column\":8},\"end\":{\"line\":134,\"column\":97}},\"99\":{\"start\":{\"line\":135,\"column\":8},\"end\":{\"line\":137,\"column\":9}},\"100\":{\"start\":{\"line\":136,\"column\":12},\"end\":{\"line\":136,\"column\":19}},\"101\":{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":140,\"column\":9}},\"102\":{\"start\":{\"line\":139,\"column\":12},\"end\":{\"line\":139,\"column\":76}},\"103\":{\"start\":{\"line\":141,\"column\":8},\"end\":{\"line\":143,\"column\":9}},\"104\":{\"start\":{\"line\":142,\"column\":12},\"end\":{\"line\":142,\"column\":82}},\"105\":{\"start\":{\"line\":145,\"column\":4},\"end\":{\"line\":154,\"column\":6}},\"106\":{\"start\":{\"line\":146,\"column\":8},\"end\":{\"line\":146,\"column\":24}},\"107\":{\"start\":{\"line\":147,\"column\":8},\"end\":{\"line\":147,\"column\":50}},\"108\":{\"start\":{\"line\":148,\"column\":8},\"end\":{\"line\":148,\"column\":31}},\"109\":{\"start\":{\"line\":149,\"column\":8},\"end\":{\"line\":152,\"column\":9}},\"110\":{\"start\":{\"line\":150,\"column\":12},\"end\":{\"line\":150,\"column\":36}},\"111\":{\"start\":{\"line\":151,\"column\":12},\"end\":{\"line\":151,\"column\":31}},\"112\":{\"start\":{\"line\":153,\"column\":8},\"end\":{\"line\":153,\"column\":22}},\"113\":{\"start\":{\"line\":155,\"column\":4},\"end\":{\"line\":164,\"column\":6}},\"114\":{\"start\":{\"line\":156,\"column\":8},\"end\":{\"line\":156,\"column\":24}},\"115\":{\"start\":{\"line\":157,\"column\":8},\"end\":{\"line\":157,\"column\":52}},\"116\":{\"start\":{\"line\":158,\"column\":8},\"end\":{\"line\":158,\"column\":31}},\"117\":{\"start\":{\"line\":159,\"column\":8},\"end\":{\"line\":162,\"column\":9}},\"118\":{\"start\":{\"line\":160,\"column\":12},\"end\":{\"line\":160,\"column\":36}},\"119\":{\"start\":{\"line\":161,\"column\":12},\"end\":{\"line\":161,\"column\":31}},\"120\":{\"start\":{\"line\":163,\"column\":8},\"end\":{\"line\":163,\"column\":22}},\"121\":{\"start\":{\"line\":165,\"column\":4},\"end\":{\"line\":167,\"column\":6}},\"122\":{\"start\":{\"line\":166,\"column\":8},\"end\":{\"line\":166,\"column\":47}},\"123\":{\"start\":{\"line\":168,\"column\":4},\"end\":{\"line\":173,\"column\":6}},\"124\":{\"start\":{\"line\":169,\"column\":8},\"end\":{\"line\":171,\"column\":9}},\"125\":{\"start\":{\"line\":170,\"column\":12},\"end\":{\"line\":170,\"column\":22}},\"126\":{\"start\":{\"line\":172,\"column\":8},\"end\":{\"line\":172,\"column\":65}},\"127\":{\"start\":{\"line\":174,\"column\":4},\"end\":{\"line\":181,\"column\":6}},\"128\":{\"start\":{\"line\":175,\"column\":8},\"end\":{\"line\":175,\"column\":25}},\"129\":{\"start\":{\"line\":176,\"column\":8},\"end\":{\"line\":176,\"column\":92}},\"130\":{\"start\":{\"line\":177,\"column\":8},\"end\":{\"line\":179,\"column\":11}},\"131\":{\"start\":{\"line\":178,\"column\":12},\"end\":{\"line\":178,\"column\":53}},\"132\":{\"start\":{\"line\":180,\"column\":8},\"end\":{\"line\":180,\"column\":152}},\"133\":{\"start\":{\"line\":182,\"column\":4},\"end\":{\"line\":193,\"column\":6}},\"134\":{\"start\":{\"line\":183,\"column\":8},\"end\":{\"line\":185,\"column\":9}},\"135\":{\"start\":{\"line\":184,\"column\":12},\"end\":{\"line\":184,\"column\":19}},\"136\":{\"start\":{\"line\":186,\"column\":8},\"end\":{\"line\":192,\"column\":9}},\"137\":{\"start\":{\"line\":187,\"column\":12},\"end\":{\"line\":187,\"column\":31}},\"138\":{\"start\":{\"line\":188,\"column\":12},\"end\":{\"line\":190,\"column\":13}},\"139\":{\"start\":{\"line\":189,\"column\":16},\"end\":{\"line\":189,\"column\":23}},\"140\":{\"start\":{\"line\":191,\"column\":12},\"end\":{\"line\":191,\"column\":128}},\"141\":{\"start\":{\"line\":194,\"column\":4},\"end\":{\"line\":196,\"column\":6}},\"142\":{\"start\":{\"line\":195,\"column\":8},\"end\":{\"line\":195,\"column\":47}},\"143\":{\"start\":{\"line\":197,\"column\":4},\"end\":{\"line\":202,\"column\":6}},\"144\":{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":200,\"column\":9}},\"145\":{\"start\":{\"line\":199,\"column\":12},\"end\":{\"line\":199,\"column\":19}},\"146\":{\"start\":{\"line\":201,\"column\":8},\"end\":{\"line\":201,\"column\":58}},\"147\":{\"start\":{\"line\":203,\"column\":4},\"end\":{\"line\":208,\"column\":6}},\"148\":{\"start\":{\"line\":204,\"column\":8},\"end\":{\"line\":206,\"column\":9}},\"149\":{\"start\":{\"line\":205,\"column\":12},\"end\":{\"line\":205,\"column\":19}},\"150\":{\"start\":{\"line\":207,\"column\":8},\"end\":{\"line\":207,\"column\":53}},\"151\":{\"start\":{\"line\":209,\"column\":4},\"end\":{\"line\":211,\"column\":6}},\"152\":{\"start\":{\"line\":210,\"column\":8},\"end\":{\"line\":210,\"column\":44}},\"153\":{\"start\":{\"line\":212,\"column\":4},\"end\":{\"line\":224,\"column\":6}},\"154\":{\"start\":{\"line\":213,\"column\":8},\"end\":{\"line\":215,\"column\":9}},\"155\":{\"start\":{\"line\":214,\"column\":12},\"end\":{\"line\":214,\"column\":19}},\"156\":{\"start\":{\"line\":216,\"column\":8},\"end\":{\"line\":216,\"column\":83}},\"157\":{\"start\":{\"line\":217,\"column\":8},\"end\":{\"line\":220,\"column\":9}},\"158\":{\"start\":{\"line\":218,\"column\":12},\"end\":{\"line\":218,\"column\":28}},\"159\":{\"start\":{\"line\":219,\"column\":12},\"end\":{\"line\":219,\"column\":82}},\"160\":{\"start\":{\"line\":221,\"column\":8},\"end\":{\"line\":223,\"column\":9}},\"161\":{\"start\":{\"line\":222,\"column\":12},\"end\":{\"line\":222,\"column\":39}},\"162\":{\"start\":{\"line\":225,\"column\":4},\"end\":{\"line\":239,\"column\":6}},\"163\":{\"start\":{\"line\":226,\"column\":8},\"end\":{\"line\":228,\"column\":9}},\"164\":{\"start\":{\"line\":227,\"column\":12},\"end\":{\"line\":227,\"column\":19}},\"165\":{\"start\":{\"line\":229,\"column\":8},\"end\":{\"line\":229,\"column\":83}},\"166\":{\"start\":{\"line\":230,\"column\":8},\"end\":{\"line\":232,\"column\":9}},\"167\":{\"start\":{\"line\":231,\"column\":12},\"end\":{\"line\":231,\"column\":19}},\"168\":{\"start\":{\"line\":233,\"column\":8},\"end\":{\"line\":235,\"column\":9}},\"169\":{\"start\":{\"line\":234,\"column\":12},\"end\":{\"line\":234,\"column\":64}},\"170\":{\"start\":{\"line\":236,\"column\":8},\"end\":{\"line\":238,\"column\":9}},\"171\":{\"start\":{\"line\":237,\"column\":12},\"end\":{\"line\":237,\"column\":76}},\"172\":{\"start\":{\"line\":240,\"column\":4},\"end\":{\"line\":245,\"column\":6}},\"173\":{\"start\":{\"line\":241,\"column\":8},\"end\":{\"line\":243,\"column\":9}},\"174\":{\"start\":{\"line\":242,\"column\":12},\"end\":{\"line\":242,\"column\":22}},\"175\":{\"start\":{\"line\":244,\"column\":8},\"end\":{\"line\":244,\"column\":67}},\"176\":{\"start\":{\"line\":246,\"column\":4},\"end\":{\"line\":248,\"column\":6}},\"177\":{\"start\":{\"line\":247,\"column\":8},\"end\":{\"line\":247,\"column\":55}},\"178\":{\"start\":{\"line\":249,\"column\":4},\"end\":{\"line\":255,\"column\":6}},\"179\":{\"start\":{\"line\":250,\"column\":8},\"end\":{\"line\":254,\"column\":11}},\"180\":{\"start\":{\"line\":251,\"column\":12},\"end\":{\"line\":253,\"column\":13}},\"181\":{\"start\":{\"line\":252,\"column\":16},\"end\":{\"line\":252,\"column\":43}},\"182\":{\"start\":{\"line\":256,\"column\":4},\"end\":{\"line\":256,\"column\":28}},\"183\":{\"start\":{\"line\":258,\"column\":0},\"end\":{\"line\":258,\"column\":44}}},\"branchMap\":{\"1\":{\"line\":15,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":15,\"column\":10},\"end\":{\"line\":15,\"column\":22}},{\"start\":{\"line\":15,\"column\":27},\"end\":{\"line\":15,\"column\":44}}]},\"2\":{\"line\":30,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":30,\"column\":8},\"end\":{\"line\":30,\"column\":8}},{\"start\":{\"line\":30,\"column\":8},\"end\":{\"line\":30,\"column\":8}}]},\"3\":{\"line\":43,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":8}},{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":8}}]},\"4\":{\"line\":51,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":51,\"column\":12},\"end\":{\"line\":51,\"column\":12}},{\"start\":{\"line\":51,\"column\":12},\"end\":{\"line\":51,\"column\":12}}]},\"5\":{\"line\":53,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":53,\"column\":27},\"end\":{\"line\":53,\"column\":45}},{\"start\":{\"line\":53,\"column\":49},\"end\":{\"line\":53,\"column\":96}}]},\"6\":{\"line\":66,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":66,\"column\":8},\"end\":{\"line\":66,\"column\":8}},{\"start\":{\"line\":66,\"column\":8},\"end\":{\"line\":66,\"column\":8}}]},\"7\":{\"line\":69,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":69,\"column\":8},\"end\":{\"line\":69,\"column\":8}},{\"start\":{\"line\":69,\"column\":8},\"end\":{\"line\":69,\"column\":8}}]},\"8\":{\"line\":73,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":73,\"column\":8},\"end\":{\"line\":73,\"column\":8}},{\"start\":{\"line\":73,\"column\":8},\"end\":{\"line\":73,\"column\":8}}]},\"9\":{\"line\":84,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":84,\"column\":8},\"end\":{\"line\":84,\"column\":8}},{\"start\":{\"line\":84,\"column\":8},\"end\":{\"line\":84,\"column\":8}}]},\"10\":{\"line\":88,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":88,\"column\":8},\"end\":{\"line\":88,\"column\":8}},{\"start\":{\"line\":88,\"column\":8},\"end\":{\"line\":88,\"column\":8}}]},\"11\":{\"line\":93,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":93,\"column\":16},\"end\":{\"line\":93,\"column\":16}},{\"start\":{\"line\":93,\"column\":16},\"end\":{\"line\":93,\"column\":16}}]},\"12\":{\"line\":106,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":106,\"column\":16},\"end\":{\"line\":106,\"column\":16}},{\"start\":{\"line\":106,\"column\":16},\"end\":{\"line\":106,\"column\":16}}]},\"13\":{\"line\":114,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":114,\"column\":8}},{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":114,\"column\":8}}]},\"14\":{\"line\":118,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":118,\"column\":8},\"end\":{\"line\":118,\"column\":8}},{\"start\":{\"line\":118,\"column\":8},\"end\":{\"line\":118,\"column\":8}}]},\"15\":{\"line\":122,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":122,\"column\":8},\"end\":{\"line\":122,\"column\":8}},{\"start\":{\"line\":122,\"column\":8},\"end\":{\"line\":122,\"column\":8}}]},\"16\":{\"line\":126,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":126,\"column\":8},\"end\":{\"line\":126,\"column\":8}},{\"start\":{\"line\":126,\"column\":8},\"end\":{\"line\":126,\"column\":8}}]},\"17\":{\"line\":131,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":131,\"column\":8},\"end\":{\"line\":131,\"column\":8}},{\"start\":{\"line\":131,\"column\":8},\"end\":{\"line\":131,\"column\":8}}]},\"18\":{\"line\":131,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":131,\"column\":12},\"end\":{\"line\":131,\"column\":18}},{\"start\":{\"line\":131,\"column\":22},\"end\":{\"line\":131,\"column\":52}}]},\"19\":{\"line\":135,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":135,\"column\":8},\"end\":{\"line\":135,\"column\":8}},{\"start\":{\"line\":135,\"column\":8},\"end\":{\"line\":135,\"column\":8}}]},\"20\":{\"line\":138,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":138,\"column\":8}},{\"start\":{\"line\":138,\"column\":8},\"end\":{\"line\":138,\"column\":8}}]},\"21\":{\"line\":141,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":141,\"column\":8},\"end\":{\"line\":141,\"column\":8}},{\"start\":{\"line\":141,\"column\":8},\"end\":{\"line\":141,\"column\":8}}]},\"22\":{\"line\":169,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":169,\"column\":8},\"end\":{\"line\":169,\"column\":8}},{\"start\":{\"line\":169,\"column\":8},\"end\":{\"line\":169,\"column\":8}}]},\"23\":{\"line\":169,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":169,\"column\":12},\"end\":{\"line\":169,\"column\":17}},{\"start\":{\"line\":169,\"column\":21},\"end\":{\"line\":169,\"column\":62}}]},\"24\":{\"line\":183,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":183,\"column\":8},\"end\":{\"line\":183,\"column\":8}},{\"start\":{\"line\":183,\"column\":8},\"end\":{\"line\":183,\"column\":8}}]},\"25\":{\"line\":186,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":186,\"column\":8},\"end\":{\"line\":186,\"column\":8}},{\"start\":{\"line\":186,\"column\":8},\"end\":{\"line\":186,\"column\":8}}]},\"26\":{\"line\":188,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":188,\"column\":12},\"end\":{\"line\":188,\"column\":12}},{\"start\":{\"line\":188,\"column\":12},\"end\":{\"line\":188,\"column\":12}}]},\"27\":{\"line\":188,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":188,\"column\":16},\"end\":{\"line\":188,\"column\":23}},{\"start\":{\"line\":188,\"column\":27},\"end\":{\"line\":188,\"column\":47}}]},\"28\":{\"line\":198,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":198,\"column\":8}},{\"start\":{\"line\":198,\"column\":8},\"end\":{\"line\":198,\"column\":8}}]},\"29\":{\"line\":198,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":198,\"column\":12},\"end\":{\"line\":198,\"column\":22}},{\"start\":{\"line\":198,\"column\":26},\"end\":{\"line\":198,\"column\":64}}]},\"30\":{\"line\":204,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":204,\"column\":8},\"end\":{\"line\":204,\"column\":8}},{\"start\":{\"line\":204,\"column\":8},\"end\":{\"line\":204,\"column\":8}}]},\"31\":{\"line\":204,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":204,\"column\":12},\"end\":{\"line\":204,\"column\":22}},{\"start\":{\"line\":204,\"column\":26},\"end\":{\"line\":204,\"column\":65}}]},\"32\":{\"line\":213,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":213,\"column\":8},\"end\":{\"line\":213,\"column\":8}},{\"start\":{\"line\":213,\"column\":8},\"end\":{\"line\":213,\"column\":8}}]},\"33\":{\"line\":213,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":213,\"column\":12},\"end\":{\"line\":213,\"column\":22}},{\"start\":{\"line\":213,\"column\":26},\"end\":{\"line\":213,\"column\":51}}]},\"34\":{\"line\":217,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":217,\"column\":8},\"end\":{\"line\":217,\"column\":8}},{\"start\":{\"line\":217,\"column\":8},\"end\":{\"line\":217,\"column\":8}}]},\"35\":{\"line\":221,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":221,\"column\":8},\"end\":{\"line\":221,\"column\":8}},{\"start\":{\"line\":221,\"column\":8},\"end\":{\"line\":221,\"column\":8}}]},\"36\":{\"line\":226,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":226,\"column\":8},\"end\":{\"line\":226,\"column\":8}},{\"start\":{\"line\":226,\"column\":8},\"end\":{\"line\":226,\"column\":8}}]},\"37\":{\"line\":226,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":226,\"column\":12},\"end\":{\"line\":226,\"column\":22}},{\"start\":{\"line\":226,\"column\":26},\"end\":{\"line\":226,\"column\":51}}]},\"38\":{\"line\":230,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":230,\"column\":8},\"end\":{\"line\":230,\"column\":8}},{\"start\":{\"line\":230,\"column\":8},\"end\":{\"line\":230,\"column\":8}}]},\"39\":{\"line\":233,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":233,\"column\":8},\"end\":{\"line\":233,\"column\":8}},{\"start\":{\"line\":233,\"column\":8},\"end\":{\"line\":233,\"column\":8}}]},\"40\":{\"line\":236,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":236,\"column\":8},\"end\":{\"line\":236,\"column\":8}},{\"start\":{\"line\":236,\"column\":8},\"end\":{\"line\":236,\"column\":8}}]},\"41\":{\"line\":241,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":241,\"column\":8},\"end\":{\"line\":241,\"column\":8}},{\"start\":{\"line\":241,\"column\":8},\"end\":{\"line\":241,\"column\":8}}]},\"42\":{\"line\":241,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":241,\"column\":12},\"end\":{\"line\":241,\"column\":22}},{\"start\":{\"line\":241,\"column\":26},\"end\":{\"line\":241,\"column\":69}}]},\"43\":{\"line\":251,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":251,\"column\":12},\"end\":{\"line\":251,\"column\":12}},{\"start\":{\"line\":251,\"column\":12},\"end\":{\"line\":251,\"column\":12}}]}}};\n}\n__cov_0MjpvFxcVY1n9$6KwaReMA = __cov_0MjpvFxcVY1n9$6KwaReMA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientModelStore.ts'];\n__cov_0MjpvFxcVY1n9$6KwaReMA.s['1']++;exports.__esModule=true;__cov_0MjpvFxcVY1n9$6KwaReMA.s['2']++;var Attribute_1=require('./Attribute');__cov_0MjpvFxcVY1n9$6KwaReMA.s['3']++;var ChangeAttributeMetadataCommand_1=require('./ChangeAttributeMetadataCommand');__cov_0MjpvFxcVY1n9$6KwaReMA.s['4']++;var CreatePresentationModelCommand_1=require('./CreatePresentationModelCommand');__cov_0MjpvFxcVY1n9$6KwaReMA.s['5']++;var DeletedAllPresentationModelsOfTypeNotification_1=require('./DeletedAllPresentationModelsOfTypeNotification');__cov_0MjpvFxcVY1n9$6KwaReMA.s['6']++;var DeletedPresentationModelNotification_1=require('./DeletedPresentationModelNotification');__cov_0MjpvFxcVY1n9$6KwaReMA.s['7']++;var EventBus_1=require('./EventBus');__cov_0MjpvFxcVY1n9$6KwaReMA.s['8']++;var ValueChangedCommand_1=require('./ValueChangedCommand');__cov_0MjpvFxcVY1n9$6KwaReMA.s['9']++;var Type;__cov_0MjpvFxcVY1n9$6KwaReMA.s['10']++;(function(Type){__cov_0MjpvFxcVY1n9$6KwaReMA.f['1']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['11']++;Type[Type['ADDED']='ADDED']='ADDED';__cov_0MjpvFxcVY1n9$6KwaReMA.s['12']++;Type[Type['REMOVED']='REMOVED']='REMOVED';}(Type=(__cov_0MjpvFxcVY1n9$6KwaReMA.b['1'][0]++,exports.Type)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['1'][1]++,exports.Type={})));__cov_0MjpvFxcVY1n9$6KwaReMA.s['13']++;var ClientModelStore=function(){__cov_0MjpvFxcVY1n9$6KwaReMA.f['2']++;function ClientModelStore(clientDolphin){__cov_0MjpvFxcVY1n9$6KwaReMA.f['3']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['15']++;this.clientDolphin=clientDolphin;__cov_0MjpvFxcVY1n9$6KwaReMA.s['16']++;this.presentationModels=new Map();__cov_0MjpvFxcVY1n9$6KwaReMA.s['17']++;this.presentationModelsPerType=new Map();__cov_0MjpvFxcVY1n9$6KwaReMA.s['18']++;this.attributesPerId=new Map();__cov_0MjpvFxcVY1n9$6KwaReMA.s['19']++;this.attributesPerQualifier=new Map();__cov_0MjpvFxcVY1n9$6KwaReMA.s['20']++;this.modelStoreChangeBus=new EventBus_1['default']();}__cov_0MjpvFxcVY1n9$6KwaReMA.s['21']++;ClientModelStore.prototype.getClientDolphin=function(){__cov_0MjpvFxcVY1n9$6KwaReMA.f['4']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['22']++;return this.clientDolphin;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['23']++;ClientModelStore.prototype.registerModel=function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['5']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['24']++;var _this=this;__cov_0MjpvFxcVY1n9$6KwaReMA.s['25']++;if(model.clientSideOnly){__cov_0MjpvFxcVY1n9$6KwaReMA.b['2'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['26']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['2'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['27']++;var connector=this.clientDolphin.getClientConnector();__cov_0MjpvFxcVY1n9$6KwaReMA.s['28']++;var createPMCommand=new CreatePresentationModelCommand_1['default'](model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['29']++;connector.send(createPMCommand,null);__cov_0MjpvFxcVY1n9$6KwaReMA.s['30']++;model.getAttributes().forEach(function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['6']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['31']++;_this.registerAttribute(attribute);});};__cov_0MjpvFxcVY1n9$6KwaReMA.s['32']++;ClientModelStore.prototype.registerAttribute=function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['7']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['33']++;var _this=this;__cov_0MjpvFxcVY1n9$6KwaReMA.s['34']++;this.addAttributeById(attribute);__cov_0MjpvFxcVY1n9$6KwaReMA.s['35']++;if(attribute.getQualifier()){__cov_0MjpvFxcVY1n9$6KwaReMA.b['3'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['36']++;this.addAttributeByQualifier(attribute);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['3'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['37']++;attribute.onValueChange(function(evt){__cov_0MjpvFxcVY1n9$6KwaReMA.f['8']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['38']++;var valueChangeCommand=new ValueChangedCommand_1['default'](attribute.id,evt.oldValue,evt.newValue);__cov_0MjpvFxcVY1n9$6KwaReMA.s['39']++;_this.clientDolphin.getClientConnector().send(valueChangeCommand,null);__cov_0MjpvFxcVY1n9$6KwaReMA.s['40']++;if(attribute.getQualifier()){__cov_0MjpvFxcVY1n9$6KwaReMA.b['4'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['41']++;var attrs=_this.findAttributesByFilter(function(attr){__cov_0MjpvFxcVY1n9$6KwaReMA.f['9']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['42']++;return(__cov_0MjpvFxcVY1n9$6KwaReMA.b['5'][0]++,attr!==attribute)&&(__cov_0MjpvFxcVY1n9$6KwaReMA.b['5'][1]++,attr.getQualifier()==attribute.getQualifier());});__cov_0MjpvFxcVY1n9$6KwaReMA.s['43']++;attrs.forEach(function(attr){__cov_0MjpvFxcVY1n9$6KwaReMA.f['10']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['44']++;attr.setValue(attribute.getValue());});}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['4'][1]++;}});__cov_0MjpvFxcVY1n9$6KwaReMA.s['45']++;attribute.onQualifierChange(function(evt){__cov_0MjpvFxcVY1n9$6KwaReMA.f['11']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['46']++;var changeAttrMetadataCmd=new ChangeAttributeMetadataCommand_1['default'](attribute.id,Attribute_1['default'].QUALIFIER_PROPERTY,evt.newValue);__cov_0MjpvFxcVY1n9$6KwaReMA.s['47']++;_this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd,null);});};__cov_0MjpvFxcVY1n9$6KwaReMA.s['48']++;ClientModelStore.prototype.add=function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['12']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['49']++;if(!model){__cov_0MjpvFxcVY1n9$6KwaReMA.b['6'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['50']++;return false;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['6'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['51']++;if(this.presentationModels.has(model.id)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['7'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['52']++;console.log('There already is a PM with id '+model.id);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['7'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['53']++;var added=false;__cov_0MjpvFxcVY1n9$6KwaReMA.s['54']++;if(!this.presentationModels.has(model.id)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['8'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['55']++;this.presentationModels.set(model.id,model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['56']++;this.addPresentationModelByType(model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['57']++;this.registerModel(model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['58']++;this.modelStoreChangeBus.trigger({'eventType':Type.ADDED,'clientPresentationModel':model});__cov_0MjpvFxcVY1n9$6KwaReMA.s['59']++;added=true;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['8'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['60']++;return added;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['61']++;ClientModelStore.prototype.remove=function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['13']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['62']++;var _this=this;__cov_0MjpvFxcVY1n9$6KwaReMA.s['63']++;if(!model){__cov_0MjpvFxcVY1n9$6KwaReMA.b['9'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['64']++;return false;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['9'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['65']++;var removed=false;__cov_0MjpvFxcVY1n9$6KwaReMA.s['66']++;if(this.presentationModels.has(model.id)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['10'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['67']++;this.removePresentationModelByType(model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['68']++;this.presentationModels['delete'](model.id);__cov_0MjpvFxcVY1n9$6KwaReMA.s['69']++;model.getAttributes().forEach(function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['14']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['70']++;_this.removeAttributeById(attribute);__cov_0MjpvFxcVY1n9$6KwaReMA.s['71']++;if(attribute.getQualifier()){__cov_0MjpvFxcVY1n9$6KwaReMA.b['11'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['72']++;_this.removeAttributeByQualifier(attribute);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['11'][1]++;}});__cov_0MjpvFxcVY1n9$6KwaReMA.s['73']++;this.modelStoreChangeBus.trigger({'eventType':Type.REMOVED,'clientPresentationModel':model});__cov_0MjpvFxcVY1n9$6KwaReMA.s['74']++;removed=true;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['10'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['75']++;return removed;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['76']++;ClientModelStore.prototype.findAttributesByFilter=function(filter){__cov_0MjpvFxcVY1n9$6KwaReMA.f['15']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['77']++;var matches=[];__cov_0MjpvFxcVY1n9$6KwaReMA.s['78']++;this.presentationModels.forEach(function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['16']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['79']++;model.getAttributes().forEach(function(attr){__cov_0MjpvFxcVY1n9$6KwaReMA.f['17']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['80']++;if(filter(attr)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['12'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['81']++;matches.push(attr);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['12'][1]++;}});});__cov_0MjpvFxcVY1n9$6KwaReMA.s['82']++;return matches;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['83']++;ClientModelStore.prototype.addPresentationModelByType=function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['18']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['84']++;if(!model){__cov_0MjpvFxcVY1n9$6KwaReMA.b['13'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['85']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['13'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['86']++;var type=model.presentationModelType;__cov_0MjpvFxcVY1n9$6KwaReMA.s['87']++;if(!type){__cov_0MjpvFxcVY1n9$6KwaReMA.b['14'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['88']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['14'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['89']++;var presentationModels=this.presentationModelsPerType.get(type);__cov_0MjpvFxcVY1n9$6KwaReMA.s['90']++;if(!presentationModels){__cov_0MjpvFxcVY1n9$6KwaReMA.b['15'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['91']++;presentationModels=[];__cov_0MjpvFxcVY1n9$6KwaReMA.s['92']++;this.presentationModelsPerType.set(type,presentationModels);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['15'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['93']++;if(!(presentationModels.indexOf(model)>-1)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['16'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['94']++;presentationModels.push(model);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['16'][1]++;}};__cov_0MjpvFxcVY1n9$6KwaReMA.s['95']++;ClientModelStore.prototype.removePresentationModelByType=function(model){__cov_0MjpvFxcVY1n9$6KwaReMA.f['19']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['96']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['18'][0]++,!model)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['18'][1]++,!model.presentationModelType)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['17'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['97']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['17'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['98']++;var presentationModels=this.presentationModelsPerType.get(model.presentationModelType);__cov_0MjpvFxcVY1n9$6KwaReMA.s['99']++;if(!presentationModels){__cov_0MjpvFxcVY1n9$6KwaReMA.b['19'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['100']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['19'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['101']++;if(presentationModels.length>-1){__cov_0MjpvFxcVY1n9$6KwaReMA.b['20'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['102']++;presentationModels.splice(presentationModels.indexOf(model),1);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['20'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['103']++;if(presentationModels.length===0){__cov_0MjpvFxcVY1n9$6KwaReMA.b['21'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['104']++;this.presentationModelsPerType['delete'](model.presentationModelType);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['21'][1]++;}};__cov_0MjpvFxcVY1n9$6KwaReMA.s['105']++;ClientModelStore.prototype.listPresentationModelIds=function(){__cov_0MjpvFxcVY1n9$6KwaReMA.f['20']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['106']++;var result=[];__cov_0MjpvFxcVY1n9$6KwaReMA.s['107']++;var iter=this.presentationModels.keys();__cov_0MjpvFxcVY1n9$6KwaReMA.s['108']++;var next=iter.next();__cov_0MjpvFxcVY1n9$6KwaReMA.s['109']++;while(!next.done){__cov_0MjpvFxcVY1n9$6KwaReMA.s['110']++;result.push(next.value);__cov_0MjpvFxcVY1n9$6KwaReMA.s['111']++;next=iter.next();}__cov_0MjpvFxcVY1n9$6KwaReMA.s['112']++;return result;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['113']++;ClientModelStore.prototype.listPresentationModels=function(){__cov_0MjpvFxcVY1n9$6KwaReMA.f['21']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['114']++;var result=[];__cov_0MjpvFxcVY1n9$6KwaReMA.s['115']++;var iter=this.presentationModels.values();__cov_0MjpvFxcVY1n9$6KwaReMA.s['116']++;var next=iter.next();__cov_0MjpvFxcVY1n9$6KwaReMA.s['117']++;while(!next.done){__cov_0MjpvFxcVY1n9$6KwaReMA.s['118']++;result.push(next.value);__cov_0MjpvFxcVY1n9$6KwaReMA.s['119']++;next=iter.next();}__cov_0MjpvFxcVY1n9$6KwaReMA.s['120']++;return result;};__cov_0MjpvFxcVY1n9$6KwaReMA.s['121']++;ClientModelStore.prototype.findPresentationModelById=function(id){__cov_0MjpvFxcVY1n9$6KwaReMA.f['22']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['122']++;return this.presentationModels.get(id);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['123']++;ClientModelStore.prototype.findAllPresentationModelByType=function(type){__cov_0MjpvFxcVY1n9$6KwaReMA.f['23']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['124']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['23'][0]++,!type)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['23'][1]++,!this.presentationModelsPerType.has(type))){__cov_0MjpvFxcVY1n9$6KwaReMA.b['22'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['125']++;return[];}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['22'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['126']++;return this.presentationModelsPerType.get(type).slice(0);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['127']++;ClientModelStore.prototype.deleteAllPresentationModelOfType=function(presentationModelType){__cov_0MjpvFxcVY1n9$6KwaReMA.f['24']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['128']++;var _this=this;__cov_0MjpvFxcVY1n9$6KwaReMA.s['129']++;var presentationModels=this.findAllPresentationModelByType(presentationModelType);__cov_0MjpvFxcVY1n9$6KwaReMA.s['130']++;presentationModels.forEach(function(pm){__cov_0MjpvFxcVY1n9$6KwaReMA.f['25']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['131']++;_this.deletePresentationModel(pm,false);});__cov_0MjpvFxcVY1n9$6KwaReMA.s['132']++;this.clientDolphin.getClientConnector().send(new DeletedAllPresentationModelsOfTypeNotification_1['default'](presentationModelType),undefined);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['133']++;ClientModelStore.prototype.deletePresentationModel=function(model,notify){__cov_0MjpvFxcVY1n9$6KwaReMA.f['26']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['134']++;if(!model){__cov_0MjpvFxcVY1n9$6KwaReMA.b['24'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['135']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['24'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['136']++;if(this.containsPresentationModel(model.id)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['25'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['137']++;this.remove(model);__cov_0MjpvFxcVY1n9$6KwaReMA.s['138']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['27'][0]++,!notify)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['27'][1]++,model.clientSideOnly)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['26'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['139']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['26'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['140']++;this.clientDolphin.getClientConnector().send(new DeletedPresentationModelNotification_1['default'](model.id),null);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['25'][1]++;}};__cov_0MjpvFxcVY1n9$6KwaReMA.s['141']++;ClientModelStore.prototype.containsPresentationModel=function(id){__cov_0MjpvFxcVY1n9$6KwaReMA.f['27']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['142']++;return this.presentationModels.has(id);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['143']++;ClientModelStore.prototype.addAttributeById=function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['28']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['144']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['29'][0]++,!attribute)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['29'][1]++,this.attributesPerId.has(attribute.id))){__cov_0MjpvFxcVY1n9$6KwaReMA.b['28'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['145']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['28'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['146']++;this.attributesPerId.set(attribute.id,attribute);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['147']++;ClientModelStore.prototype.removeAttributeById=function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['29']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['148']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['31'][0]++,!attribute)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['31'][1]++,!this.attributesPerId.has(attribute.id))){__cov_0MjpvFxcVY1n9$6KwaReMA.b['30'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['149']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['30'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['150']++;this.attributesPerId['delete'](attribute.id);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['151']++;ClientModelStore.prototype.findAttributeById=function(id){__cov_0MjpvFxcVY1n9$6KwaReMA.f['30']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['152']++;return this.attributesPerId.get(id);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['153']++;ClientModelStore.prototype.addAttributeByQualifier=function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['31']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['154']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['33'][0]++,!attribute)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['33'][1]++,!attribute.getQualifier())){__cov_0MjpvFxcVY1n9$6KwaReMA.b['32'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['155']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['32'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['156']++;var attributes=this.attributesPerQualifier.get(attribute.getQualifier());__cov_0MjpvFxcVY1n9$6KwaReMA.s['157']++;if(!attributes){__cov_0MjpvFxcVY1n9$6KwaReMA.b['34'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['158']++;attributes=[];__cov_0MjpvFxcVY1n9$6KwaReMA.s['159']++;this.attributesPerQualifier.set(attribute.getQualifier(),attributes);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['34'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['160']++;if(!(attributes.indexOf(attribute)>-1)){__cov_0MjpvFxcVY1n9$6KwaReMA.b['35'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['161']++;attributes.push(attribute);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['35'][1]++;}};__cov_0MjpvFxcVY1n9$6KwaReMA.s['162']++;ClientModelStore.prototype.removeAttributeByQualifier=function(attribute){__cov_0MjpvFxcVY1n9$6KwaReMA.f['32']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['163']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['37'][0]++,!attribute)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['37'][1]++,!attribute.getQualifier())){__cov_0MjpvFxcVY1n9$6KwaReMA.b['36'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['164']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['36'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['165']++;var attributes=this.attributesPerQualifier.get(attribute.getQualifier());__cov_0MjpvFxcVY1n9$6KwaReMA.s['166']++;if(!attributes){__cov_0MjpvFxcVY1n9$6KwaReMA.b['38'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['167']++;return;}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['38'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['168']++;if(attributes.length>-1){__cov_0MjpvFxcVY1n9$6KwaReMA.b['39'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['169']++;attributes.splice(attributes.indexOf(attribute),1);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['39'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['170']++;if(attributes.length===0){__cov_0MjpvFxcVY1n9$6KwaReMA.b['40'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['171']++;this.attributesPerQualifier['delete'](attribute.getQualifier());}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['40'][1]++;}};__cov_0MjpvFxcVY1n9$6KwaReMA.s['172']++;ClientModelStore.prototype.findAllAttributesByQualifier=function(qualifier){__cov_0MjpvFxcVY1n9$6KwaReMA.f['33']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['173']++;if((__cov_0MjpvFxcVY1n9$6KwaReMA.b['42'][0]++,!qualifier)||(__cov_0MjpvFxcVY1n9$6KwaReMA.b['42'][1]++,!this.attributesPerQualifier.has(qualifier))){__cov_0MjpvFxcVY1n9$6KwaReMA.b['41'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['174']++;return[];}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['41'][1]++;}__cov_0MjpvFxcVY1n9$6KwaReMA.s['175']++;return this.attributesPerQualifier.get(qualifier).slice(0);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['176']++;ClientModelStore.prototype.onModelStoreChange=function(eventHandler){__cov_0MjpvFxcVY1n9$6KwaReMA.f['34']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['177']++;this.modelStoreChangeBus.onEvent(eventHandler);};__cov_0MjpvFxcVY1n9$6KwaReMA.s['178']++;ClientModelStore.prototype.onModelStoreChangeForType=function(presentationModelType,eventHandler){__cov_0MjpvFxcVY1n9$6KwaReMA.f['35']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['179']++;this.modelStoreChangeBus.onEvent(function(pmStoreEvent){__cov_0MjpvFxcVY1n9$6KwaReMA.f['36']++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['180']++;if(pmStoreEvent.clientPresentationModel.presentationModelType==presentationModelType){__cov_0MjpvFxcVY1n9$6KwaReMA.b['43'][0]++;__cov_0MjpvFxcVY1n9$6KwaReMA.s['181']++;eventHandler(pmStoreEvent);}else{__cov_0MjpvFxcVY1n9$6KwaReMA.b['43'][1]++;}});};__cov_0MjpvFxcVY1n9$6KwaReMA.s['182']++;return ClientModelStore;}();__cov_0MjpvFxcVY1n9$6KwaReMA.s['183']++;exports.ClientModelStore=ClientModelStore;\n","\"use strict\";\nvar __cov_e7oERuE9_42XjbcvNQz_Qw = (Function('return this'))();\nif (!__cov_e7oERuE9_42XjbcvNQz_Qw.__coverage__) { __cov_e7oERuE9_42XjbcvNQz_Qw.__coverage__ = {}; }\n__cov_e7oERuE9_42XjbcvNQz_Qw = __cov_e7oERuE9_42XjbcvNQz_Qw.__coverage__;\nif (!(__cov_e7oERuE9_42XjbcvNQz_Qw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientPresentationModel.ts'])) {\n   __cov_e7oERuE9_42XjbcvNQz_Qw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientPresentationModel.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientPresentationModel.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":1,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0],\"13\":[0,0],\"14\":[0,0],\"15\":[0,0],\"16\":[0,0],\"17\":[0,0],\"18\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":31},\"end\":{\"line\":5,\"column\":43}}},\"2\":{\"name\":\"ClientPresentationModel\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":6,\"column\":64}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":23,\"loc\":{\"start\":{\"line\":23,\"column\":45},\"end\":{\"line\":23,\"column\":57}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":26,\"loc\":{\"start\":{\"line\":26,\"column\":37},\"end\":{\"line\":26,\"column\":58}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":33,\"loc\":{\"start\":{\"line\":33,\"column\":54},\"end\":{\"line\":33,\"column\":76}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":37,\"loc\":{\"start\":{\"line\":37,\"column\":27},\"end\":{\"line\":37,\"column\":43}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":41,\"loc\":{\"start\":{\"line\":41,\"column\":53},\"end\":{\"line\":41,\"column\":74}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":56,\"loc\":{\"start\":{\"line\":56,\"column\":32},\"end\":{\"line\":56,\"column\":47}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":60,\"loc\":{\"start\":{\"line\":60,\"column\":54},\"end\":{\"line\":60,\"column\":82}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":64,\"loc\":{\"start\":{\"line\":64,\"column\":54},\"end\":{\"line\":64,\"column\":66}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":67,\"loc\":{\"start\":{\"line\":67,\"column\":46},\"end\":{\"line\":67,\"column\":70}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":70,\"loc\":{\"start\":{\"line\":70,\"column\":72},\"end\":{\"line\":70,\"column\":96}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":74,\"loc\":{\"start\":{\"line\":74,\"column\":32},\"end\":{\"line\":74,\"column\":53}}},\"14\":{\"name\":\"(anonymous_14)\",\"line\":81,\"loc\":{\"start\":{\"line\":81,\"column\":68},\"end\":{\"line\":81,\"column\":92}}},\"15\":{\"name\":\"(anonymous_15)\",\"line\":91,\"loc\":{\"start\":{\"line\":91,\"column\":65},\"end\":{\"line\":91,\"column\":86}}},\"16\":{\"name\":\"(anonymous_16)\",\"line\":102,\"loc\":{\"start\":{\"line\":102,\"column\":58},\"end\":{\"line\":102,\"column\":72}}},\"17\":{\"name\":\"(anonymous_17)\",\"line\":113,\"loc\":{\"start\":{\"line\":113,\"column\":49},\"end\":{\"line\":113,\"column\":84}}},\"18\":{\"name\":\"(anonymous_18)\",\"line\":114,\"loc\":{\"start\":{\"line\":114,\"column\":32},\"end\":{\"line\":114,\"column\":59}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":39}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":39}},\"4\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":122,\"column\":5}},\"5\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":20,\"column\":5}},\"6\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":21}},\"7\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":59}},\"8\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":29}},\"9\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":36}},\"10\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":27}},\"11\":{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":17,\"column\":9}},\"12\":{\"start\":{\"line\":13,\"column\":12},\"end\":{\"line\":13,\"column\":25}},\"13\":{\"start\":{\"line\":16,\"column\":12},\"end\":{\"line\":16,\"column\":68}},\"14\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":54}},\"15\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":63}},\"16\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":31,\"column\":6}},\"17\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":83}},\"18\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":37}},\"19\":{\"start\":{\"line\":26,\"column\":8},\"end\":{\"line\":29,\"column\":11}},\"20\":{\"start\":{\"line\":27,\"column\":12},\"end\":{\"line\":27,\"column\":49}},\"21\":{\"start\":{\"line\":28,\"column\":12},\"end\":{\"line\":28,\"column\":47}},\"22\":{\"start\":{\"line\":30,\"column\":8},\"end\":{\"line\":30,\"column\":22}},\"23\":{\"start\":{\"line\":33,\"column\":4},\"end\":{\"line\":40,\"column\":6}},\"24\":{\"start\":{\"line\":34,\"column\":8},\"end\":{\"line\":34,\"column\":25}},\"25\":{\"start\":{\"line\":35,\"column\":8},\"end\":{\"line\":36,\"column\":19}},\"26\":{\"start\":{\"line\":36,\"column\":12},\"end\":{\"line\":36,\"column\":19}},\"27\":{\"start\":{\"line\":37,\"column\":8},\"end\":{\"line\":39,\"column\":11}},\"28\":{\"start\":{\"line\":38,\"column\":12},\"end\":{\"line\":38,\"column\":37}},\"29\":{\"start\":{\"line\":41,\"column\":4},\"end\":{\"line\":59,\"column\":6}},\"30\":{\"start\":{\"line\":42,\"column\":8},\"end\":{\"line\":42,\"column\":25}},\"31\":{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":45,\"column\":9}},\"32\":{\"start\":{\"line\":44,\"column\":12},\"end\":{\"line\":44,\"column\":19}},\"33\":{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":49,\"column\":9}},\"34\":{\"start\":{\"line\":47,\"column\":12},\"end\":{\"line\":48,\"column\":64}},\"35\":{\"start\":{\"line\":50,\"column\":8},\"end\":{\"line\":53,\"column\":9}},\"36\":{\"start\":{\"line\":51,\"column\":12},\"end\":{\"line\":52,\"column\":64}},\"37\":{\"start\":{\"line\":54,\"column\":8},\"end\":{\"line\":54,\"column\":45}},\"38\":{\"start\":{\"line\":55,\"column\":8},\"end\":{\"line\":55,\"column\":40}},\"39\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":58,\"column\":11}},\"40\":{\"start\":{\"line\":57,\"column\":12},\"end\":{\"line\":57,\"column\":56}},\"41\":{\"start\":{\"line\":60,\"column\":4},\"end\":{\"line\":62,\"column\":6}},\"42\":{\"start\":{\"line\":61,\"column\":8},\"end\":{\"line\":61,\"column\":50}},\"43\":{\"start\":{\"line\":64,\"column\":4},\"end\":{\"line\":66,\"column\":6}},\"44\":{\"start\":{\"line\":65,\"column\":8},\"end\":{\"line\":65,\"column\":40}},\"45\":{\"start\":{\"line\":67,\"column\":4},\"end\":{\"line\":69,\"column\":6}},\"46\":{\"start\":{\"line\":68,\"column\":8},\"end\":{\"line\":68,\"column\":62}},\"47\":{\"start\":{\"line\":70,\"column\":4},\"end\":{\"line\":80,\"column\":6}},\"48\":{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":71,\"column\":24}},\"49\":{\"start\":{\"line\":72,\"column\":8},\"end\":{\"line\":73,\"column\":24}},\"50\":{\"start\":{\"line\":73,\"column\":12},\"end\":{\"line\":73,\"column\":24}},\"51\":{\"start\":{\"line\":74,\"column\":8},\"end\":{\"line\":78,\"column\":11}},\"52\":{\"start\":{\"line\":75,\"column\":12},\"end\":{\"line\":77,\"column\":13}},\"53\":{\"start\":{\"line\":76,\"column\":16},\"end\":{\"line\":76,\"column\":39}},\"54\":{\"start\":{\"line\":79,\"column\":8},\"end\":{\"line\":79,\"column\":22}},\"55\":{\"start\":{\"line\":81,\"column\":4},\"end\":{\"line\":90,\"column\":6}},\"56\":{\"start\":{\"line\":82,\"column\":8},\"end\":{\"line\":83,\"column\":24}},\"57\":{\"start\":{\"line\":83,\"column\":12},\"end\":{\"line\":83,\"column\":24}},\"58\":{\"start\":{\"line\":84,\"column\":8},\"end\":{\"line\":88,\"column\":9}},\"59\":{\"start\":{\"line\":85,\"column\":12},\"end\":{\"line\":87,\"column\":13}},\"60\":{\"start\":{\"line\":86,\"column\":16},\"end\":{\"line\":86,\"column\":42}},\"61\":{\"start\":{\"line\":89,\"column\":8},\"end\":{\"line\":89,\"column\":20}},\"62\":{\"start\":{\"line\":91,\"column\":4},\"end\":{\"line\":101,\"column\":6}},\"63\":{\"start\":{\"line\":92,\"column\":8},\"end\":{\"line\":93,\"column\":24}},\"64\":{\"start\":{\"line\":93,\"column\":12},\"end\":{\"line\":93,\"column\":24}},\"65\":{\"start\":{\"line\":94,\"column\":8},\"end\":{\"line\":98,\"column\":9}},\"66\":{\"start\":{\"line\":95,\"column\":12},\"end\":{\"line\":97,\"column\":13}},\"67\":{\"start\":{\"line\":96,\"column\":16},\"end\":{\"line\":96,\"column\":42}},\"68\":{\"start\":{\"line\":100,\"column\":8},\"end\":{\"line\":100,\"column\":20}},\"69\":{\"start\":{\"line\":102,\"column\":4},\"end\":{\"line\":112,\"column\":6}},\"70\":{\"start\":{\"line\":103,\"column\":8},\"end\":{\"line\":104,\"column\":24}},\"71\":{\"start\":{\"line\":104,\"column\":12},\"end\":{\"line\":104,\"column\":24}},\"72\":{\"start\":{\"line\":105,\"column\":8},\"end\":{\"line\":109,\"column\":9}},\"73\":{\"start\":{\"line\":106,\"column\":12},\"end\":{\"line\":108,\"column\":13}},\"74\":{\"start\":{\"line\":107,\"column\":16},\"end\":{\"line\":107,\"column\":42}},\"75\":{\"start\":{\"line\":111,\"column\":8},\"end\":{\"line\":111,\"column\":20}},\"76\":{\"start\":{\"line\":113,\"column\":4},\"end\":{\"line\":120,\"column\":6}},\"77\":{\"start\":{\"line\":114,\"column\":8},\"end\":{\"line\":119,\"column\":11}},\"78\":{\"start\":{\"line\":115,\"column\":12},\"end\":{\"line\":115,\"column\":94}},\"79\":{\"start\":{\"line\":116,\"column\":12},\"end\":{\"line\":118,\"column\":13}},\"80\":{\"start\":{\"line\":117,\"column\":16},\"end\":{\"line\":117,\"column\":58}},\"81\":{\"start\":{\"line\":121,\"column\":4},\"end\":{\"line\":121,\"column\":35}},\"82\":{\"start\":{\"line\":123,\"column\":0},\"end\":{\"line\":123,\"column\":58}}},\"branchMap\":{\"1\":{\"line\":12,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":8}},{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":8}}]},\"2\":{\"line\":12,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":12,\"column\":12},\"end\":{\"line\":12,\"column\":37}},{\"start\":{\"line\":12,\"column\":41},\"end\":{\"line\":12,\"column\":51}}]},\"3\":{\"line\":35,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":35,\"column\":8},\"end\":{\"line\":35,\"column\":8}},{\"start\":{\"line\":35,\"column\":8},\"end\":{\"line\":35,\"column\":8}}]},\"4\":{\"line\":35,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":35,\"column\":12},\"end\":{\"line\":35,\"column\":23}},{\"start\":{\"line\":35,\"column\":27},\"end\":{\"line\":35,\"column\":48}}]},\"5\":{\"line\":43,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":8}},{\"start\":{\"line\":43,\"column\":8},\"end\":{\"line\":43,\"column\":8}}]},\"6\":{\"line\":43,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":43,\"column\":12},\"end\":{\"line\":43,\"column\":22}},{\"start\":{\"line\":43,\"column\":27},\"end\":{\"line\":43,\"column\":66}}]},\"7\":{\"line\":46,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":8}},{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":8}}]},\"8\":{\"line\":50,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":50,\"column\":8},\"end\":{\"line\":50,\"column\":8}},{\"start\":{\"line\":50,\"column\":8},\"end\":{\"line\":50,\"column\":8}}]},\"9\":{\"line\":50,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":50,\"column\":12},\"end\":{\"line\":50,\"column\":36}},{\"start\":{\"line\":50,\"column\":40},\"end\":{\"line\":50,\"column\":95}}]},\"10\":{\"line\":72,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":72,\"column\":8},\"end\":{\"line\":72,\"column\":8}},{\"start\":{\"line\":72,\"column\":8},\"end\":{\"line\":72,\"column\":8}}]},\"11\":{\"line\":75,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":75,\"column\":12},\"end\":{\"line\":75,\"column\":12}},{\"start\":{\"line\":75,\"column\":12},\"end\":{\"line\":75,\"column\":12}}]},\"12\":{\"line\":82,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":82,\"column\":8},\"end\":{\"line\":82,\"column\":8}},{\"start\":{\"line\":82,\"column\":8},\"end\":{\"line\":82,\"column\":8}}]},\"13\":{\"line\":85,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":85,\"column\":12},\"end\":{\"line\":85,\"column\":12}},{\"start\":{\"line\":85,\"column\":12},\"end\":{\"line\":85,\"column\":12}}]},\"14\":{\"line\":92,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":92,\"column\":8},\"end\":{\"line\":92,\"column\":8}},{\"start\":{\"line\":92,\"column\":8},\"end\":{\"line\":92,\"column\":8}}]},\"15\":{\"line\":95,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":95,\"column\":12},\"end\":{\"line\":95,\"column\":12}},{\"start\":{\"line\":95,\"column\":12},\"end\":{\"line\":95,\"column\":12}}]},\"16\":{\"line\":103,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":103,\"column\":8},\"end\":{\"line\":103,\"column\":8}},{\"start\":{\"line\":103,\"column\":8},\"end\":{\"line\":103,\"column\":8}}]},\"17\":{\"line\":106,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":106,\"column\":12},\"end\":{\"line\":106,\"column\":12}},{\"start\":{\"line\":106,\"column\":12},\"end\":{\"line\":106,\"column\":12}}]},\"18\":{\"line\":116,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":116,\"column\":12},\"end\":{\"line\":116,\"column\":12}},{\"start\":{\"line\":116,\"column\":12},\"end\":{\"line\":116,\"column\":12}}]}}};\n}\n__cov_e7oERuE9_42XjbcvNQz_Qw = __cov_e7oERuE9_42XjbcvNQz_Qw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ClientPresentationModel.ts'];\n__cov_e7oERuE9_42XjbcvNQz_Qw.s['1']++;exports.__esModule=true;__cov_e7oERuE9_42XjbcvNQz_Qw.s['2']++;var EventBus_1=require('./EventBus');__cov_e7oERuE9_42XjbcvNQz_Qw.s['3']++;var presentationModelInstanceCount=0;__cov_e7oERuE9_42XjbcvNQz_Qw.s['4']++;var ClientPresentationModel=function(){__cov_e7oERuE9_42XjbcvNQz_Qw.f['1']++;function ClientPresentationModel(id,presentationModelType){__cov_e7oERuE9_42XjbcvNQz_Qw.f['2']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['6']++;this.id=id;__cov_e7oERuE9_42XjbcvNQz_Qw.s['7']++;this.presentationModelType=presentationModelType;__cov_e7oERuE9_42XjbcvNQz_Qw.s['8']++;this.attributes=[];__cov_e7oERuE9_42XjbcvNQz_Qw.s['9']++;this.clientSideOnly=false;__cov_e7oERuE9_42XjbcvNQz_Qw.s['10']++;this.dirty=false;__cov_e7oERuE9_42XjbcvNQz_Qw.s['11']++;if((__cov_e7oERuE9_42XjbcvNQz_Qw.b['2'][0]++,typeof id!=='undefined')&&(__cov_e7oERuE9_42XjbcvNQz_Qw.b['2'][1]++,id!=null)){__cov_e7oERuE9_42XjbcvNQz_Qw.b['1'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['12']++;this.id=id;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['1'][1]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['13']++;this.id=(presentationModelInstanceCount++).toString();}__cov_e7oERuE9_42XjbcvNQz_Qw.s['14']++;this.invalidBus=new EventBus_1['default']();__cov_e7oERuE9_42XjbcvNQz_Qw.s['15']++;this.dirtyValueChangeBus=new EventBus_1['default']();}__cov_e7oERuE9_42XjbcvNQz_Qw.s['16']++;ClientPresentationModel.prototype.copy=function(){__cov_e7oERuE9_42XjbcvNQz_Qw.f['3']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['17']++;var result=new ClientPresentationModel(null,this.presentationModelType);__cov_e7oERuE9_42XjbcvNQz_Qw.s['18']++;result.clientSideOnly=true;__cov_e7oERuE9_42XjbcvNQz_Qw.s['19']++;this.getAttributes().forEach(function(attribute){__cov_e7oERuE9_42XjbcvNQz_Qw.f['4']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['20']++;var attributeCopy=attribute.copy();__cov_e7oERuE9_42XjbcvNQz_Qw.s['21']++;result.addAttribute(attributeCopy);});__cov_e7oERuE9_42XjbcvNQz_Qw.s['22']++;return result;};__cov_e7oERuE9_42XjbcvNQz_Qw.s['23']++;ClientPresentationModel.prototype.addAttributes=function(attributes){__cov_e7oERuE9_42XjbcvNQz_Qw.f['5']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['24']++;var _this=this;__cov_e7oERuE9_42XjbcvNQz_Qw.s['25']++;if((__cov_e7oERuE9_42XjbcvNQz_Qw.b['4'][0]++,!attributes)||(__cov_e7oERuE9_42XjbcvNQz_Qw.b['4'][1]++,attributes.length<1)){__cov_e7oERuE9_42XjbcvNQz_Qw.b['3'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['26']++;return;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['3'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['27']++;attributes.forEach(function(attr){__cov_e7oERuE9_42XjbcvNQz_Qw.f['6']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['28']++;_this.addAttribute(attr);});};__cov_e7oERuE9_42XjbcvNQz_Qw.s['29']++;ClientPresentationModel.prototype.addAttribute=function(attribute){__cov_e7oERuE9_42XjbcvNQz_Qw.f['7']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['30']++;var _this=this;__cov_e7oERuE9_42XjbcvNQz_Qw.s['31']++;if((__cov_e7oERuE9_42XjbcvNQz_Qw.b['6'][0]++,!attribute)||(__cov_e7oERuE9_42XjbcvNQz_Qw.b['6'][1]++,this.attributes.indexOf(attribute)>-1)){__cov_e7oERuE9_42XjbcvNQz_Qw.b['5'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['32']++;return;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['5'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['33']++;if(this.findAttributeByPropertyName(attribute.propertyName)){__cov_e7oERuE9_42XjbcvNQz_Qw.b['7'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['34']++;throw new Error('There already is an attribute with property name: '+attribute.propertyName+' in presentation model with id: '+this.id);}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['7'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['35']++;if((__cov_e7oERuE9_42XjbcvNQz_Qw.b['9'][0]++,attribute.getQualifier())&&(__cov_e7oERuE9_42XjbcvNQz_Qw.b['9'][1]++,this.findAttributeByQualifier(attribute.getQualifier()))){__cov_e7oERuE9_42XjbcvNQz_Qw.b['8'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['36']++;throw new Error('There already is an attribute with qualifier: '+attribute.getQualifier()+' in presentation model with id: '+this.id);}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['8'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['37']++;attribute.setPresentationModel(this);__cov_e7oERuE9_42XjbcvNQz_Qw.s['38']++;this.attributes.push(attribute);__cov_e7oERuE9_42XjbcvNQz_Qw.s['39']++;attribute.onValueChange(function(evt){__cov_e7oERuE9_42XjbcvNQz_Qw.f['8']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['40']++;_this.invalidBus.trigger({source:_this});});};__cov_e7oERuE9_42XjbcvNQz_Qw.s['41']++;ClientPresentationModel.prototype.onInvalidated=function(handleInvalidate){__cov_e7oERuE9_42XjbcvNQz_Qw.f['9']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['42']++;this.invalidBus.onEvent(handleInvalidate);};__cov_e7oERuE9_42XjbcvNQz_Qw.s['43']++;ClientPresentationModel.prototype.getAttributes=function(){__cov_e7oERuE9_42XjbcvNQz_Qw.f['10']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['44']++;return this.attributes.slice(0);};__cov_e7oERuE9_42XjbcvNQz_Qw.s['45']++;ClientPresentationModel.prototype.getAt=function(propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.f['11']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['46']++;return this.findAttributeByPropertyName(propertyName);};__cov_e7oERuE9_42XjbcvNQz_Qw.s['47']++;ClientPresentationModel.prototype.findAllAttributesByPropertyName=function(propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.f['12']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['48']++;var result=[];__cov_e7oERuE9_42XjbcvNQz_Qw.s['49']++;if(!propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.b['10'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['50']++;return null;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['10'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['51']++;this.attributes.forEach(function(attribute){__cov_e7oERuE9_42XjbcvNQz_Qw.f['13']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['52']++;if(attribute.propertyName==propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.b['11'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['53']++;result.push(attribute);}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['11'][1]++;}});__cov_e7oERuE9_42XjbcvNQz_Qw.s['54']++;return result;};__cov_e7oERuE9_42XjbcvNQz_Qw.s['55']++;ClientPresentationModel.prototype.findAttributeByPropertyName=function(propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.f['14']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['56']++;if(!propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.b['12'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['57']++;return null;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['12'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['58']++;for(var i=0;i<this.attributes.length;i++){__cov_e7oERuE9_42XjbcvNQz_Qw.s['59']++;if(this.attributes[i].propertyName==propertyName){__cov_e7oERuE9_42XjbcvNQz_Qw.b['13'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['60']++;return this.attributes[i];}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['13'][1]++;}}__cov_e7oERuE9_42XjbcvNQz_Qw.s['61']++;return null;};__cov_e7oERuE9_42XjbcvNQz_Qw.s['62']++;ClientPresentationModel.prototype.findAttributeByQualifier=function(qualifier){__cov_e7oERuE9_42XjbcvNQz_Qw.f['15']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['63']++;if(!qualifier){__cov_e7oERuE9_42XjbcvNQz_Qw.b['14'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['64']++;return null;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['14'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['65']++;for(var i=0;i<this.attributes.length;i++){__cov_e7oERuE9_42XjbcvNQz_Qw.s['66']++;if(this.attributes[i].getQualifier()==qualifier){__cov_e7oERuE9_42XjbcvNQz_Qw.b['15'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['67']++;return this.attributes[i];}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['15'][1]++;}};__cov_e7oERuE9_42XjbcvNQz_Qw.s['68']++;return null;};__cov_e7oERuE9_42XjbcvNQz_Qw.s['69']++;ClientPresentationModel.prototype.findAttributeById=function(id){__cov_e7oERuE9_42XjbcvNQz_Qw.f['16']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['70']++;if(!id){__cov_e7oERuE9_42XjbcvNQz_Qw.b['16'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['71']++;return null;}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['16'][1]++;}__cov_e7oERuE9_42XjbcvNQz_Qw.s['72']++;for(var i=0;i<this.attributes.length;i++){__cov_e7oERuE9_42XjbcvNQz_Qw.s['73']++;if(this.attributes[i].id==id){__cov_e7oERuE9_42XjbcvNQz_Qw.b['17'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['74']++;return this.attributes[i];}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['17'][1]++;}};__cov_e7oERuE9_42XjbcvNQz_Qw.s['75']++;return null;};__cov_e7oERuE9_42XjbcvNQz_Qw.s['76']++;ClientPresentationModel.prototype.syncWith=function(sourcePresentationModel){__cov_e7oERuE9_42XjbcvNQz_Qw.f['17']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['77']++;this.attributes.forEach(function(targetAttribute){__cov_e7oERuE9_42XjbcvNQz_Qw.f['18']++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['78']++;var sourceAttribute=sourcePresentationModel.getAt(targetAttribute.propertyName);__cov_e7oERuE9_42XjbcvNQz_Qw.s['79']++;if(sourceAttribute){__cov_e7oERuE9_42XjbcvNQz_Qw.b['18'][0]++;__cov_e7oERuE9_42XjbcvNQz_Qw.s['80']++;targetAttribute.syncWith(sourceAttribute);}else{__cov_e7oERuE9_42XjbcvNQz_Qw.b['18'][1]++;}});};__cov_e7oERuE9_42XjbcvNQz_Qw.s['81']++;return ClientPresentationModel;}();__cov_e7oERuE9_42XjbcvNQz_Qw.s['82']++;exports.ClientPresentationModel=ClientPresentationModel;\n","\"use strict\";\nvar __cov_XvJhEjy_OElyUfW$ELOyng = (Function('return this'))();\nif (!__cov_XvJhEjy_OElyUfW$ELOyng.__coverage__) { __cov_XvJhEjy_OElyUfW$ELOyng.__coverage__ = {}; }\n__cov_XvJhEjy_OElyUfW$ELOyng = __cov_XvJhEjy_OElyUfW$ELOyng.__coverage__;\nif (!(__cov_XvJhEjy_OElyUfW$ELOyng['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Codec.ts'])) {\n   __cov_XvJhEjy_OElyUfW$ELOyng['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Codec.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Codec.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":1,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0},\"b\":{\"1\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":3,\"loc\":{\"start\":{\"line\":3,\"column\":13},\"end\":{\"line\":3,\"column\":25}}},\"2\":{\"name\":\"Codec\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":4,\"column\":21}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":29},\"end\":{\"line\":6,\"column\":49}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":9,\"loc\":{\"start\":{\"line\":9,\"column\":29},\"end\":{\"line\":9,\"column\":52}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":18,\"column\":5}},\"3\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":5,\"column\":5}},\"4\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":8,\"column\":6}},\"5\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":40}},\"6\":{\"start\":{\"line\":9,\"column\":4},\"end\":{\"line\":16,\"column\":6}},\"7\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":15,\"column\":9}},\"8\":{\"start\":{\"line\":11,\"column\":12},\"end\":{\"line\":11,\"column\":43}},\"9\":{\"start\":{\"line\":14,\"column\":12},\"end\":{\"line\":14,\"column\":31}},\"10\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":17,\"column\":17}},\"11\":{\"start\":{\"line\":19,\"column\":0},\"end\":{\"line\":19,\"column\":27}}},\"branchMap\":{\"1\":{\"line\":10,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}},{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}}]}}};\n}\n__cov_XvJhEjy_OElyUfW$ELOyng = __cov_XvJhEjy_OElyUfW$ELOyng['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Codec.ts'];\n__cov_XvJhEjy_OElyUfW$ELOyng.s['1']++;exports.__esModule=true;__cov_XvJhEjy_OElyUfW$ELOyng.s['2']++;var Codec=function(){__cov_XvJhEjy_OElyUfW$ELOyng.f['1']++;function Codec(){__cov_XvJhEjy_OElyUfW$ELOyng.f['2']++;}__cov_XvJhEjy_OElyUfW$ELOyng.s['4']++;Codec.prototype.encode=function(commands){__cov_XvJhEjy_OElyUfW$ELOyng.f['3']++;__cov_XvJhEjy_OElyUfW$ELOyng.s['5']++;return JSON.stringify(commands);};__cov_XvJhEjy_OElyUfW$ELOyng.s['6']++;Codec.prototype.decode=function(transmitted){__cov_XvJhEjy_OElyUfW$ELOyng.f['4']++;__cov_XvJhEjy_OElyUfW$ELOyng.s['7']++;if(typeof transmitted=='string'){__cov_XvJhEjy_OElyUfW$ELOyng.b['1'][0]++;__cov_XvJhEjy_OElyUfW$ELOyng.s['8']++;return JSON.parse(transmitted);}else{__cov_XvJhEjy_OElyUfW$ELOyng.b['1'][1]++;__cov_XvJhEjy_OElyUfW$ELOyng.s['9']++;return transmitted;}};__cov_XvJhEjy_OElyUfW$ELOyng.s['10']++;return Codec;}();__cov_XvJhEjy_OElyUfW$ELOyng.s['11']++;exports['default']=Codec;\n","\"use strict\";\nvar __cov_i4BQMFOWQzVMTUcRnXoNMQ = (Function('return this'))();\nif (!__cov_i4BQMFOWQzVMTUcRnXoNMQ.__coverage__) { __cov_i4BQMFOWQzVMTUcRnXoNMQ.__coverage__ = {}; }\n__cov_i4BQMFOWQzVMTUcRnXoNMQ = __cov_i4BQMFOWQzVMTUcRnXoNMQ.__coverage__;\nif (!(__cov_i4BQMFOWQzVMTUcRnXoNMQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Command.ts'])) {\n   __cov_i4BQMFOWQzVMTUcRnXoNMQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Command.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Command.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":1,\"4\":0,\"5\":0,\"6\":0},\"b\":{},\"f\":{\"1\":0,\"2\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":3,\"loc\":{\"start\":{\"line\":3,\"column\":15},\"end\":{\"line\":3,\"column\":27}}},\"2\":{\"name\":\"Command\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":4,\"column\":23}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":8,\"column\":5}},\"3\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":6,\"column\":5}},\"4\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":41}},\"5\":{\"start\":{\"line\":7,\"column\":4},\"end\":{\"line\":7,\"column\":19}},\"6\":{\"start\":{\"line\":9,\"column\":0},\"end\":{\"line\":9,\"column\":29}}},\"branchMap\":{}};\n}\n__cov_i4BQMFOWQzVMTUcRnXoNMQ = __cov_i4BQMFOWQzVMTUcRnXoNMQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/Command.ts'];\n__cov_i4BQMFOWQzVMTUcRnXoNMQ.s['1']++;exports.__esModule=true;__cov_i4BQMFOWQzVMTUcRnXoNMQ.s['2']++;var Command=function(){__cov_i4BQMFOWQzVMTUcRnXoNMQ.f['1']++;function Command(){__cov_i4BQMFOWQzVMTUcRnXoNMQ.f['2']++;__cov_i4BQMFOWQzVMTUcRnXoNMQ.s['4']++;this.id='dolphin-core-command';}__cov_i4BQMFOWQzVMTUcRnXoNMQ.s['5']++;return Command;}();__cov_i4BQMFOWQzVMTUcRnXoNMQ.s['6']++;exports['default']=Command;\n","\"use strict\";\nvar __cov_eOxwnXh2Ykq$YpusZTnYfQ = (Function('return this'))();\nif (!__cov_eOxwnXh2Ykq$YpusZTnYfQ.__coverage__) { __cov_eOxwnXh2Ykq$YpusZTnYfQ.__coverage__ = {}; }\n__cov_eOxwnXh2Ykq$YpusZTnYfQ = __cov_eOxwnXh2Ykq$YpusZTnYfQ.__coverage__;\nif (!(__cov_eOxwnXh2Ykq$YpusZTnYfQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CommandBatcher.ts'])) {\n   __cov_eOxwnXh2Ykq$YpusZTnYfQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CommandBatcher.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CommandBatcher.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":1,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":1,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":24},\"end\":{\"line\":5,\"column\":36}}},\"2\":{\"name\":\"NoCommandBatcher\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":6,\"column\":32}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":39},\"end\":{\"line\":8,\"column\":56}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":15,\"loc\":{\"start\":{\"line\":15,\"column\":27},\"end\":{\"line\":15,\"column\":39}}},\"5\":{\"name\":\"BlindCommandBatcher\",\"line\":17,\"loc\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":17,\"column\":56}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":23,\"loc\":{\"start\":{\"line\":23,\"column\":42},\"end\":{\"line\":23,\"column\":59}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":61}},\"3\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":12,\"column\":5}},\"4\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":7,\"column\":5}},\"5\":{\"start\":{\"line\":8,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"6\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":31}},\"7\":{\"start\":{\"line\":11,\"column\":4},\"end\":{\"line\":11,\"column\":28}},\"8\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":44}},\"9\":{\"start\":{\"line\":15,\"column\":0},\"end\":{\"line\":59,\"column\":5}},\"10\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"11\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":51}},\"12\":{\"start\":{\"line\":18,\"column\":34},\"end\":{\"line\":18,\"column\":49}},\"13\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":59}},\"14\":{\"start\":{\"line\":19,\"column\":39},\"end\":{\"line\":19,\"column\":57}},\"15\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":31}},\"16\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":41}},\"17\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":57,\"column\":6}},\"18\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":23}},\"19\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":58}},\"20\":{\"start\":{\"line\":26,\"column\":8},\"end\":{\"line\":55,\"column\":9}},\"21\":{\"start\":{\"line\":27,\"column\":12},\"end\":{\"line\":27,\"column\":42}},\"22\":{\"start\":{\"line\":28,\"column\":12},\"end\":{\"line\":48,\"column\":13}},\"23\":{\"start\":{\"line\":29,\"column\":16},\"end\":{\"line\":29,\"column\":33}},\"24\":{\"start\":{\"line\":30,\"column\":16},\"end\":{\"line\":30,\"column\":47}},\"25\":{\"start\":{\"line\":31,\"column\":16},\"end\":{\"line\":38,\"column\":17}},\"26\":{\"start\":{\"line\":32,\"column\":20},\"end\":{\"line\":37,\"column\":21}},\"27\":{\"start\":{\"line\":33,\"column\":24},\"end\":{\"line\":33,\"column\":56}},\"28\":{\"start\":{\"line\":34,\"column\":24},\"end\":{\"line\":36,\"column\":25}},\"29\":{\"start\":{\"line\":35,\"column\":28},\"end\":{\"line\":35,\"column\":45}},\"30\":{\"start\":{\"line\":39,\"column\":16},\"end\":{\"line\":44,\"column\":17}},\"31\":{\"start\":{\"line\":40,\"column\":20},\"end\":{\"line\":40,\"column\":53}},\"32\":{\"start\":{\"line\":43,\"column\":20},\"end\":{\"line\":43,\"column\":42}},\"33\":{\"start\":{\"line\":47,\"column\":16},\"end\":{\"line\":47,\"column\":38}},\"34\":{\"start\":{\"line\":49,\"column\":12},\"end\":{\"line\":54,\"column\":13}},\"35\":{\"start\":{\"line\":53,\"column\":16},\"end\":{\"line\":53,\"column\":22}},\"36\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":21}},\"37\":{\"start\":{\"line\":58,\"column\":4},\"end\":{\"line\":58,\"column\":31}},\"38\":{\"start\":{\"line\":60,\"column\":0},\"end\":{\"line\":60,\"column\":50}}},\"branchMap\":{\"1\":{\"line\":18,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":8}},{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":8}}]},\"2\":{\"line\":19,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":8}},{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":8}}]},\"3\":{\"line\":28,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":28,\"column\":12},\"end\":{\"line\":28,\"column\":12}},{\"start\":{\"line\":28,\"column\":12},\"end\":{\"line\":28,\"column\":12}}]},\"4\":{\"line\":28,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":28,\"column\":16},\"end\":{\"line\":28,\"column\":28}},{\"start\":{\"line\":28,\"column\":32},\"end\":{\"line\":28,\"column\":93}},{\"start\":{\"line\":28,\"column\":98},\"end\":{\"line\":28,\"column\":116}}]},\"5\":{\"line\":31,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":31,\"column\":32},\"end\":{\"line\":31,\"column\":48}},{\"start\":{\"line\":31,\"column\":52},\"end\":{\"line\":31,\"column\":65}}]},\"6\":{\"line\":32,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":32,\"column\":20},\"end\":{\"line\":32,\"column\":20}},{\"start\":{\"line\":32,\"column\":20},\"end\":{\"line\":32,\"column\":20}}]},\"7\":{\"line\":34,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":34,\"column\":24},\"end\":{\"line\":34,\"column\":24}},{\"start\":{\"line\":34,\"column\":24},\"end\":{\"line\":34,\"column\":24}}]},\"8\":{\"line\":34,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":34,\"column\":28},\"end\":{\"line\":34,\"column\":70}},{\"start\":{\"line\":34,\"column\":74},\"end\":{\"line\":34,\"column\":110}}]},\"9\":{\"line\":39,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":39,\"column\":16},\"end\":{\"line\":39,\"column\":16}},{\"start\":{\"line\":39,\"column\":16},\"end\":{\"line\":39,\"column\":16}}]},\"10\":{\"line\":49,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":49,\"column\":12},\"end\":{\"line\":49,\"column\":12}},{\"start\":{\"line\":49,\"column\":12},\"end\":{\"line\":49,\"column\":12}}]},\"11\":{\"line\":49,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":49,\"column\":16},\"end\":{\"line\":49,\"column\":33}},{\"start\":{\"line\":50,\"column\":17},\"end\":{\"line\":50,\"column\":91}},{\"start\":{\"line\":51,\"column\":17},\"end\":{\"line\":51,\"column\":96}}]}}};\n}\n__cov_eOxwnXh2Ykq$YpusZTnYfQ = __cov_eOxwnXh2Ykq$YpusZTnYfQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CommandBatcher.ts'];\n__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['1']++;exports.__esModule=true;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['2']++;var ValueChangedCommand_1=require('./ValueChangedCommand');__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['3']++;var NoCommandBatcher=function(){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['1']++;function NoCommandBatcher(){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['2']++;}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['5']++;NoCommandBatcher.prototype.batch=function(queue){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['3']++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['6']++;return[queue.shift()];};__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['7']++;return NoCommandBatcher;}();__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['8']++;exports.NoCommandBatcher=NoCommandBatcher;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['9']++;var BlindCommandBatcher=function(){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['4']++;function BlindCommandBatcher(folding,maxBatchSize){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['5']++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['11']++;if(folding===void 0){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['1'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['12']++;folding=true;}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['1'][1]++;}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['13']++;if(maxBatchSize===void 0){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['2'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['14']++;maxBatchSize=50;}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['2'][1]++;}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['15']++;this.folding=folding;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['16']++;this.maxBatchSize=maxBatchSize;}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['17']++;BlindCommandBatcher.prototype.batch=function(queue){__cov_eOxwnXh2Ykq$YpusZTnYfQ.f['6']++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['18']++;var batch=[];__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['19']++;var n=Math.min(queue.length,this.maxBatchSize);__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['20']++;for(var counter=0;counter<n;counter++){__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['21']++;var candidate=queue.shift();__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['22']++;if((__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['4'][0]++,this.folding)&&(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['4'][1]++,candidate.command instanceof ValueChangedCommand_1['default'])&&(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['4'][2]++,!candidate.handler)){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['3'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['23']++;var found=null;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['24']++;var canCmd=candidate.command;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['25']++;for(var i=0;(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['5'][0]++,i<batch.length)&&(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['5'][1]++,found==null);i++){__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['26']++;if(batch[i].command instanceof ValueChangedCommand_1['default']){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['6'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['27']++;var batchCmd=batch[i].command;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['28']++;if((__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['8'][0]++,canCmd.attributeId==batchCmd.attributeId)&&(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['8'][1]++,batchCmd.newValue==canCmd.oldValue)){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['7'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['29']++;found=batchCmd;}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['7'][1]++;}}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['6'][1]++;}}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['30']++;if(found){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['9'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['31']++;found.newValue=canCmd.newValue;}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['9'][1]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['32']++;batch.push(candidate);}}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['3'][1]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['33']++;batch.push(candidate);}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['34']++;if((__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['11'][0]++,candidate.handler)||(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['11'][1]++,candidate.command['className']=='org.opendolphin.core.comm.NamedCommand')||(__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['11'][2]++,candidate.command['className']=='org.opendolphin.core.comm.EmptyNotification')){__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['10'][0]++;__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['35']++;break;}else{__cov_eOxwnXh2Ykq$YpusZTnYfQ.b['10'][1]++;}}__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['36']++;return batch;};__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['37']++;return BlindCommandBatcher;}();__cov_eOxwnXh2Ykq$YpusZTnYfQ.s['38']++;exports.BlindCommandBatcher=BlindCommandBatcher;\n","\"use strict\";\nvar __cov_sfm2OpQ47AXMHhLYmhqHQw = (Function('return this'))();\nif (!__cov_sfm2OpQ47AXMHhLYmhqHQw.__coverage__) { __cov_sfm2OpQ47AXMHhLYmhqHQw.__coverage__ = {}; }\n__cov_sfm2OpQ47AXMHhLYmhqHQw = __cov_sfm2OpQ47AXMHhLYmhqHQw.__coverage__;\nif (!(__cov_sfm2OpQ47AXMHhLYmhqHQw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CreatePresentationModelCommand.ts'])) {\n   __cov_sfm2OpQ47AXMHhLYmhqHQw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CreatePresentationModelCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CreatePresentationModelCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":38},\"end\":{\"line\":14,\"column\":56}}},\"7\":{\"name\":\"CreatePresentationModelCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":63}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":25,\"loc\":{\"start\":{\"line\":25,\"column\":50},\"end\":{\"line\":25,\"column\":66}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":36,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":54}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":34,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":30}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":37}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":45}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":85}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":42}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":63}},\"24\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":37}},\"25\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":32,\"column\":11}},\"26\":{\"start\":{\"line\":26,\"column\":12},\"end\":{\"line\":31,\"column\":15}},\"27\":{\"start\":{\"line\":33,\"column\":8},\"end\":{\"line\":33,\"column\":21}},\"28\":{\"start\":{\"line\":35,\"column\":4},\"end\":{\"line\":35,\"column\":42}},\"29\":{\"start\":{\"line\":37,\"column\":0},\"end\":{\"line\":37,\"column\":52}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_sfm2OpQ47AXMHhLYmhqHQw = __cov_sfm2OpQ47AXMHhLYmhqHQw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/CreatePresentationModelCommand.ts'];\n__cov_sfm2OpQ47AXMHhLYmhqHQw.s['1']++;var __extends=(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['1'][0]++,this)&&(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['1'][1]++,this.__extends)||(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['1'][2]++,function(){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['1']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['2']++;var extendStatics=(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['2'][0]++,Object.setPrototypeOf)||(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['2'][2]++,function(d,b){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['2']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['3']++;d.__proto__=b;})||(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['2'][3]++,function(d,b){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['3']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['4']++;for(var p in b){__cov_sfm2OpQ47AXMHhLYmhqHQw.s['5']++;if(b.hasOwnProperty(p)){__cov_sfm2OpQ47AXMHhLYmhqHQw.b['3'][0]++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['6']++;d[p]=b[p];}else{__cov_sfm2OpQ47AXMHhLYmhqHQw.b['3'][1]++;}}});__cov_sfm2OpQ47AXMHhLYmhqHQw.s['7']++;return function(d,b){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['4']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['8']++;extendStatics(d,b);function __(){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['5']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['10']++;this.constructor=d;}__cov_sfm2OpQ47AXMHhLYmhqHQw.s['11']++;d.prototype=b===null?(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['4'][0]++,Object.create(b)):(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_sfm2OpQ47AXMHhLYmhqHQw.s['12']++;exports.__esModule=true;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['13']++;var Command_1=require('./Command');__cov_sfm2OpQ47AXMHhLYmhqHQw.s['14']++;var CreatePresentationModelCommand=function(_super){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['6']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['15']++;__extends(CreatePresentationModelCommand,_super);function CreatePresentationModelCommand(presentationModel){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['7']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['17']++;var _this=(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['5'][0]++,_super.call(this))||(__cov_sfm2OpQ47AXMHhLYmhqHQw.b['5'][1]++,this);__cov_sfm2OpQ47AXMHhLYmhqHQw.s['18']++;_this.attributes=[];__cov_sfm2OpQ47AXMHhLYmhqHQw.s['19']++;_this.clientSideOnly=false;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['20']++;_this.id='CreatePresentationModel';__cov_sfm2OpQ47AXMHhLYmhqHQw.s['21']++;_this.className='org.opendolphin.core.comm.CreatePresentationModelCommand';__cov_sfm2OpQ47AXMHhLYmhqHQw.s['22']++;_this.pmId=presentationModel.id;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['23']++;_this.pmType=presentationModel.presentationModelType;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['24']++;var attrs=_this.attributes;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['25']++;presentationModel.getAttributes().forEach(function(attr){__cov_sfm2OpQ47AXMHhLYmhqHQw.f['8']++;__cov_sfm2OpQ47AXMHhLYmhqHQw.s['26']++;attrs.push({propertyName:attr.propertyName,id:attr.id,qualifier:attr.getQualifier(),value:attr.getValue()});});__cov_sfm2OpQ47AXMHhLYmhqHQw.s['27']++;return _this;}__cov_sfm2OpQ47AXMHhLYmhqHQw.s['28']++;return CreatePresentationModelCommand;}(Command_1['default']);__cov_sfm2OpQ47AXMHhLYmhqHQw.s['29']++;exports['default']=CreatePresentationModelCommand;\n","\"use strict\";\nvar __cov_h$dr9w$CPUlBYC$TyFFtLg = (Function('return this'))();\nif (!__cov_h$dr9w$CPUlBYC$TyFFtLg.__coverage__) { __cov_h$dr9w$CPUlBYC$TyFFtLg.__coverage__ = {}; }\n__cov_h$dr9w$CPUlBYC$TyFFtLg = __cov_h$dr9w$CPUlBYC$TyFFtLg.__coverage__;\nif (!(__cov_h$dr9w$CPUlBYC$TyFFtLg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DataCommand.ts'])) {\n   __cov_h$dr9w$CPUlBYC$TyFFtLg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DataCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DataCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":19},\"end\":{\"line\":14,\"column\":37}}},\"7\":{\"name\":\"DataCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":31}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":35}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":26}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":66}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":23}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":33}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_h$dr9w$CPUlBYC$TyFFtLg = __cov_h$dr9w$CPUlBYC$TyFFtLg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DataCommand.ts'];\n__cov_h$dr9w$CPUlBYC$TyFFtLg.s['1']++;var __extends=(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['1'][0]++,this)&&(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['1'][1]++,this.__extends)||(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['1'][2]++,function(){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['1']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['2']++;var extendStatics=(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['2'][0]++,Object.setPrototypeOf)||(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['2'][2]++,function(d,b){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['2']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['3']++;d.__proto__=b;})||(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['2'][3]++,function(d,b){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['3']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['4']++;for(var p in b){__cov_h$dr9w$CPUlBYC$TyFFtLg.s['5']++;if(b.hasOwnProperty(p)){__cov_h$dr9w$CPUlBYC$TyFFtLg.b['3'][0]++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['6']++;d[p]=b[p];}else{__cov_h$dr9w$CPUlBYC$TyFFtLg.b['3'][1]++;}}});__cov_h$dr9w$CPUlBYC$TyFFtLg.s['7']++;return function(d,b){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['4']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['8']++;extendStatics(d,b);function __(){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['5']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['10']++;this.constructor=d;}__cov_h$dr9w$CPUlBYC$TyFFtLg.s['11']++;d.prototype=b===null?(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['4'][0]++,Object.create(b)):(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_h$dr9w$CPUlBYC$TyFFtLg.s['12']++;exports.__esModule=true;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['13']++;var Command_1=require('./Command');__cov_h$dr9w$CPUlBYC$TyFFtLg.s['14']++;var DataCommand=function(_super){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['6']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['15']++;__extends(DataCommand,_super);function DataCommand(data){__cov_h$dr9w$CPUlBYC$TyFFtLg.f['7']++;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['17']++;var _this=(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['5'][0]++,_super.call(this))||(__cov_h$dr9w$CPUlBYC$TyFFtLg.b['5'][1]++,this);__cov_h$dr9w$CPUlBYC$TyFFtLg.s['18']++;_this.data=data;__cov_h$dr9w$CPUlBYC$TyFFtLg.s['19']++;_this.id='Data';__cov_h$dr9w$CPUlBYC$TyFFtLg.s['20']++;_this.className='org.opendolphin.core.comm.DataCommand';__cov_h$dr9w$CPUlBYC$TyFFtLg.s['21']++;return _this;}__cov_h$dr9w$CPUlBYC$TyFFtLg.s['22']++;return DataCommand;}(Command_1['default']);__cov_h$dr9w$CPUlBYC$TyFFtLg.s['23']++;exports['default']=DataCommand;\n","\"use strict\";\nvar __cov_izvP2PUXJpEuP5FMziwYqg = (Function('return this'))();\nif (!__cov_izvP2PUXJpEuP5FMziwYqg.__coverage__) { __cov_izvP2PUXJpEuP5FMziwYqg.__coverage__ = {}; }\n__cov_izvP2PUXJpEuP5FMziwYqg = __cov_izvP2PUXJpEuP5FMziwYqg.__coverage__;\nif (!(__cov_izvP2PUXJpEuP5FMziwYqg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeleteAllPresentationModelsOfTypeCommand.ts'])) {\n   __cov_izvP2PUXJpEuP5FMziwYqg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeleteAllPresentationModelsOfTypeCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeleteAllPresentationModelsOfTypeCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":48},\"end\":{\"line\":14,\"column\":66}}},\"7\":{\"name\":\"DeleteAllPresentationModelsOfTypeCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":62}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":64}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":30}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":55}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":95}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":52}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":62}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_izvP2PUXJpEuP5FMziwYqg = __cov_izvP2PUXJpEuP5FMziwYqg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeleteAllPresentationModelsOfTypeCommand.ts'];\n__cov_izvP2PUXJpEuP5FMziwYqg.s['1']++;var __extends=(__cov_izvP2PUXJpEuP5FMziwYqg.b['1'][0]++,this)&&(__cov_izvP2PUXJpEuP5FMziwYqg.b['1'][1]++,this.__extends)||(__cov_izvP2PUXJpEuP5FMziwYqg.b['1'][2]++,function(){__cov_izvP2PUXJpEuP5FMziwYqg.f['1']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['2']++;var extendStatics=(__cov_izvP2PUXJpEuP5FMziwYqg.b['2'][0]++,Object.setPrototypeOf)||(__cov_izvP2PUXJpEuP5FMziwYqg.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_izvP2PUXJpEuP5FMziwYqg.b['2'][2]++,function(d,b){__cov_izvP2PUXJpEuP5FMziwYqg.f['2']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['3']++;d.__proto__=b;})||(__cov_izvP2PUXJpEuP5FMziwYqg.b['2'][3]++,function(d,b){__cov_izvP2PUXJpEuP5FMziwYqg.f['3']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['4']++;for(var p in b){__cov_izvP2PUXJpEuP5FMziwYqg.s['5']++;if(b.hasOwnProperty(p)){__cov_izvP2PUXJpEuP5FMziwYqg.b['3'][0]++;__cov_izvP2PUXJpEuP5FMziwYqg.s['6']++;d[p]=b[p];}else{__cov_izvP2PUXJpEuP5FMziwYqg.b['3'][1]++;}}});__cov_izvP2PUXJpEuP5FMziwYqg.s['7']++;return function(d,b){__cov_izvP2PUXJpEuP5FMziwYqg.f['4']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['8']++;extendStatics(d,b);function __(){__cov_izvP2PUXJpEuP5FMziwYqg.f['5']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['10']++;this.constructor=d;}__cov_izvP2PUXJpEuP5FMziwYqg.s['11']++;d.prototype=b===null?(__cov_izvP2PUXJpEuP5FMziwYqg.b['4'][0]++,Object.create(b)):(__cov_izvP2PUXJpEuP5FMziwYqg.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_izvP2PUXJpEuP5FMziwYqg.s['12']++;exports.__esModule=true;__cov_izvP2PUXJpEuP5FMziwYqg.s['13']++;var Command_1=require('./Command');__cov_izvP2PUXJpEuP5FMziwYqg.s['14']++;var DeleteAllPresentationModelsOfTypeCommand=function(_super){__cov_izvP2PUXJpEuP5FMziwYqg.f['6']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['15']++;__extends(DeleteAllPresentationModelsOfTypeCommand,_super);function DeleteAllPresentationModelsOfTypeCommand(pmType){__cov_izvP2PUXJpEuP5FMziwYqg.f['7']++;__cov_izvP2PUXJpEuP5FMziwYqg.s['17']++;var _this=(__cov_izvP2PUXJpEuP5FMziwYqg.b['5'][0]++,_super.call(this))||(__cov_izvP2PUXJpEuP5FMziwYqg.b['5'][1]++,this);__cov_izvP2PUXJpEuP5FMziwYqg.s['18']++;_this.pmType=pmType;__cov_izvP2PUXJpEuP5FMziwYqg.s['19']++;_this.id='DeleteAllPresentationModelsOfType';__cov_izvP2PUXJpEuP5FMziwYqg.s['20']++;_this.className='org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand';__cov_izvP2PUXJpEuP5FMziwYqg.s['21']++;return _this;}__cov_izvP2PUXJpEuP5FMziwYqg.s['22']++;return DeleteAllPresentationModelsOfTypeCommand;}(Command_1['default']);__cov_izvP2PUXJpEuP5FMziwYqg.s['23']++;exports['default']=DeleteAllPresentationModelsOfTypeCommand;\n","\"use strict\";\nvar __cov_2TBXgWBRerpAhm$_EcYbtQ = (Function('return this'))();\nif (!__cov_2TBXgWBRerpAhm$_EcYbtQ.__coverage__) { __cov_2TBXgWBRerpAhm$_EcYbtQ.__coverage__ = {}; }\n__cov_2TBXgWBRerpAhm$_EcYbtQ = __cov_2TBXgWBRerpAhm$_EcYbtQ.__coverage__;\nif (!(__cov_2TBXgWBRerpAhm$_EcYbtQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletePresentationModelCommand.ts'])) {\n   __cov_2TBXgWBRerpAhm$_EcYbtQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletePresentationModelCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletePresentationModelCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":38},\"end\":{\"line\":14,\"column\":56}}},\"7\":{\"name\":\"DeletePresentationModelCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":50}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":54}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":45}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":85}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":42}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":52}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_2TBXgWBRerpAhm$_EcYbtQ = __cov_2TBXgWBRerpAhm$_EcYbtQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletePresentationModelCommand.ts'];\n__cov_2TBXgWBRerpAhm$_EcYbtQ.s['1']++;var __extends=(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['1'][0]++,this)&&(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['1'][1]++,this.__extends)||(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['1'][2]++,function(){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['1']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['2']++;var extendStatics=(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['2'][0]++,Object.setPrototypeOf)||(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['2'][2]++,function(d,b){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['2']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['3']++;d.__proto__=b;})||(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['2'][3]++,function(d,b){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['3']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['4']++;for(var p in b){__cov_2TBXgWBRerpAhm$_EcYbtQ.s['5']++;if(b.hasOwnProperty(p)){__cov_2TBXgWBRerpAhm$_EcYbtQ.b['3'][0]++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['6']++;d[p]=b[p];}else{__cov_2TBXgWBRerpAhm$_EcYbtQ.b['3'][1]++;}}});__cov_2TBXgWBRerpAhm$_EcYbtQ.s['7']++;return function(d,b){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['4']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['8']++;extendStatics(d,b);function __(){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['5']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['10']++;this.constructor=d;}__cov_2TBXgWBRerpAhm$_EcYbtQ.s['11']++;d.prototype=b===null?(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['4'][0]++,Object.create(b)):(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_2TBXgWBRerpAhm$_EcYbtQ.s['12']++;exports.__esModule=true;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['13']++;var Command_1=require('./Command');__cov_2TBXgWBRerpAhm$_EcYbtQ.s['14']++;var DeletePresentationModelCommand=function(_super){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['6']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['15']++;__extends(DeletePresentationModelCommand,_super);function DeletePresentationModelCommand(pmId){__cov_2TBXgWBRerpAhm$_EcYbtQ.f['7']++;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['17']++;var _this=(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['5'][0]++,_super.call(this))||(__cov_2TBXgWBRerpAhm$_EcYbtQ.b['5'][1]++,this);__cov_2TBXgWBRerpAhm$_EcYbtQ.s['18']++;_this.pmId=pmId;__cov_2TBXgWBRerpAhm$_EcYbtQ.s['19']++;_this.id='DeletePresentationModel';__cov_2TBXgWBRerpAhm$_EcYbtQ.s['20']++;_this.className='org.opendolphin.core.comm.DeletePresentationModelCommand';__cov_2TBXgWBRerpAhm$_EcYbtQ.s['21']++;return _this;}__cov_2TBXgWBRerpAhm$_EcYbtQ.s['22']++;return DeletePresentationModelCommand;}(Command_1['default']);__cov_2TBXgWBRerpAhm$_EcYbtQ.s['23']++;exports['default']=DeletePresentationModelCommand;\n","\"use strict\";\nvar __cov_du5NUL7r5gZHGqpDFPpJIA = (Function('return this'))();\nif (!__cov_du5NUL7r5gZHGqpDFPpJIA.__coverage__) { __cov_du5NUL7r5gZHGqpDFPpJIA.__coverage__ = {}; }\n__cov_du5NUL7r5gZHGqpDFPpJIA = __cov_du5NUL7r5gZHGqpDFPpJIA.__coverage__;\nif (!(__cov_du5NUL7r5gZHGqpDFPpJIA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedAllPresentationModelsOfTypeNotification.ts'])) {\n   __cov_du5NUL7r5gZHGqpDFPpJIA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedAllPresentationModelsOfTypeNotification.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedAllPresentationModelsOfTypeNotification.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":54},\"end\":{\"line\":14,\"column\":72}}},\"7\":{\"name\":\"DeletedAllPresentationModelsOfTypeNotification\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":68}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":70}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":30}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":56}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":101}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":58}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":68}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_du5NUL7r5gZHGqpDFPpJIA = __cov_du5NUL7r5gZHGqpDFPpJIA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedAllPresentationModelsOfTypeNotification.ts'];\n__cov_du5NUL7r5gZHGqpDFPpJIA.s['1']++;var __extends=(__cov_du5NUL7r5gZHGqpDFPpJIA.b['1'][0]++,this)&&(__cov_du5NUL7r5gZHGqpDFPpJIA.b['1'][1]++,this.__extends)||(__cov_du5NUL7r5gZHGqpDFPpJIA.b['1'][2]++,function(){__cov_du5NUL7r5gZHGqpDFPpJIA.f['1']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['2']++;var extendStatics=(__cov_du5NUL7r5gZHGqpDFPpJIA.b['2'][0]++,Object.setPrototypeOf)||(__cov_du5NUL7r5gZHGqpDFPpJIA.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_du5NUL7r5gZHGqpDFPpJIA.b['2'][2]++,function(d,b){__cov_du5NUL7r5gZHGqpDFPpJIA.f['2']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['3']++;d.__proto__=b;})||(__cov_du5NUL7r5gZHGqpDFPpJIA.b['2'][3]++,function(d,b){__cov_du5NUL7r5gZHGqpDFPpJIA.f['3']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['4']++;for(var p in b){__cov_du5NUL7r5gZHGqpDFPpJIA.s['5']++;if(b.hasOwnProperty(p)){__cov_du5NUL7r5gZHGqpDFPpJIA.b['3'][0]++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['6']++;d[p]=b[p];}else{__cov_du5NUL7r5gZHGqpDFPpJIA.b['3'][1]++;}}});__cov_du5NUL7r5gZHGqpDFPpJIA.s['7']++;return function(d,b){__cov_du5NUL7r5gZHGqpDFPpJIA.f['4']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['8']++;extendStatics(d,b);function __(){__cov_du5NUL7r5gZHGqpDFPpJIA.f['5']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['10']++;this.constructor=d;}__cov_du5NUL7r5gZHGqpDFPpJIA.s['11']++;d.prototype=b===null?(__cov_du5NUL7r5gZHGqpDFPpJIA.b['4'][0]++,Object.create(b)):(__cov_du5NUL7r5gZHGqpDFPpJIA.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_du5NUL7r5gZHGqpDFPpJIA.s['12']++;exports.__esModule=true;__cov_du5NUL7r5gZHGqpDFPpJIA.s['13']++;var Command_1=require('./Command');__cov_du5NUL7r5gZHGqpDFPpJIA.s['14']++;var DeletedAllPresentationModelsOfTypeNotification=function(_super){__cov_du5NUL7r5gZHGqpDFPpJIA.f['6']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['15']++;__extends(DeletedAllPresentationModelsOfTypeNotification,_super);function DeletedAllPresentationModelsOfTypeNotification(pmType){__cov_du5NUL7r5gZHGqpDFPpJIA.f['7']++;__cov_du5NUL7r5gZHGqpDFPpJIA.s['17']++;var _this=(__cov_du5NUL7r5gZHGqpDFPpJIA.b['5'][0]++,_super.call(this))||(__cov_du5NUL7r5gZHGqpDFPpJIA.b['5'][1]++,this);__cov_du5NUL7r5gZHGqpDFPpJIA.s['18']++;_this.pmType=pmType;__cov_du5NUL7r5gZHGqpDFPpJIA.s['19']++;_this.id='DeletedAllPresentationModelsOfType';__cov_du5NUL7r5gZHGqpDFPpJIA.s['20']++;_this.className='org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification';__cov_du5NUL7r5gZHGqpDFPpJIA.s['21']++;return _this;}__cov_du5NUL7r5gZHGqpDFPpJIA.s['22']++;return DeletedAllPresentationModelsOfTypeNotification;}(Command_1['default']);__cov_du5NUL7r5gZHGqpDFPpJIA.s['23']++;exports['default']=DeletedAllPresentationModelsOfTypeNotification;\n","\"use strict\";\nvar __cov_VYn2ly4Vl_cCL2Z7OsmN4Q = (Function('return this'))();\nif (!__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.__coverage__) { __cov_VYn2ly4Vl_cCL2Z7OsmN4Q.__coverage__ = {}; }\n__cov_VYn2ly4Vl_cCL2Z7OsmN4Q = __cov_VYn2ly4Vl_cCL2Z7OsmN4Q.__coverage__;\nif (!(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedPresentationModelNotification.ts'])) {\n   __cov_VYn2ly4Vl_cCL2Z7OsmN4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedPresentationModelNotification.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedPresentationModelNotification.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":44},\"end\":{\"line\":14,\"column\":62}}},\"7\":{\"name\":\"DeletedPresentationModelNotification\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":56}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":60}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":46}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":91}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":48}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":58}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_VYn2ly4Vl_cCL2Z7OsmN4Q = __cov_VYn2ly4Vl_cCL2Z7OsmN4Q['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DeletedPresentationModelNotification.ts'];\n__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['1']++;var __extends=(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['1'][0]++,this)&&(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['1'][1]++,this.__extends)||(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['1'][2]++,function(){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['1']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['2']++;var extendStatics=(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['2'][0]++,Object.setPrototypeOf)||(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['2'][2]++,function(d,b){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['2']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['3']++;d.__proto__=b;})||(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['2'][3]++,function(d,b){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['3']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['4']++;for(var p in b){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['5']++;if(b.hasOwnProperty(p)){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['3'][0]++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['6']++;d[p]=b[p];}else{__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['3'][1]++;}}});__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['7']++;return function(d,b){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['4']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['8']++;extendStatics(d,b);function __(){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['5']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['10']++;this.constructor=d;}__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['11']++;d.prototype=b===null?(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['4'][0]++,Object.create(b)):(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['12']++;exports.__esModule=true;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['13']++;var Command_1=require('./Command');__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['14']++;var DeletedPresentationModelNotification=function(_super){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['6']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['15']++;__extends(DeletedPresentationModelNotification,_super);function DeletedPresentationModelNotification(pmId){__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.f['7']++;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['17']++;var _this=(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['5'][0]++,_super.call(this))||(__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.b['5'][1]++,this);__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['18']++;_this.pmId=pmId;__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['19']++;_this.id='DeletedPresentationModel';__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['20']++;_this.className='org.opendolphin.core.comm.DeletedPresentationModelNotification';__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['21']++;return _this;}__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['22']++;return DeletedPresentationModelNotification;}(Command_1['default']);__cov_VYn2ly4Vl_cCL2Z7OsmN4Q.s['23']++;exports['default']=DeletedPresentationModelNotification;\n","\"use strict\";\nvar __cov_J3eMBCfLZk$KqEl5mA$sWQ = (Function('return this'))();\nif (!__cov_J3eMBCfLZk$KqEl5mA$sWQ.__coverage__) { __cov_J3eMBCfLZk$KqEl5mA$sWQ.__coverage__ = {}; }\n__cov_J3eMBCfLZk$KqEl5mA$sWQ = __cov_J3eMBCfLZk$KqEl5mA$sWQ.__coverage__;\nif (!(__cov_J3eMBCfLZk$KqEl5mA$sWQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DolphinBuilder.ts'])) {\n   __cov_J3eMBCfLZk$KqEl5mA$sWQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DolphinBuilder.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DolphinBuilder.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":1,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0},\"b\":{\"1\":[0,0],\"2\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":22},\"end\":{\"line\":8,\"column\":34}}},\"2\":{\"name\":\"DolphinBuilder\",\"line\":9,\"loc\":{\"start\":{\"line\":9,\"column\":4},\"end\":{\"line\":9,\"column\":30}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":15,\"loc\":{\"start\":{\"line\":15,\"column\":35},\"end\":{\"line\":15,\"column\":50}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":19,\"loc\":{\"start\":{\"line\":19,\"column\":37},\"end\":{\"line\":19,\"column\":54}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":23,\"loc\":{\"start\":{\"line\":23,\"column\":39},\"end\":{\"line\":23,\"column\":58}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":27,\"loc\":{\"start\":{\"line\":27,\"column\":44},\"end\":{\"line\":27,\"column\":68}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":31,\"loc\":{\"start\":{\"line\":31,\"column\":43},\"end\":{\"line\":31,\"column\":66}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":35,\"loc\":{\"start\":{\"line\":35,\"column\":44},\"end\":{\"line\":35,\"column\":68}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":39,\"loc\":{\"start\":{\"line\":39,\"column\":43},\"end\":{\"line\":39,\"column\":66}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":43,\"loc\":{\"start\":{\"line\":43,\"column\":37},\"end\":{\"line\":43,\"column\":49}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":53}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":49}},\"4\":{\"start\":{\"line\":5,\"column\":0},\"end\":{\"line\":5,\"column\":55}},\"5\":{\"start\":{\"line\":6,\"column\":0},\"end\":{\"line\":6,\"column\":53}},\"6\":{\"start\":{\"line\":7,\"column\":0},\"end\":{\"line\":7,\"column\":49}},\"7\":{\"start\":{\"line\":8,\"column\":0},\"end\":{\"line\":59,\"column\":5}},\"8\":{\"start\":{\"line\":9,\"column\":4},\"end\":{\"line\":14,\"column\":5}},\"9\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":28}},\"10\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":28}},\"11\":{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":32}},\"12\":{\"start\":{\"line\":13,\"column\":8},\"end\":{\"line\":13,\"column\":34}},\"13\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":18,\"column\":6}},\"14\":{\"start\":{\"line\":16,\"column\":8},\"end\":{\"line\":16,\"column\":24}},\"15\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":20}},\"16\":{\"start\":{\"line\":19,\"column\":4},\"end\":{\"line\":22,\"column\":6}},\"17\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":28}},\"18\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":20}},\"19\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":26,\"column\":6}},\"20\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":32}},\"21\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":20}},\"22\":{\"start\":{\"line\":27,\"column\":4},\"end\":{\"line\":30,\"column\":6}},\"23\":{\"start\":{\"line\":28,\"column\":8},\"end\":{\"line\":28,\"column\":42}},\"24\":{\"start\":{\"line\":29,\"column\":8},\"end\":{\"line\":29,\"column\":20}},\"25\":{\"start\":{\"line\":31,\"column\":4},\"end\":{\"line\":34,\"column\":6}},\"26\":{\"start\":{\"line\":32,\"column\":8},\"end\":{\"line\":32,\"column\":40}},\"27\":{\"start\":{\"line\":33,\"column\":8},\"end\":{\"line\":33,\"column\":20}},\"28\":{\"start\":{\"line\":35,\"column\":4},\"end\":{\"line\":38,\"column\":6}},\"29\":{\"start\":{\"line\":36,\"column\":8},\"end\":{\"line\":36,\"column\":42}},\"30\":{\"start\":{\"line\":37,\"column\":8},\"end\":{\"line\":37,\"column\":20}},\"31\":{\"start\":{\"line\":39,\"column\":4},\"end\":{\"line\":42,\"column\":6}},\"32\":{\"start\":{\"line\":40,\"column\":8},\"end\":{\"line\":40,\"column\":40}},\"33\":{\"start\":{\"line\":41,\"column\":8},\"end\":{\"line\":41,\"column\":20}},\"34\":{\"start\":{\"line\":43,\"column\":4},\"end\":{\"line\":57,\"column\":6}},\"35\":{\"start\":{\"line\":44,\"column\":8},\"end\":{\"line\":44,\"column\":44}},\"36\":{\"start\":{\"line\":45,\"column\":8},\"end\":{\"line\":45,\"column\":61}},\"37\":{\"start\":{\"line\":46,\"column\":8},\"end\":{\"line\":46,\"column\":24}},\"38\":{\"start\":{\"line\":47,\"column\":8},\"end\":{\"line\":52,\"column\":9}},\"39\":{\"start\":{\"line\":48,\"column\":12},\"end\":{\"line\":48,\"column\":150}},\"40\":{\"start\":{\"line\":51,\"column\":12},\"end\":{\"line\":51,\"column\":59}},\"41\":{\"start\":{\"line\":53,\"column\":8},\"end\":{\"line\":53,\"column\":143}},\"42\":{\"start\":{\"line\":54,\"column\":8},\"end\":{\"line\":54,\"column\":98}},\"43\":{\"start\":{\"line\":55,\"column\":8},\"end\":{\"line\":55,\"column\":49}},\"44\":{\"start\":{\"line\":56,\"column\":8},\"end\":{\"line\":56,\"column\":29}},\"45\":{\"start\":{\"line\":58,\"column\":4},\"end\":{\"line\":58,\"column\":26}},\"46\":{\"start\":{\"line\":60,\"column\":0},\"end\":{\"line\":60,\"column\":36}}},\"branchMap\":{\"1\":{\"line\":47,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":47,\"column\":8},\"end\":{\"line\":47,\"column\":8}},{\"start\":{\"line\":47,\"column\":8},\"end\":{\"line\":47,\"column\":8}}]},\"2\":{\"line\":47,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":47,\"column\":12},\"end\":{\"line\":47,\"column\":29}},{\"start\":{\"line\":47,\"column\":33},\"end\":{\"line\":47,\"column\":53}}]}}};\n}\n__cov_J3eMBCfLZk$KqEl5mA$sWQ = __cov_J3eMBCfLZk$KqEl5mA$sWQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/DolphinBuilder.ts'];\n__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['1']++;exports.__esModule=true;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['2']++;var ClientConnector_1=require('./ClientConnector');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['3']++;var ClientDolphin_1=require('./ClientDolphin');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['4']++;var ClientModelStore_1=require('./ClientModelStore');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['5']++;var HttpTransmitter_1=require('./HttpTransmitter');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['6']++;var NoTransmitter_1=require('./NoTransmitter');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['7']++;var DolphinBuilder=function(){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['1']++;function DolphinBuilder(){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['2']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['9']++;this.reset_=false;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['10']++;this.slackMS_=300;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['11']++;this.maxBatchSize_=50;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['12']++;this.supportCORS_=false;}__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['13']++;DolphinBuilder.prototype.url=function(url){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['3']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['14']++;this.url_=url;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['15']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['16']++;DolphinBuilder.prototype.reset=function(reset){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['4']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['17']++;this.reset_=reset;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['18']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['19']++;DolphinBuilder.prototype.slackMS=function(slackMS){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['5']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['20']++;this.slackMS_=slackMS;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['21']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['22']++;DolphinBuilder.prototype.maxBatchSize=function(maxBatchSize){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['6']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['23']++;this.maxBatchSize_=maxBatchSize;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['24']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['25']++;DolphinBuilder.prototype.supportCORS=function(supportCORS){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['7']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['26']++;this.supportCORS_=supportCORS;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['27']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['28']++;DolphinBuilder.prototype.errorHandler=function(errorHandler){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['8']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['29']++;this.errorHandler_=errorHandler;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['30']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['31']++;DolphinBuilder.prototype.headersInfo=function(headersInfo){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['9']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['32']++;this.headersInfo_=headersInfo;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['33']++;return this;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['34']++;DolphinBuilder.prototype.build=function(){__cov_J3eMBCfLZk$KqEl5mA$sWQ.f['10']++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['35']++;console.log('OpenDolphin js found');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['36']++;var clientDolphin=new ClientDolphin_1['default']();__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['37']++;var transmitter;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['38']++;if((__cov_J3eMBCfLZk$KqEl5mA$sWQ.b['2'][0]++,this.url_!=null)&&(__cov_J3eMBCfLZk$KqEl5mA$sWQ.b['2'][1]++,this.url_.length>0)){__cov_J3eMBCfLZk$KqEl5mA$sWQ.b['1'][0]++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['39']++;transmitter=new HttpTransmitter_1['default'](this.url_,this.reset_,'UTF-8',this.errorHandler_,this.supportCORS_,this.headersInfo_);}else{__cov_J3eMBCfLZk$KqEl5mA$sWQ.b['1'][1]++;__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['40']++;transmitter=new NoTransmitter_1['default']();}__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['41']++;clientDolphin.setClientConnector(new ClientConnector_1.ClientConnector(transmitter,clientDolphin,this.slackMS_,this.maxBatchSize_));__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['42']++;clientDolphin.setClientModelStore(new ClientModelStore_1.ClientModelStore(clientDolphin));__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['43']++;console.log('ClientDolphin initialized');__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['44']++;return clientDolphin;};__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['45']++;return DolphinBuilder;}();__cov_J3eMBCfLZk$KqEl5mA$sWQ.s['46']++;exports['default']=DolphinBuilder;\n","\"use strict\";\nvar __cov_xCJ_8IypMUK0viC0VwkCHw = (Function('return this'))();\nif (!__cov_xCJ_8IypMUK0viC0VwkCHw.__coverage__) { __cov_xCJ_8IypMUK0viC0VwkCHw.__coverage__ = {}; }\n__cov_xCJ_8IypMUK0viC0VwkCHw = __cov_xCJ_8IypMUK0viC0VwkCHw.__coverage__;\nif (!(__cov_xCJ_8IypMUK0viC0VwkCHw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EmptyNotification.ts'])) {\n   __cov_xCJ_8IypMUK0viC0VwkCHw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EmptyNotification.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EmptyNotification.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":25},\"end\":{\"line\":14,\"column\":43}}},\"7\":{\"name\":\"EmptyNotification\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":33}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":23,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":41}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":21,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":27}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":72}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":21}},\"21\":{\"start\":{\"line\":22,\"column\":4},\"end\":{\"line\":22,\"column\":29}},\"22\":{\"start\":{\"line\":24,\"column\":0},\"end\":{\"line\":24,\"column\":39}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_xCJ_8IypMUK0viC0VwkCHw = __cov_xCJ_8IypMUK0viC0VwkCHw['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EmptyNotification.ts'];\n__cov_xCJ_8IypMUK0viC0VwkCHw.s['1']++;var __extends=(__cov_xCJ_8IypMUK0viC0VwkCHw.b['1'][0]++,this)&&(__cov_xCJ_8IypMUK0viC0VwkCHw.b['1'][1]++,this.__extends)||(__cov_xCJ_8IypMUK0viC0VwkCHw.b['1'][2]++,function(){__cov_xCJ_8IypMUK0viC0VwkCHw.f['1']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['2']++;var extendStatics=(__cov_xCJ_8IypMUK0viC0VwkCHw.b['2'][0]++,Object.setPrototypeOf)||(__cov_xCJ_8IypMUK0viC0VwkCHw.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_xCJ_8IypMUK0viC0VwkCHw.b['2'][2]++,function(d,b){__cov_xCJ_8IypMUK0viC0VwkCHw.f['2']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['3']++;d.__proto__=b;})||(__cov_xCJ_8IypMUK0viC0VwkCHw.b['2'][3]++,function(d,b){__cov_xCJ_8IypMUK0viC0VwkCHw.f['3']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['4']++;for(var p in b){__cov_xCJ_8IypMUK0viC0VwkCHw.s['5']++;if(b.hasOwnProperty(p)){__cov_xCJ_8IypMUK0viC0VwkCHw.b['3'][0]++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['6']++;d[p]=b[p];}else{__cov_xCJ_8IypMUK0viC0VwkCHw.b['3'][1]++;}}});__cov_xCJ_8IypMUK0viC0VwkCHw.s['7']++;return function(d,b){__cov_xCJ_8IypMUK0viC0VwkCHw.f['4']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['8']++;extendStatics(d,b);function __(){__cov_xCJ_8IypMUK0viC0VwkCHw.f['5']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['10']++;this.constructor=d;}__cov_xCJ_8IypMUK0viC0VwkCHw.s['11']++;d.prototype=b===null?(__cov_xCJ_8IypMUK0viC0VwkCHw.b['4'][0]++,Object.create(b)):(__cov_xCJ_8IypMUK0viC0VwkCHw.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_xCJ_8IypMUK0viC0VwkCHw.s['12']++;exports.__esModule=true;__cov_xCJ_8IypMUK0viC0VwkCHw.s['13']++;var Command_1=require('./Command');__cov_xCJ_8IypMUK0viC0VwkCHw.s['14']++;var EmptyNotification=function(_super){__cov_xCJ_8IypMUK0viC0VwkCHw.f['6']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['15']++;__extends(EmptyNotification,_super);function EmptyNotification(){__cov_xCJ_8IypMUK0viC0VwkCHw.f['7']++;__cov_xCJ_8IypMUK0viC0VwkCHw.s['17']++;var _this=(__cov_xCJ_8IypMUK0viC0VwkCHw.b['5'][0]++,_super.call(this))||(__cov_xCJ_8IypMUK0viC0VwkCHw.b['5'][1]++,this);__cov_xCJ_8IypMUK0viC0VwkCHw.s['18']++;_this.id='Empty';__cov_xCJ_8IypMUK0viC0VwkCHw.s['19']++;_this.className='org.opendolphin.core.comm.EmptyNotification';__cov_xCJ_8IypMUK0viC0VwkCHw.s['20']++;return _this;}__cov_xCJ_8IypMUK0viC0VwkCHw.s['21']++;return EmptyNotification;}(Command_1['default']);__cov_xCJ_8IypMUK0viC0VwkCHw.s['22']++;exports['default']=EmptyNotification;\n","\"use strict\";\nvar __cov_bQ2OCZ0TJRGF62MBDeKY7g = (Function('return this'))();\nif (!__cov_bQ2OCZ0TJRGF62MBDeKY7g.__coverage__) { __cov_bQ2OCZ0TJRGF62MBDeKY7g.__coverage__ = {}; }\n__cov_bQ2OCZ0TJRGF62MBDeKY7g = __cov_bQ2OCZ0TJRGF62MBDeKY7g.__coverage__;\nif (!(__cov_bQ2OCZ0TJRGF62MBDeKY7g['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EventBus.ts'])) {\n   __cov_bQ2OCZ0TJRGF62MBDeKY7g['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EventBus.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EventBus.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":1,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0},\"b\":{},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":3,\"loc\":{\"start\":{\"line\":3,\"column\":16},\"end\":{\"line\":3,\"column\":28}}},\"2\":{\"name\":\"EventBus\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":4,\"column\":24}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":7,\"loc\":{\"start\":{\"line\":7,\"column\":33},\"end\":{\"line\":7,\"column\":57}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":10,\"loc\":{\"start\":{\"line\":10,\"column\":33},\"end\":{\"line\":10,\"column\":50}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":11,\"loc\":{\"start\":{\"line\":11,\"column\":35},\"end\":{\"line\":11,\"column\":53}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":14,\"column\":5}},\"3\":{\"start\":{\"line\":4,\"column\":4},\"end\":{\"line\":6,\"column\":5}},\"4\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":32}},\"5\":{\"start\":{\"line\":7,\"column\":4},\"end\":{\"line\":9,\"column\":6}},\"6\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":46}},\"7\":{\"start\":{\"line\":10,\"column\":4},\"end\":{\"line\":12,\"column\":6}},\"8\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":80}},\"9\":{\"start\":{\"line\":11,\"column\":55},\"end\":{\"line\":11,\"column\":76}},\"10\":{\"start\":{\"line\":13,\"column\":4},\"end\":{\"line\":13,\"column\":20}},\"11\":{\"start\":{\"line\":15,\"column\":0},\"end\":{\"line\":15,\"column\":30}}},\"branchMap\":{}};\n}\n__cov_bQ2OCZ0TJRGF62MBDeKY7g = __cov_bQ2OCZ0TJRGF62MBDeKY7g['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/EventBus.ts'];\n__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['1']++;exports.__esModule=true;__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['2']++;var EventBus=function(){__cov_bQ2OCZ0TJRGF62MBDeKY7g.f['1']++;function EventBus(){__cov_bQ2OCZ0TJRGF62MBDeKY7g.f['2']++;__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['4']++;this.eventHandlers=[];}__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['5']++;EventBus.prototype.onEvent=function(eventHandler){__cov_bQ2OCZ0TJRGF62MBDeKY7g.f['3']++;__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['6']++;this.eventHandlers.push(eventHandler);};__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['7']++;EventBus.prototype.trigger=function(event){__cov_bQ2OCZ0TJRGF62MBDeKY7g.f['4']++;__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['8']++;this.eventHandlers.forEach(function(handle){__cov_bQ2OCZ0TJRGF62MBDeKY7g.f['5']++;__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['9']++;return handle(event);});};__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['10']++;return EventBus;}();__cov_bQ2OCZ0TJRGF62MBDeKY7g.s['11']++;exports['default']=EventBus;\n","\"use strict\";\nvar __cov_TQW118OyAFQIymPABMHOOQ = (Function('return this'))();\nif (!__cov_TQW118OyAFQIymPABMHOOQ.__coverage__) { __cov_TQW118OyAFQIymPABMHOOQ.__coverage__ = {}; }\n__cov_TQW118OyAFQIymPABMHOOQ = __cov_TQW118OyAFQIymPABMHOOQ.__coverage__;\nif (!(__cov_TQW118OyAFQIymPABMHOOQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/GetPresentationModelCommand.ts'])) {\n   __cov_TQW118OyAFQIymPABMHOOQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/GetPresentationModelCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/GetPresentationModelCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":35},\"end\":{\"line\":14,\"column\":53}}},\"7\":{\"name\":\"GetPresentationModelCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":47}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":24,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":51}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":22,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":42}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":82}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":21}},\"22\":{\"start\":{\"line\":23,\"column\":4},\"end\":{\"line\":23,\"column\":39}},\"23\":{\"start\":{\"line\":25,\"column\":0},\"end\":{\"line\":25,\"column\":49}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_TQW118OyAFQIymPABMHOOQ = __cov_TQW118OyAFQIymPABMHOOQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/GetPresentationModelCommand.ts'];\n__cov_TQW118OyAFQIymPABMHOOQ.s['1']++;var __extends=(__cov_TQW118OyAFQIymPABMHOOQ.b['1'][0]++,this)&&(__cov_TQW118OyAFQIymPABMHOOQ.b['1'][1]++,this.__extends)||(__cov_TQW118OyAFQIymPABMHOOQ.b['1'][2]++,function(){__cov_TQW118OyAFQIymPABMHOOQ.f['1']++;__cov_TQW118OyAFQIymPABMHOOQ.s['2']++;var extendStatics=(__cov_TQW118OyAFQIymPABMHOOQ.b['2'][0]++,Object.setPrototypeOf)||(__cov_TQW118OyAFQIymPABMHOOQ.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_TQW118OyAFQIymPABMHOOQ.b['2'][2]++,function(d,b){__cov_TQW118OyAFQIymPABMHOOQ.f['2']++;__cov_TQW118OyAFQIymPABMHOOQ.s['3']++;d.__proto__=b;})||(__cov_TQW118OyAFQIymPABMHOOQ.b['2'][3]++,function(d,b){__cov_TQW118OyAFQIymPABMHOOQ.f['3']++;__cov_TQW118OyAFQIymPABMHOOQ.s['4']++;for(var p in b){__cov_TQW118OyAFQIymPABMHOOQ.s['5']++;if(b.hasOwnProperty(p)){__cov_TQW118OyAFQIymPABMHOOQ.b['3'][0]++;__cov_TQW118OyAFQIymPABMHOOQ.s['6']++;d[p]=b[p];}else{__cov_TQW118OyAFQIymPABMHOOQ.b['3'][1]++;}}});__cov_TQW118OyAFQIymPABMHOOQ.s['7']++;return function(d,b){__cov_TQW118OyAFQIymPABMHOOQ.f['4']++;__cov_TQW118OyAFQIymPABMHOOQ.s['8']++;extendStatics(d,b);function __(){__cov_TQW118OyAFQIymPABMHOOQ.f['5']++;__cov_TQW118OyAFQIymPABMHOOQ.s['10']++;this.constructor=d;}__cov_TQW118OyAFQIymPABMHOOQ.s['11']++;d.prototype=b===null?(__cov_TQW118OyAFQIymPABMHOOQ.b['4'][0]++,Object.create(b)):(__cov_TQW118OyAFQIymPABMHOOQ.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_TQW118OyAFQIymPABMHOOQ.s['12']++;exports.__esModule=true;__cov_TQW118OyAFQIymPABMHOOQ.s['13']++;var Command_1=require('./Command');__cov_TQW118OyAFQIymPABMHOOQ.s['14']++;var GetPresentationModelCommand=function(_super){__cov_TQW118OyAFQIymPABMHOOQ.f['6']++;__cov_TQW118OyAFQIymPABMHOOQ.s['15']++;__extends(GetPresentationModelCommand,_super);function GetPresentationModelCommand(pmId){__cov_TQW118OyAFQIymPABMHOOQ.f['7']++;__cov_TQW118OyAFQIymPABMHOOQ.s['17']++;var _this=(__cov_TQW118OyAFQIymPABMHOOQ.b['5'][0]++,_super.call(this))||(__cov_TQW118OyAFQIymPABMHOOQ.b['5'][1]++,this);__cov_TQW118OyAFQIymPABMHOOQ.s['18']++;_this.pmId=pmId;__cov_TQW118OyAFQIymPABMHOOQ.s['19']++;_this.id='GetPresentationModel';__cov_TQW118OyAFQIymPABMHOOQ.s['20']++;_this.className='org.opendolphin.core.comm.GetPresentationModelCommand';__cov_TQW118OyAFQIymPABMHOOQ.s['21']++;return _this;}__cov_TQW118OyAFQIymPABMHOOQ.s['22']++;return GetPresentationModelCommand;}(Command_1['default']);__cov_TQW118OyAFQIymPABMHOOQ.s['23']++;exports['default']=GetPresentationModelCommand;\n","\"use strict\";\nvar __cov_Q19HP751RRJdCKeH85GxAQ = (Function('return this'))();\nif (!__cov_Q19HP751RRJdCKeH85GxAQ.__coverage__) { __cov_Q19HP751RRJdCKeH85GxAQ.__coverage__ = {}; }\n__cov_Q19HP751RRJdCKeH85GxAQ = __cov_Q19HP751RRJdCKeH85GxAQ.__coverage__;\nif (!(__cov_Q19HP751RRJdCKeH85GxAQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/HttpTransmitter.ts'])) {\n   __cov_Q19HP751RRJdCKeH85GxAQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/HttpTransmitter.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/HttpTransmitter.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":1,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0],\"13\":[0,0],\"14\":[0,0],\"15\":[0,0],\"16\":[0,0],\"17\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":23},\"end\":{\"line\":4,\"column\":35}}},\"2\":{\"name\":\"HttpTransmitter\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":5,\"column\":90}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":36,\"loc\":{\"start\":{\"line\":36,\"column\":41},\"end\":{\"line\":36,\"column\":69}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":38,\"loc\":{\"start\":{\"line\":38,\"column\":28},\"end\":{\"line\":38,\"column\":43}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":42,\"loc\":{\"start\":{\"line\":42,\"column\":39},\"end\":{\"line\":42,\"column\":54}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":76,\"loc\":{\"start\":{\"line\":76,\"column\":43},\"end\":{\"line\":76,\"column\":62}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":85,\"loc\":{\"start\":{\"line\":85,\"column\":44},\"end\":{\"line\":85,\"column\":69}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":94,\"loc\":{\"start\":{\"line\":94,\"column\":39},\"end\":{\"line\":94,\"column\":58}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":100,\"loc\":{\"start\":{\"line\":100,\"column\":43},\"end\":{\"line\":100,\"column\":55}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":104,\"loc\":{\"start\":{\"line\":104,\"column\":38},\"end\":{\"line\":104,\"column\":64}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":106,\"loc\":{\"start\":{\"line\":106,\"column\":39},\"end\":{\"line\":106,\"column\":54}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":33}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":120,\"column\":5}},\"4\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":35,\"column\":5}},\"5\":{\"start\":{\"line\":6,\"column\":8},\"end\":{\"line\":6,\"column\":47}},\"6\":{\"start\":{\"line\":6,\"column\":32},\"end\":{\"line\":6,\"column\":45}},\"7\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":54}},\"8\":{\"start\":{\"line\":7,\"column\":34},\"end\":{\"line\":7,\"column\":52}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":61}},\"10\":{\"start\":{\"line\":8,\"column\":39},\"end\":{\"line\":8,\"column\":59}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":60}},\"12\":{\"start\":{\"line\":9,\"column\":38},\"end\":{\"line\":9,\"column\":58}},\"13\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":59}},\"14\":{\"start\":{\"line\":10,\"column\":38},\"end\":{\"line\":10,\"column\":57}},\"15\":{\"start\":{\"line\":11,\"column\":8},\"end\":{\"line\":11,\"column\":23}},\"16\":{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":31}},\"17\":{\"start\":{\"line\":13,\"column\":8},\"end\":{\"line\":16,\"column\":10}},\"18\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":41}},\"19\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":39}},\"20\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":39}},\"21\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":41}},\"22\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":40}},\"23\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":29,\"column\":9}},\"24\":{\"start\":{\"line\":23,\"column\":12},\"end\":{\"line\":26,\"column\":13}},\"25\":{\"start\":{\"line\":24,\"column\":16},\"end\":{\"line\":24,\"column\":49}},\"26\":{\"start\":{\"line\":25,\"column\":16},\"end\":{\"line\":25,\"column\":48}},\"27\":{\"start\":{\"line\":30,\"column\":8},\"end\":{\"line\":30,\"column\":46}},\"28\":{\"start\":{\"line\":31,\"column\":8},\"end\":{\"line\":34,\"column\":9}},\"29\":{\"start\":{\"line\":32,\"column\":12},\"end\":{\"line\":32,\"column\":121}},\"30\":{\"start\":{\"line\":33,\"column\":12},\"end\":{\"line\":33,\"column\":30}},\"31\":{\"start\":{\"line\":36,\"column\":4},\"end\":{\"line\":75,\"column\":6}},\"32\":{\"start\":{\"line\":37,\"column\":8},\"end\":{\"line\":37,\"column\":25}},\"33\":{\"start\":{\"line\":38,\"column\":8},\"end\":{\"line\":41,\"column\":10}},\"34\":{\"start\":{\"line\":39,\"column\":12},\"end\":{\"line\":39,\"column\":45}},\"35\":{\"start\":{\"line\":40,\"column\":12},\"end\":{\"line\":40,\"column\":23}},\"36\":{\"start\":{\"line\":42,\"column\":8},\"end\":{\"line\":68,\"column\":10}},\"37\":{\"start\":{\"line\":43,\"column\":12},\"end\":{\"line\":67,\"column\":13}},\"38\":{\"start\":{\"line\":44,\"column\":16},\"end\":{\"line\":66,\"column\":17}},\"39\":{\"start\":{\"line\":45,\"column\":20},\"end\":{\"line\":45,\"column\":63}},\"40\":{\"start\":{\"line\":46,\"column\":20},\"end\":{\"line\":61,\"column\":21}},\"41\":{\"start\":{\"line\":47,\"column\":24},\"end\":{\"line\":56,\"column\":25}},\"42\":{\"start\":{\"line\":48,\"column\":28},\"end\":{\"line\":48,\"column\":84}},\"43\":{\"start\":{\"line\":49,\"column\":28},\"end\":{\"line\":49,\"column\":53}},\"44\":{\"start\":{\"line\":52,\"column\":28},\"end\":{\"line\":52,\"column\":86}},\"45\":{\"start\":{\"line\":53,\"column\":28},\"end\":{\"line\":53,\"column\":82}},\"46\":{\"start\":{\"line\":54,\"column\":28},\"end\":{\"line\":54,\"column\":121}},\"47\":{\"start\":{\"line\":55,\"column\":28},\"end\":{\"line\":55,\"column\":39}},\"48\":{\"start\":{\"line\":59,\"column\":24},\"end\":{\"line\":59,\"column\":96}},\"49\":{\"start\":{\"line\":60,\"column\":24},\"end\":{\"line\":60,\"column\":35}},\"50\":{\"start\":{\"line\":64,\"column\":20},\"end\":{\"line\":64,\"column\":92}},\"51\":{\"start\":{\"line\":65,\"column\":20},\"end\":{\"line\":65,\"column\":31}},\"52\":{\"start\":{\"line\":69,\"column\":8},\"end\":{\"line\":69,\"column\":47}},\"53\":{\"start\":{\"line\":70,\"column\":8},\"end\":{\"line\":70,\"column\":35}},\"54\":{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":73,\"column\":9}},\"55\":{\"start\":{\"line\":72,\"column\":12},\"end\":{\"line\":72,\"column\":84}},\"56\":{\"start\":{\"line\":74,\"column\":8},\"end\":{\"line\":74,\"column\":52}},\"57\":{\"start\":{\"line\":76,\"column\":4},\"end\":{\"line\":84,\"column\":6}},\"58\":{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":83,\"column\":9}},\"59\":{\"start\":{\"line\":78,\"column\":12},\"end\":{\"line\":82,\"column\":13}},\"60\":{\"start\":{\"line\":79,\"column\":16},\"end\":{\"line\":81,\"column\":17}},\"61\":{\"start\":{\"line\":80,\"column\":20},\"end\":{\"line\":80,\"column\":69}},\"62\":{\"start\":{\"line\":85,\"column\":4},\"end\":{\"line\":93,\"column\":6}},\"63\":{\"start\":{\"line\":86,\"column\":8},\"end\":{\"line\":86,\"column\":103}},\"64\":{\"start\":{\"line\":87,\"column\":8},\"end\":{\"line\":92,\"column\":9}},\"65\":{\"start\":{\"line\":88,\"column\":12},\"end\":{\"line\":88,\"column\":42}},\"66\":{\"start\":{\"line\":91,\"column\":12},\"end\":{\"line\":91,\"column\":56}},\"67\":{\"start\":{\"line\":94,\"column\":4},\"end\":{\"line\":98,\"column\":6}},\"68\":{\"start\":{\"line\":95,\"column\":8},\"end\":{\"line\":95,\"column\":46}},\"69\":{\"start\":{\"line\":96,\"column\":8},\"end\":{\"line\":96,\"column\":34}},\"70\":{\"start\":{\"line\":97,\"column\":8},\"end\":{\"line\":97,\"column\":52}},\"71\":{\"start\":{\"line\":100,\"column\":4},\"end\":{\"line\":103,\"column\":6}},\"72\":{\"start\":{\"line\":101,\"column\":8},\"end\":{\"line\":101,\"column\":64}},\"73\":{\"start\":{\"line\":102,\"column\":8},\"end\":{\"line\":102,\"column\":25}},\"74\":{\"start\":{\"line\":104,\"column\":4},\"end\":{\"line\":118,\"column\":6}},\"75\":{\"start\":{\"line\":105,\"column\":8},\"end\":{\"line\":105,\"column\":25}},\"76\":{\"start\":{\"line\":106,\"column\":8},\"end\":{\"line\":115,\"column\":10}},\"77\":{\"start\":{\"line\":107,\"column\":12},\"end\":{\"line\":114,\"column\":13}},\"78\":{\"start\":{\"line\":108,\"column\":16},\"end\":{\"line\":113,\"column\":17}},\"79\":{\"start\":{\"line\":109,\"column\":20},\"end\":{\"line\":109,\"column\":47}},\"80\":{\"start\":{\"line\":112,\"column\":20},\"end\":{\"line\":112,\"column\":100}},\"81\":{\"start\":{\"line\":116,\"column\":8},\"end\":{\"line\":116,\"column\":63}},\"82\":{\"start\":{\"line\":117,\"column\":8},\"end\":{\"line\":117,\"column\":25}},\"83\":{\"start\":{\"line\":119,\"column\":4},\"end\":{\"line\":119,\"column\":27}},\"84\":{\"start\":{\"line\":121,\"column\":0},\"end\":{\"line\":121,\"column\":37}}},\"branchMap\":{\"1\":{\"line\":6,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":6,\"column\":8},\"end\":{\"line\":6,\"column\":8}},{\"start\":{\"line\":6,\"column\":8},\"end\":{\"line\":6,\"column\":8}}]},\"2\":{\"line\":7,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":8}},{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":8}}]},\"3\":{\"line\":8,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":8}},{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":8}}]},\"4\":{\"line\":9,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":8}},{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":8}}]},\"5\":{\"line\":10,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}},{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":8}}]},\"6\":{\"line\":22,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":8}},{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":8}}]},\"7\":{\"line\":23,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":23,\"column\":12},\"end\":{\"line\":23,\"column\":12}},{\"start\":{\"line\":23,\"column\":12},\"end\":{\"line\":23,\"column\":12}}]},\"8\":{\"line\":31,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":31,\"column\":8},\"end\":{\"line\":31,\"column\":8}},{\"start\":{\"line\":31,\"column\":8},\"end\":{\"line\":31,\"column\":8}}]},\"9\":{\"line\":43,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":43,\"column\":12},\"end\":{\"line\":43,\"column\":12}},{\"start\":{\"line\":43,\"column\":12},\"end\":{\"line\":43,\"column\":12}}]},\"10\":{\"line\":44,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":44,\"column\":16},\"end\":{\"line\":44,\"column\":16}},{\"start\":{\"line\":44,\"column\":16},\"end\":{\"line\":44,\"column\":16}}]},\"11\":{\"line\":46,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":46,\"column\":20},\"end\":{\"line\":46,\"column\":20}},{\"start\":{\"line\":46,\"column\":20},\"end\":{\"line\":46,\"column\":20}}]},\"12\":{\"line\":71,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":71,\"column\":8}},{\"start\":{\"line\":71,\"column\":8},\"end\":{\"line\":71,\"column\":8}}]},\"13\":{\"line\":77,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}},{\"start\":{\"line\":77,\"column\":8},\"end\":{\"line\":77,\"column\":8}}]},\"14\":{\"line\":79,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":79,\"column\":16},\"end\":{\"line\":79,\"column\":16}},{\"start\":{\"line\":79,\"column\":16},\"end\":{\"line\":79,\"column\":16}}]},\"15\":{\"line\":87,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":87,\"column\":8},\"end\":{\"line\":87,\"column\":8}},{\"start\":{\"line\":87,\"column\":8},\"end\":{\"line\":87,\"column\":8}}]},\"16\":{\"line\":107,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":107,\"column\":12},\"end\":{\"line\":107,\"column\":12}},{\"start\":{\"line\":107,\"column\":12},\"end\":{\"line\":107,\"column\":12}}]},\"17\":{\"line\":108,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":108,\"column\":16},\"end\":{\"line\":108,\"column\":16}},{\"start\":{\"line\":108,\"column\":16},\"end\":{\"line\":108,\"column\":16}}]}}};\n}\n__cov_Q19HP751RRJdCKeH85GxAQ = __cov_Q19HP751RRJdCKeH85GxAQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/HttpTransmitter.ts'];\n__cov_Q19HP751RRJdCKeH85GxAQ.s['1']++;exports.__esModule=true;__cov_Q19HP751RRJdCKeH85GxAQ.s['2']++;var Codec_1=require('./Codec');__cov_Q19HP751RRJdCKeH85GxAQ.s['3']++;var HttpTransmitter=function(){__cov_Q19HP751RRJdCKeH85GxAQ.f['1']++;function HttpTransmitter(url,reset,charset,errorHandler,supportCORS,headersInfo){__cov_Q19HP751RRJdCKeH85GxAQ.f['2']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['5']++;if(reset===void 0){__cov_Q19HP751RRJdCKeH85GxAQ.b['1'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['6']++;reset=true;}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['1'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['7']++;if(charset===void 0){__cov_Q19HP751RRJdCKeH85GxAQ.b['2'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['8']++;charset='UTF-8';}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['2'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['9']++;if(errorHandler===void 0){__cov_Q19HP751RRJdCKeH85GxAQ.b['3'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['10']++;errorHandler=null;}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['3'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['11']++;if(supportCORS===void 0){__cov_Q19HP751RRJdCKeH85GxAQ.b['4'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['12']++;supportCORS=false;}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['4'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['13']++;if(headersInfo===void 0){__cov_Q19HP751RRJdCKeH85GxAQ.b['5'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['14']++;headersInfo=null;}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['5'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['15']++;this.url=url;__cov_Q19HP751RRJdCKeH85GxAQ.s['16']++;this.charset=charset;__cov_Q19HP751RRJdCKeH85GxAQ.s['17']++;this.HttpCodes={finished:4,success:200};__cov_Q19HP751RRJdCKeH85GxAQ.s['18']++;this.errorHandler=errorHandler;__cov_Q19HP751RRJdCKeH85GxAQ.s['19']++;this.supportCORS=supportCORS;__cov_Q19HP751RRJdCKeH85GxAQ.s['20']++;this.headersInfo=headersInfo;__cov_Q19HP751RRJdCKeH85GxAQ.s['21']++;this.http=new XMLHttpRequest();__cov_Q19HP751RRJdCKeH85GxAQ.s['22']++;this.sig=new XMLHttpRequest();__cov_Q19HP751RRJdCKeH85GxAQ.s['23']++;if(this.supportCORS){__cov_Q19HP751RRJdCKeH85GxAQ.b['6'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['24']++;if('withCredentials'in this.http){__cov_Q19HP751RRJdCKeH85GxAQ.b['7'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['25']++;this.http.withCredentials=true;__cov_Q19HP751RRJdCKeH85GxAQ.s['26']++;this.sig.withCredentials=true;}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['7'][1]++;}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['6'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['27']++;this.codec=new Codec_1['default']();__cov_Q19HP751RRJdCKeH85GxAQ.s['28']++;if(reset){__cov_Q19HP751RRJdCKeH85GxAQ.b['8'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['29']++;console.log('HttpTransmitter.invalidate() is deprecated. Use ClientDolphin.reset(OnSuccessHandler) instead');__cov_Q19HP751RRJdCKeH85GxAQ.s['30']++;this.invalidate();}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['8'][1]++;}}__cov_Q19HP751RRJdCKeH85GxAQ.s['31']++;HttpTransmitter.prototype.transmit=function(commands,onDone){__cov_Q19HP751RRJdCKeH85GxAQ.f['3']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['32']++;var _this=this;__cov_Q19HP751RRJdCKeH85GxAQ.s['33']++;this.http.onerror=function(evt){__cov_Q19HP751RRJdCKeH85GxAQ.f['4']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['34']++;_this.handleError('onerror','');__cov_Q19HP751RRJdCKeH85GxAQ.s['35']++;onDone([]);};__cov_Q19HP751RRJdCKeH85GxAQ.s['36']++;this.http.onreadystatechange=function(evt){__cov_Q19HP751RRJdCKeH85GxAQ.f['5']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['37']++;if(_this.http.readyState==_this.HttpCodes.finished){__cov_Q19HP751RRJdCKeH85GxAQ.b['9'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['38']++;if(_this.http.status==_this.HttpCodes.success){__cov_Q19HP751RRJdCKeH85GxAQ.b['10'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['39']++;var responseText=_this.http.responseText;__cov_Q19HP751RRJdCKeH85GxAQ.s['40']++;if(responseText.trim().length>0){__cov_Q19HP751RRJdCKeH85GxAQ.b['11'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['41']++;try{__cov_Q19HP751RRJdCKeH85GxAQ.s['42']++;var responseCommands=_this.codec.decode(responseText);__cov_Q19HP751RRJdCKeH85GxAQ.s['43']++;onDone(responseCommands);}catch(err){__cov_Q19HP751RRJdCKeH85GxAQ.s['44']++;console.log('Error occurred parsing responseText: ',err);__cov_Q19HP751RRJdCKeH85GxAQ.s['45']++;console.log('Incorrect responseText: ',responseText);__cov_Q19HP751RRJdCKeH85GxAQ.s['46']++;_this.handleError('application','HttpTransmitter: Incorrect responseText: '+responseText);__cov_Q19HP751RRJdCKeH85GxAQ.s['47']++;onDone([]);}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['11'][1]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['48']++;_this.handleError('application','HttpTransmitter: empty responseText');__cov_Q19HP751RRJdCKeH85GxAQ.s['49']++;onDone([]);}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['10'][1]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['50']++;_this.handleError('application','HttpTransmitter: HTTP Status != 200');__cov_Q19HP751RRJdCKeH85GxAQ.s['51']++;onDone([]);}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['9'][1]++;}};__cov_Q19HP751RRJdCKeH85GxAQ.s['52']++;this.http.open('POST',this.url,true);__cov_Q19HP751RRJdCKeH85GxAQ.s['53']++;this.setHeaders(this.http);__cov_Q19HP751RRJdCKeH85GxAQ.s['54']++;if('overrideMimeType'in this.http){__cov_Q19HP751RRJdCKeH85GxAQ.b['12'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['55']++;this.http.overrideMimeType('application/json; charset='+this.charset);}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['12'][1]++;}__cov_Q19HP751RRJdCKeH85GxAQ.s['56']++;this.http.send(this.codec.encode(commands));};__cov_Q19HP751RRJdCKeH85GxAQ.s['57']++;HttpTransmitter.prototype.setHeaders=function(httpReq){__cov_Q19HP751RRJdCKeH85GxAQ.f['6']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['58']++;if(this.headersInfo){__cov_Q19HP751RRJdCKeH85GxAQ.b['13'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['59']++;for(var i in this.headersInfo){__cov_Q19HP751RRJdCKeH85GxAQ.s['60']++;if(this.headersInfo.hasOwnProperty(i)){__cov_Q19HP751RRJdCKeH85GxAQ.b['14'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['61']++;httpReq.setRequestHeader(i,this.headersInfo[i]);}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['14'][1]++;}}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['13'][1]++;}};__cov_Q19HP751RRJdCKeH85GxAQ.s['62']++;HttpTransmitter.prototype.handleError=function(kind,message){__cov_Q19HP751RRJdCKeH85GxAQ.f['7']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['63']++;var errorEvent={kind:kind,url:this.url,httpStatus:this.http.status,message:message};__cov_Q19HP751RRJdCKeH85GxAQ.s['64']++;if(this.errorHandler){__cov_Q19HP751RRJdCKeH85GxAQ.b['15'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['65']++;this.errorHandler(errorEvent);}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['15'][1]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['66']++;console.log('Error occurred: ',errorEvent);}};__cov_Q19HP751RRJdCKeH85GxAQ.s['67']++;HttpTransmitter.prototype.signal=function(command){__cov_Q19HP751RRJdCKeH85GxAQ.f['8']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['68']++;this.sig.open('POST',this.url,true);__cov_Q19HP751RRJdCKeH85GxAQ.s['69']++;this.setHeaders(this.sig);__cov_Q19HP751RRJdCKeH85GxAQ.s['70']++;this.sig.send(this.codec.encode([command]));};__cov_Q19HP751RRJdCKeH85GxAQ.s['71']++;HttpTransmitter.prototype.invalidate=function(){__cov_Q19HP751RRJdCKeH85GxAQ.f['9']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['72']++;this.http.open('POST',this.url+'invalidate?',false);__cov_Q19HP751RRJdCKeH85GxAQ.s['73']++;this.http.send();};__cov_Q19HP751RRJdCKeH85GxAQ.s['74']++;HttpTransmitter.prototype.reset=function(successHandler){__cov_Q19HP751RRJdCKeH85GxAQ.f['10']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['75']++;var _this=this;__cov_Q19HP751RRJdCKeH85GxAQ.s['76']++;this.http.onreadystatechange=function(evt){__cov_Q19HP751RRJdCKeH85GxAQ.f['11']++;__cov_Q19HP751RRJdCKeH85GxAQ.s['77']++;if(_this.http.readyState==_this.HttpCodes.finished){__cov_Q19HP751RRJdCKeH85GxAQ.b['16'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['78']++;if(_this.http.status==_this.HttpCodes.success){__cov_Q19HP751RRJdCKeH85GxAQ.b['17'][0]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['79']++;successHandler.onSuccess();}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['17'][1]++;__cov_Q19HP751RRJdCKeH85GxAQ.s['80']++;_this.handleError('application','HttpTransmitter.reset(): HTTP Status != 200');}}else{__cov_Q19HP751RRJdCKeH85GxAQ.b['16'][1]++;}};__cov_Q19HP751RRJdCKeH85GxAQ.s['81']++;this.http.open('POST',this.url+'invalidate?',true);__cov_Q19HP751RRJdCKeH85GxAQ.s['82']++;this.http.send();};__cov_Q19HP751RRJdCKeH85GxAQ.s['83']++;return HttpTransmitter;}();__cov_Q19HP751RRJdCKeH85GxAQ.s['84']++;exports['default']=HttpTransmitter;\n","\"use strict\";\nvar __cov_FwlB1Kkc1v5L$0ygTodong = (Function('return this'))();\nif (!__cov_FwlB1Kkc1v5L$0ygTodong.__coverage__) { __cov_FwlB1Kkc1v5L$0ygTodong.__coverage__ = {}; }\n__cov_FwlB1Kkc1v5L$0ygTodong = __cov_FwlB1Kkc1v5L$0ygTodong.__coverage__;\nif (!(__cov_FwlB1Kkc1v5L$0ygTodong['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/InitializeAttributeCommand.ts'])) {\n   __cov_FwlB1Kkc1v5L$0ygTodong['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/InitializeAttributeCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/InitializeAttributeCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":34},\"end\":{\"line\":14,\"column\":52}}},\"7\":{\"name\":\"InitializeAttributeCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":89}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":28,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":50}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":26,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":30}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":42}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":36}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":34}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":41}},\"24\":{\"start\":{\"line\":24,\"column\":8},\"end\":{\"line\":24,\"column\":81}},\"25\":{\"start\":{\"line\":25,\"column\":8},\"end\":{\"line\":25,\"column\":21}},\"26\":{\"start\":{\"line\":27,\"column\":4},\"end\":{\"line\":27,\"column\":38}},\"27\":{\"start\":{\"line\":29,\"column\":0},\"end\":{\"line\":29,\"column\":48}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_FwlB1Kkc1v5L$0ygTodong = __cov_FwlB1Kkc1v5L$0ygTodong['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/InitializeAttributeCommand.ts'];\n__cov_FwlB1Kkc1v5L$0ygTodong.s['1']++;var __extends=(__cov_FwlB1Kkc1v5L$0ygTodong.b['1'][0]++,this)&&(__cov_FwlB1Kkc1v5L$0ygTodong.b['1'][1]++,this.__extends)||(__cov_FwlB1Kkc1v5L$0ygTodong.b['1'][2]++,function(){__cov_FwlB1Kkc1v5L$0ygTodong.f['1']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['2']++;var extendStatics=(__cov_FwlB1Kkc1v5L$0ygTodong.b['2'][0]++,Object.setPrototypeOf)||(__cov_FwlB1Kkc1v5L$0ygTodong.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_FwlB1Kkc1v5L$0ygTodong.b['2'][2]++,function(d,b){__cov_FwlB1Kkc1v5L$0ygTodong.f['2']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['3']++;d.__proto__=b;})||(__cov_FwlB1Kkc1v5L$0ygTodong.b['2'][3]++,function(d,b){__cov_FwlB1Kkc1v5L$0ygTodong.f['3']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['4']++;for(var p in b){__cov_FwlB1Kkc1v5L$0ygTodong.s['5']++;if(b.hasOwnProperty(p)){__cov_FwlB1Kkc1v5L$0ygTodong.b['3'][0]++;__cov_FwlB1Kkc1v5L$0ygTodong.s['6']++;d[p]=b[p];}else{__cov_FwlB1Kkc1v5L$0ygTodong.b['3'][1]++;}}});__cov_FwlB1Kkc1v5L$0ygTodong.s['7']++;return function(d,b){__cov_FwlB1Kkc1v5L$0ygTodong.f['4']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['8']++;extendStatics(d,b);function __(){__cov_FwlB1Kkc1v5L$0ygTodong.f['5']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['10']++;this.constructor=d;}__cov_FwlB1Kkc1v5L$0ygTodong.s['11']++;d.prototype=b===null?(__cov_FwlB1Kkc1v5L$0ygTodong.b['4'][0]++,Object.create(b)):(__cov_FwlB1Kkc1v5L$0ygTodong.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_FwlB1Kkc1v5L$0ygTodong.s['12']++;exports.__esModule=true;__cov_FwlB1Kkc1v5L$0ygTodong.s['13']++;var Command_1=require('./Command');__cov_FwlB1Kkc1v5L$0ygTodong.s['14']++;var InitializeAttributeCommand=function(_super){__cov_FwlB1Kkc1v5L$0ygTodong.f['6']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['15']++;__extends(InitializeAttributeCommand,_super);function InitializeAttributeCommand(pmId,pmType,propertyName,qualifier,newValue){__cov_FwlB1Kkc1v5L$0ygTodong.f['7']++;__cov_FwlB1Kkc1v5L$0ygTodong.s['17']++;var _this=(__cov_FwlB1Kkc1v5L$0ygTodong.b['5'][0]++,_super.call(this))||(__cov_FwlB1Kkc1v5L$0ygTodong.b['5'][1]++,this);__cov_FwlB1Kkc1v5L$0ygTodong.s['18']++;_this.pmId=pmId;__cov_FwlB1Kkc1v5L$0ygTodong.s['19']++;_this.pmType=pmType;__cov_FwlB1Kkc1v5L$0ygTodong.s['20']++;_this.propertyName=propertyName;__cov_FwlB1Kkc1v5L$0ygTodong.s['21']++;_this.qualifier=qualifier;__cov_FwlB1Kkc1v5L$0ygTodong.s['22']++;_this.newValue=newValue;__cov_FwlB1Kkc1v5L$0ygTodong.s['23']++;_this.id='InitializeAttribute';__cov_FwlB1Kkc1v5L$0ygTodong.s['24']++;_this.className='org.opendolphin.core.comm.InitializeAttributeCommand';__cov_FwlB1Kkc1v5L$0ygTodong.s['25']++;return _this;}__cov_FwlB1Kkc1v5L$0ygTodong.s['26']++;return InitializeAttributeCommand;}(Command_1['default']);__cov_FwlB1Kkc1v5L$0ygTodong.s['27']++;exports['default']=InitializeAttributeCommand;\n","\"use strict\";\nvar __cov_$n$D$o8Z$nG8ehM64wbLTA = (Function('return this'))();\nif (!__cov_$n$D$o8Z$nG8ehM64wbLTA.__coverage__) { __cov_$n$D$o8Z$nG8ehM64wbLTA.__coverage__ = {}; }\n__cov_$n$D$o8Z$nG8ehM64wbLTA = __cov_$n$D$o8Z$nG8ehM64wbLTA.__coverage__;\nif (!(__cov_$n$D$o8Z$nG8ehM64wbLTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NamedCommand.ts'])) {\n   __cov_$n$D$o8Z$nG8ehM64wbLTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NamedCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NamedCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":20},\"end\":{\"line\":14,\"column\":38}}},\"7\":{\"name\":\"NamedCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":32}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":23,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":36}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":21,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":24}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":67}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":21}},\"21\":{\"start\":{\"line\":22,\"column\":4},\"end\":{\"line\":22,\"column\":24}},\"22\":{\"start\":{\"line\":24,\"column\":0},\"end\":{\"line\":24,\"column\":34}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_$n$D$o8Z$nG8ehM64wbLTA = __cov_$n$D$o8Z$nG8ehM64wbLTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NamedCommand.ts'];\n__cov_$n$D$o8Z$nG8ehM64wbLTA.s['1']++;var __extends=(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['1'][0]++,this)&&(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['1'][1]++,this.__extends)||(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['1'][2]++,function(){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['1']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['2']++;var extendStatics=(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['2'][0]++,Object.setPrototypeOf)||(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['2'][2]++,function(d,b){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['2']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['3']++;d.__proto__=b;})||(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['2'][3]++,function(d,b){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['3']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['4']++;for(var p in b){__cov_$n$D$o8Z$nG8ehM64wbLTA.s['5']++;if(b.hasOwnProperty(p)){__cov_$n$D$o8Z$nG8ehM64wbLTA.b['3'][0]++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['6']++;d[p]=b[p];}else{__cov_$n$D$o8Z$nG8ehM64wbLTA.b['3'][1]++;}}});__cov_$n$D$o8Z$nG8ehM64wbLTA.s['7']++;return function(d,b){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['4']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['8']++;extendStatics(d,b);function __(){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['5']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['10']++;this.constructor=d;}__cov_$n$D$o8Z$nG8ehM64wbLTA.s['11']++;d.prototype=b===null?(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['4'][0]++,Object.create(b)):(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_$n$D$o8Z$nG8ehM64wbLTA.s['12']++;exports.__esModule=true;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['13']++;var Command_1=require('./Command');__cov_$n$D$o8Z$nG8ehM64wbLTA.s['14']++;var NamedCommand=function(_super){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['6']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['15']++;__extends(NamedCommand,_super);function NamedCommand(name){__cov_$n$D$o8Z$nG8ehM64wbLTA.f['7']++;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['17']++;var _this=(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['5'][0]++,_super.call(this))||(__cov_$n$D$o8Z$nG8ehM64wbLTA.b['5'][1]++,this);__cov_$n$D$o8Z$nG8ehM64wbLTA.s['18']++;_this.id=name;__cov_$n$D$o8Z$nG8ehM64wbLTA.s['19']++;_this.className='org.opendolphin.core.comm.NamedCommand';__cov_$n$D$o8Z$nG8ehM64wbLTA.s['20']++;return _this;}__cov_$n$D$o8Z$nG8ehM64wbLTA.s['21']++;return NamedCommand;}(Command_1['default']);__cov_$n$D$o8Z$nG8ehM64wbLTA.s['22']++;exports['default']=NamedCommand;\n","\"use strict\";\nvar __cov_W5V18lDlWfr5GxfaSMHdTA = (Function('return this'))();\nif (!__cov_W5V18lDlWfr5GxfaSMHdTA.__coverage__) { __cov_W5V18lDlWfr5GxfaSMHdTA.__coverage__ = {}; }\n__cov_W5V18lDlWfr5GxfaSMHdTA = __cov_W5V18lDlWfr5GxfaSMHdTA.__coverage__;\nif (!(__cov_W5V18lDlWfr5GxfaSMHdTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NoTransmitter.ts'])) {\n   __cov_W5V18lDlWfr5GxfaSMHdTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NoTransmitter.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NoTransmitter.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":1,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0},\"b\":{},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":7,\"loc\":{\"start\":{\"line\":7,\"column\":21},\"end\":{\"line\":7,\"column\":33}}},\"2\":{\"name\":\"NoTransmitter\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":4},\"end\":{\"line\":8,\"column\":29}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":10,\"loc\":{\"start\":{\"line\":10,\"column\":39},\"end\":{\"line\":10,\"column\":67}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":37},\"end\":{\"line\":14,\"column\":56}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":17,\"loc\":{\"start\":{\"line\":17,\"column\":36},\"end\":{\"line\":17,\"column\":62}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":26}},\"2\":{\"start\":{\"line\":7,\"column\":0},\"end\":{\"line\":21,\"column\":5}},\"3\":{\"start\":{\"line\":8,\"column\":4},\"end\":{\"line\":9,\"column\":5}},\"4\":{\"start\":{\"line\":10,\"column\":4},\"end\":{\"line\":13,\"column\":6}},\"5\":{\"start\":{\"line\":12,\"column\":8},\"end\":{\"line\":12,\"column\":19}},\"6\":{\"start\":{\"line\":14,\"column\":4},\"end\":{\"line\":16,\"column\":6}},\"7\":{\"start\":{\"line\":17,\"column\":4},\"end\":{\"line\":19,\"column\":6}},\"8\":{\"start\":{\"line\":20,\"column\":4},\"end\":{\"line\":20,\"column\":25}},\"9\":{\"start\":{\"line\":22,\"column\":0},\"end\":{\"line\":22,\"column\":35}}},\"branchMap\":{}};\n}\n__cov_W5V18lDlWfr5GxfaSMHdTA = __cov_W5V18lDlWfr5GxfaSMHdTA['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/NoTransmitter.ts'];\n__cov_W5V18lDlWfr5GxfaSMHdTA.s['1']++;exports.__esModule=true;__cov_W5V18lDlWfr5GxfaSMHdTA.s['2']++;var NoTransmitter=function(){__cov_W5V18lDlWfr5GxfaSMHdTA.f['1']++;function NoTransmitter(){__cov_W5V18lDlWfr5GxfaSMHdTA.f['2']++;}__cov_W5V18lDlWfr5GxfaSMHdTA.s['4']++;NoTransmitter.prototype.transmit=function(commands,onDone){__cov_W5V18lDlWfr5GxfaSMHdTA.f['3']++;__cov_W5V18lDlWfr5GxfaSMHdTA.s['5']++;onDone([]);};__cov_W5V18lDlWfr5GxfaSMHdTA.s['6']++;NoTransmitter.prototype.signal=function(command){__cov_W5V18lDlWfr5GxfaSMHdTA.f['4']++;};__cov_W5V18lDlWfr5GxfaSMHdTA.s['7']++;NoTransmitter.prototype.reset=function(successHandler){__cov_W5V18lDlWfr5GxfaSMHdTA.f['5']++;};__cov_W5V18lDlWfr5GxfaSMHdTA.s['8']++;return NoTransmitter;}();__cov_W5V18lDlWfr5GxfaSMHdTA.s['9']++;exports['default']=NoTransmitter;\n","\"use strict\";\nvar __cov_FOUAFt8T4lhf3T5m$MbjKQ = (Function('return this'))();\nif (!__cov_FOUAFt8T4lhf3T5m$MbjKQ.__coverage__) { __cov_FOUAFt8T4lhf3T5m$MbjKQ.__coverage__ = {}; }\n__cov_FOUAFt8T4lhf3T5m$MbjKQ = __cov_FOUAFt8T4lhf3T5m$MbjKQ.__coverage__;\nif (!(__cov_FOUAFt8T4lhf3T5m$MbjKQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SignalCommand.ts'])) {\n   __cov_FOUAFt8T4lhf3T5m$MbjKQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SignalCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SignalCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":21},\"end\":{\"line\":14,\"column\":39}}},\"7\":{\"name\":\"SignalCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":33}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":23,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":37}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":21,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":24}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":68}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":21}},\"21\":{\"start\":{\"line\":22,\"column\":4},\"end\":{\"line\":22,\"column\":25}},\"22\":{\"start\":{\"line\":24,\"column\":0},\"end\":{\"line\":24,\"column\":35}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_FOUAFt8T4lhf3T5m$MbjKQ = __cov_FOUAFt8T4lhf3T5m$MbjKQ['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SignalCommand.ts'];\n__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['1']++;var __extends=(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['1'][0]++,this)&&(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['1'][1]++,this.__extends)||(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['1'][2]++,function(){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['1']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['2']++;var extendStatics=(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['2'][0]++,Object.setPrototypeOf)||(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['2'][2]++,function(d,b){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['2']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['3']++;d.__proto__=b;})||(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['2'][3]++,function(d,b){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['3']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['4']++;for(var p in b){__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['5']++;if(b.hasOwnProperty(p)){__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['3'][0]++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['6']++;d[p]=b[p];}else{__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['3'][1]++;}}});__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['7']++;return function(d,b){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['4']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['8']++;extendStatics(d,b);function __(){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['5']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['10']++;this.constructor=d;}__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['11']++;d.prototype=b===null?(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['4'][0]++,Object.create(b)):(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['12']++;exports.__esModule=true;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['13']++;var Command_1=require('./Command');__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['14']++;var SignalCommand=function(_super){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['6']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['15']++;__extends(SignalCommand,_super);function SignalCommand(name){__cov_FOUAFt8T4lhf3T5m$MbjKQ.f['7']++;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['17']++;var _this=(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['5'][0]++,_super.call(this))||(__cov_FOUAFt8T4lhf3T5m$MbjKQ.b['5'][1]++,this);__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['18']++;_this.id=name;__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['19']++;_this.className='org.opendolphin.core.comm.SignalCommand';__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['20']++;return _this;}__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['21']++;return SignalCommand;}(Command_1['default']);__cov_FOUAFt8T4lhf3T5m$MbjKQ.s['22']++;exports['default']=SignalCommand;\n","\"use strict\";\nvar __cov_YKIyrg5fFDMXGw_d7ZQo4A = (Function('return this'))();\nif (!__cov_YKIyrg5fFDMXGw_d7ZQo4A.__coverage__) { __cov_YKIyrg5fFDMXGw_d7ZQo4A.__coverage__ = {}; }\n__cov_YKIyrg5fFDMXGw_d7ZQo4A = __cov_YKIyrg5fFDMXGw_d7ZQo4A.__coverage__;\nif (!(__cov_YKIyrg5fFDMXGw_d7ZQo4A['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SwitchPresentationModelCommand.ts'])) {\n   __cov_YKIyrg5fFDMXGw_d7ZQo4A['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SwitchPresentationModelCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SwitchPresentationModelCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":38},\"end\":{\"line\":14,\"column\":56}}},\"7\":{\"name\":\"SwitchPresentationModelCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":62}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":25,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":54}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":23,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":26}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":38}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":45}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":85}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":21}},\"23\":{\"start\":{\"line\":24,\"column\":4},\"end\":{\"line\":24,\"column\":42}},\"24\":{\"start\":{\"line\":26,\"column\":0},\"end\":{\"line\":26,\"column\":52}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_YKIyrg5fFDMXGw_d7ZQo4A = __cov_YKIyrg5fFDMXGw_d7ZQo4A['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/SwitchPresentationModelCommand.ts'];\n__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['1']++;var __extends=(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['1'][0]++,this)&&(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['1'][1]++,this.__extends)||(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['1'][2]++,function(){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['1']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['2']++;var extendStatics=(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['2'][0]++,Object.setPrototypeOf)||(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['2'][2]++,function(d,b){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['2']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['3']++;d.__proto__=b;})||(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['2'][3]++,function(d,b){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['3']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['4']++;for(var p in b){__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['5']++;if(b.hasOwnProperty(p)){__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['3'][0]++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['6']++;d[p]=b[p];}else{__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['3'][1]++;}}});__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['7']++;return function(d,b){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['4']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['8']++;extendStatics(d,b);function __(){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['5']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['10']++;this.constructor=d;}__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['11']++;d.prototype=b===null?(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['4'][0]++,Object.create(b)):(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['12']++;exports.__esModule=true;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['13']++;var Command_1=require('./Command');__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['14']++;var SwitchPresentationModelCommand=function(_super){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['6']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['15']++;__extends(SwitchPresentationModelCommand,_super);function SwitchPresentationModelCommand(pmId,sourcePmId){__cov_YKIyrg5fFDMXGw_d7ZQo4A.f['7']++;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['17']++;var _this=(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['5'][0]++,_super.call(this))||(__cov_YKIyrg5fFDMXGw_d7ZQo4A.b['5'][1]++,this);__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['18']++;_this.pmId=pmId;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['19']++;_this.sourcePmId=sourcePmId;__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['20']++;_this.id='SwitchPresentationModel';__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['21']++;_this.className='org.opendolphin.core.comm.SwitchPresentationModelCommand';__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['22']++;return _this;}__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['23']++;return SwitchPresentationModelCommand;}(Command_1['default']);__cov_YKIyrg5fFDMXGw_d7ZQo4A.s['24']++;exports['default']=SwitchPresentationModelCommand;\n","\"use strict\";\nvar __cov_wUP7ohBe1MLIF8_LQf3BJg = (Function('return this'))();\nif (!__cov_wUP7ohBe1MLIF8_LQf3BJg.__coverage__) { __cov_wUP7ohBe1MLIF8_LQf3BJg.__coverage__ = {}; }\n__cov_wUP7ohBe1MLIF8_LQf3BJg = __cov_wUP7ohBe1MLIF8_LQf3BJg.__coverage__;\nif (!(__cov_wUP7ohBe1MLIF8_LQf3BJg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ValueChangedCommand.ts'])) {\n   __cov_wUP7ohBe1MLIF8_LQf3BJg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ValueChangedCommand.ts'] = {\"path\":\"/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ValueChangedCommand.ts\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":1,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":1,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0},\"b\":{\"1\":[0,0,0],\"2\":[0,0,0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":2,\"loc\":{\"start\":{\"line\":2,\"column\":45},\"end\":{\"line\":2,\"column\":57}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":4,\"loc\":{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":63}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":5,\"loc\":{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":24}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":6,\"loc\":{\"start\":{\"line\":6,\"column\":11},\"end\":{\"line\":6,\"column\":27}}},\"5\":{\"name\":\"__\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":22}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":14,\"loc\":{\"start\":{\"line\":14,\"column\":27},\"end\":{\"line\":14,\"column\":45}}},\"7\":{\"name\":\"ValueChangedCommand\",\"line\":16,\"loc\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":16,\"column\":66}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":11,\"column\":5}},\"2\":{\"start\":{\"line\":3,\"column\":4},\"end\":{\"line\":5,\"column\":83}},\"3\":{\"start\":{\"line\":4,\"column\":65},\"end\":{\"line\":4,\"column\":81}},\"4\":{\"start\":{\"line\":5,\"column\":26},\"end\":{\"line\":5,\"column\":80}},\"5\":{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":80}},\"6\":{\"start\":{\"line\":5,\"column\":68},\"end\":{\"line\":5,\"column\":80}},\"7\":{\"start\":{\"line\":6,\"column\":4},\"end\":{\"line\":10,\"column\":6}},\"8\":{\"start\":{\"line\":7,\"column\":8},\"end\":{\"line\":7,\"column\":28}},\"9\":{\"start\":{\"line\":8,\"column\":8},\"end\":{\"line\":8,\"column\":47}},\"10\":{\"start\":{\"line\":8,\"column\":24},\"end\":{\"line\":8,\"column\":45}},\"11\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":93}},\"12\":{\"start\":{\"line\":12,\"column\":0},\"end\":{\"line\":12,\"column\":26}},\"13\":{\"start\":{\"line\":13,\"column\":0},\"end\":{\"line\":13,\"column\":37}},\"14\":{\"start\":{\"line\":14,\"column\":0},\"end\":{\"line\":26,\"column\":25}},\"15\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":43}},\"16\":{\"start\":{\"line\":16,\"column\":4},\"end\":{\"line\":24,\"column\":5}},\"17\":{\"start\":{\"line\":17,\"column\":8},\"end\":{\"line\":17,\"column\":46}},\"18\":{\"start\":{\"line\":18,\"column\":8},\"end\":{\"line\":18,\"column\":40}},\"19\":{\"start\":{\"line\":19,\"column\":8},\"end\":{\"line\":19,\"column\":34}},\"20\":{\"start\":{\"line\":20,\"column\":8},\"end\":{\"line\":20,\"column\":34}},\"21\":{\"start\":{\"line\":21,\"column\":8},\"end\":{\"line\":21,\"column\":34}},\"22\":{\"start\":{\"line\":22,\"column\":8},\"end\":{\"line\":22,\"column\":74}},\"23\":{\"start\":{\"line\":23,\"column\":8},\"end\":{\"line\":23,\"column\":21}},\"24\":{\"start\":{\"line\":25,\"column\":4},\"end\":{\"line\":25,\"column\":31}},\"25\":{\"start\":{\"line\":27,\"column\":0},\"end\":{\"line\":27,\"column\":41}}},\"branchMap\":{\"1\":{\"line\":2,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":2,\"column\":17},\"end\":{\"line\":2,\"column\":21}},{\"start\":{\"line\":2,\"column\":25},\"end\":{\"line\":2,\"column\":39}},{\"start\":{\"line\":2,\"column\":44},\"end\":{\"line\":11,\"column\":4}}]},\"2\":{\"line\":3,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":3,\"column\":24},\"end\":{\"line\":3,\"column\":45}},{\"start\":{\"line\":4,\"column\":9},\"end\":{\"line\":4,\"column\":43}},{\"start\":{\"line\":4,\"column\":47},\"end\":{\"line\":4,\"column\":83}},{\"start\":{\"line\":5,\"column\":8},\"end\":{\"line\":5,\"column\":82}}]},\"3\":{\"line\":5,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}},{\"start\":{\"line\":5,\"column\":43},\"end\":{\"line\":5,\"column\":43}}]},\"4\":{\"line\":9,\"type\":\"cond-expr\",\"locations\":[{\"start\":{\"line\":9,\"column\":35},\"end\":{\"line\":9,\"column\":51}},{\"start\":{\"line\":9,\"column\":55},\"end\":{\"line\":9,\"column\":91}}]},\"5\":{\"line\":17,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":17,\"column\":20},\"end\":{\"line\":17,\"column\":37}},{\"start\":{\"line\":17,\"column\":41},\"end\":{\"line\":17,\"column\":45}}]}}};\n}\n__cov_wUP7ohBe1MLIF8_LQf3BJg = __cov_wUP7ohBe1MLIF8_LQf3BJg['/Users/kunal/dolphin-platform-js/opendolphin/js/dolphin/ValueChangedCommand.ts'];\n__cov_wUP7ohBe1MLIF8_LQf3BJg.s['1']++;var __extends=(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['1'][0]++,this)&&(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['1'][1]++,this.__extends)||(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['1'][2]++,function(){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['1']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['2']++;var extendStatics=(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['2'][0]++,Object.setPrototypeOf)||(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['2'][1]++,{__proto__:[]}instanceof Array)&&(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['2'][2]++,function(d,b){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['2']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['3']++;d.__proto__=b;})||(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['2'][3]++,function(d,b){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['3']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['4']++;for(var p in b){__cov_wUP7ohBe1MLIF8_LQf3BJg.s['5']++;if(b.hasOwnProperty(p)){__cov_wUP7ohBe1MLIF8_LQf3BJg.b['3'][0]++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['6']++;d[p]=b[p];}else{__cov_wUP7ohBe1MLIF8_LQf3BJg.b['3'][1]++;}}});__cov_wUP7ohBe1MLIF8_LQf3BJg.s['7']++;return function(d,b){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['4']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['8']++;extendStatics(d,b);function __(){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['5']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['10']++;this.constructor=d;}__cov_wUP7ohBe1MLIF8_LQf3BJg.s['11']++;d.prototype=b===null?(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['4'][0]++,Object.create(b)):(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['4'][1]++,(__.prototype=b.prototype,new __()));};}());__cov_wUP7ohBe1MLIF8_LQf3BJg.s['12']++;exports.__esModule=true;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['13']++;var Command_1=require('./Command');__cov_wUP7ohBe1MLIF8_LQf3BJg.s['14']++;var ValueChangedCommand=function(_super){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['6']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['15']++;__extends(ValueChangedCommand,_super);function ValueChangedCommand(attributeId,oldValue,newValue){__cov_wUP7ohBe1MLIF8_LQf3BJg.f['7']++;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['17']++;var _this=(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['5'][0]++,_super.call(this))||(__cov_wUP7ohBe1MLIF8_LQf3BJg.b['5'][1]++,this);__cov_wUP7ohBe1MLIF8_LQf3BJg.s['18']++;_this.attributeId=attributeId;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['19']++;_this.oldValue=oldValue;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['20']++;_this.newValue=newValue;__cov_wUP7ohBe1MLIF8_LQf3BJg.s['21']++;_this.id='ValueChanged';__cov_wUP7ohBe1MLIF8_LQf3BJg.s['22']++;_this.className='org.opendolphin.core.comm.ValueChangedCommand';__cov_wUP7ohBe1MLIF8_LQf3BJg.s['23']++;return _this;}__cov_wUP7ohBe1MLIF8_LQf3BJg.s['24']++;return ValueChangedCommand;}(Command_1['default']);__cov_wUP7ohBe1MLIF8_LQf3BJg.s['25']++;exports['default']=ValueChangedCommand;\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport ChangeAttributeMetadataCommand from \"../../js/dolphin/ChangeAttributeMetadataCommand\";\n\nimport { expect } from 'chai';\n\ndescribe('ChangeAttributeMetadataCommandTests', () => {\n\n    var changedAttrMDCommand;\n    beforeEach(() =>{\n        changedAttrMDCommand = new ChangeAttributeMetadataCommand(\"10\", \"MDName\", 20);\n    });\n\n    it('id should  be equal to ChangeAttributeMetadata', () => {\n        expect(changedAttrMDCommand.id).to.equal('ChangeAttributeMetadata');\n    });\n\n    it('className should  be equal to org.opendolphin.core.comm.ChangeAttributeMetadataCommand', () => {\n        expect(changedAttrMDCommand.className).to.equal('org.opendolphin.core.comm.ChangeAttributeMetadataCommand');\n    });\n\n    it('attributeId should  be equal to 10', () => {\n        expect(changedAttrMDCommand.attributeId).to.equal('10');\n    });\n\n    it('metadataName should  be equal to MDName', () => {\n        expect(changedAttrMDCommand.metadataName).to.equal('MDName');\n    });\n\n    it('value should be equal to 20', () => {\n        expect(changedAttrMDCommand.value).to.equal(20);\n    });\n});\n\n\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientPresentationModel } from \"../../js/dolphin/ClientPresentationModel\";\nimport { ValueChangedEvent } from \"../../js/dolphin/ClientAttribute\";\n\n\nimport { assert } from 'chai';\n\ndescribe('ClientAttributeTests', () => {\n\n    it('attributes should get uniqueIds', () => {\n        var ca1 = new ClientAttribute(\"prop\",\"qual\", \"value\");\n        var ca2 = new ClientAttribute(\"prop\",\"qual\", \"value\");\n        assert.notEqual(ca1.id, ca2.id);\n    });\n\n    it('value listeners are called', () => {\n        var attr = new ClientAttribute(\"prop\", \"qual\", 0);\n\n        var spoofedOld = -1;\n        var spoofedNew = -1;\n        attr.onValueChange( (evt: ValueChangedEvent) => {\n            spoofedOld = evt.oldValue;\n            spoofedNew = evt.newValue;\n        } )\n\n        assert.equal(spoofedOld, 0)\n        assert.equal(spoofedNew, 0)\n\n        attr.setValue(1);\n\n        assert.equal(spoofedOld, 0)\n        assert.equal(spoofedNew, 1)\n\n    });\n\n    it('attribute listeners are called', () => {\n        var attr = new ClientAttribute(\"prop\", \"qual\", 0);\n\n        var spoofedOldQfr;\n        var spoofedNewQfr;\n        attr.onQualifierChange((evt:ValueChangedEvent) => {\n            spoofedOldQfr = evt.oldValue;\n            spoofedNewQfr = evt.newValue;\n        })\n        attr.setQualifier(\"qual_change\");\n\n        assert.equal(spoofedOldQfr, \"qual\")\n        assert.equal(spoofedNewQfr, \"qual_change\")\n    });\n\n    it('value listeners do not interfere', () => {\n        var attr1 = new ClientAttribute(\"prop\", \"qual1\", 0);\n        var attr2 = new ClientAttribute(\"prop\", \"qual2\", 0);\n\n        var spoofedNew1 = -1;\n        attr1.onValueChange( (evt: ValueChangedEvent) => {\n            spoofedNew1 = evt.newValue;\n        } )\n        attr1.setValue(1);\n\n        var spoofedNew2 = -1;\n        attr2.onValueChange( (evt: ValueChangedEvent) => {\n            spoofedNew2 = evt.newValue;\n        } )\n        attr2.setValue(2);\n        assert.equal(spoofedNew1, 1)\n        assert.equal(spoofedNew2, 2)\n\n    });\n\n    it('check value', () => {\n        //valid values\n        assert.equal(5, ClientAttribute.checkValue(5));\n        assert.equal(0, ClientAttribute.checkValue(0));\n        assert.equal(\"test\", ClientAttribute.checkValue(\"test\"));\n\n        var date = new Date();\n        assert.equal(date,ClientAttribute.checkValue(date));\n\n        var attr = new ClientAttribute(\"prop\", \"qual1\", 0);\n        attr.setValue(15);\n        assert.equal(15, ClientAttribute.checkValue(attr));\n\n        //Wrapper classes\n        assert.equal(\"test\", ClientAttribute.checkValue(new String(\"test\")));\n        assert.equal(false, ClientAttribute.checkValue(new Boolean(false)));\n        assert.equal(15, ClientAttribute.checkValue(new Number(15)));\n\n        //invalid values\n        assert.equal(null, ClientAttribute.checkValue(null));\n        assert.equal(null, ClientAttribute.checkValue(undefined)); // null is treated as undefined\n        try {\n            ClientAttribute.checkValue(new ClientPresentationModel(undefined, \"type\"))\n            assert.fail();\n        } catch (error) {\n            assert.isTrue(error instanceof Error);\n        }\n    });\n\n    it('simple copy', () => {\n        var ca1 = new ClientAttribute(\"prop\",\"qual\",\"value\");\n        var ca2 = ca1.copy();\n\n        assert.notEqual(ca1.id, ca2.id); // id must not be copied\n        assert.equal(undefined, ca2.getPresentationModel()); // no pm must be set\n\n        assert.equal(ca1.getValue(),     ca2.getValue());\n        assert.equal(ca1.getQualifier(), ca2.getQualifier());\n        assert.equal(ca1.propertyName,   ca2.propertyName); // todo dk: for consistency, there should be getPropertyName()\n    });\n\n\n});\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientConnector, OnSuccessHandler, Transmitter } from \"../../js/dolphin/ClientConnector\";\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport ClientDolphin from \"../../js/dolphin/ClientDolphin\";\nimport { ClientModelStore } from \"../../js/dolphin/ClientModelStore\";\nimport Command from \"../../js/dolphin/Command\";\nimport DeleteAllPresentationModelsOfTypeCommand from \"../../js/dolphin/DeleteAllPresentationModelsOfTypeCommand\";\nimport DeletePresentationModelCommand from \"../../js/dolphin/DeletePresentationModelCommand\";\nimport InitializeAttributeCommand from \"../../js/dolphin/InitializeAttributeCommand\";\nimport SignalCommand from \"../../js/dolphin/SignalCommand\";\nimport SwitchPresentationModelCommand from \"../../js/dolphin/SwitchPresentationModelCommand\";\nimport ValueChangedCommand from \"../../js/dolphin/ValueChangedCommand\";\n\nimport { assert } from 'chai';\n\nclass TestTransmitter implements Transmitter {\n    constructor(public clientCommands, public serverCommands) {\n    }\n\n    transmit(commands:Command[], onDone: (result: Command[]) => void ) : void {\n        this.clientCommands = commands;\n        onDone(this.serverCommands);\n    }\n    signal(command: SignalCommand) : void { /** do nothing */ }\n    reset(successHandler:OnSuccessHandler) : void { /** do nothing */ }\n}\n\ndescribe('DolphinBuilderTest', () => {\n\n    it('sending one command must call the Transmission', () => {\n        var singleCommand   = new Command();\n        var serverCommand:Command[]=[];\n        var transmitter     = new TestTransmitter(singleCommand, serverCommand);\n        var clientConnector = new ClientConnector(transmitter,null);\n\n        clientConnector.send(singleCommand, undefined);\n\n        assert.equal( transmitter.clientCommands.length, 1);\n        assert.equal( transmitter.clientCommands[0], singleCommand);\n    });\n\n    it('sending multiple commands', () => {\n        var singleCommand   = new Command();\n        var serverCommand:Command[]=[];\n        var lastCommand     = new Command();\n        var transmitter     = new TestTransmitter(undefined, serverCommand);\n        var clientConnector = new ClientConnector(transmitter,null);\n\n        clientConnector.send(singleCommand, undefined);\n        clientConnector.send(singleCommand, undefined);\n        clientConnector.send(lastCommand, undefined);\n\n        assert.equal( transmitter.clientCommands.length, 1);\n        assert.equal( transmitter.clientCommands[0].id, lastCommand.id)\n    });\n\n    it('handle DeletePresentationModelCommand', () => {\n        TestHelper.initialize();\n        var serverCommand:DeletePresentationModelCommand = new DeletePresentationModelCommand(\"pmId1\");\n\n        //before calling DeletePresentationModelCommand\n        var pm1 = TestHelper.clientDolphin.findPresentationModelById(\"pmId1\");\n        assert.equal(pm1.id,\"pmId1\");\n\n        //call DeletePresentationModelCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        pm1 = TestHelper.clientDolphin.findPresentationModelById(\"pmId1\");\n        assert.equal(pm1,undefined); // should be undefined\n\n        //other PM should be unaffected\n        var pm2 = TestHelper.clientDolphin.findPresentationModelById(\"pmId2\");\n        assert.equal(pm2.id,\"pmId2\");\n\n        //deleting with dummyId\n        serverCommand  = new DeletePresentationModelCommand(\"dummyId\");\n        var result = TestHelper.clientConnector.handle(serverCommand);\n        assert.equal(result,null);// there is no pm with dummyId\n    });\n\n    it('handle delete all PresentationModel of type command', () => {\n        TestHelper.initialize();\n        var serverCommand:DeleteAllPresentationModelsOfTypeCommand = new DeleteAllPresentationModelsOfTypeCommand(\"pmType\")\n\n        //before calling DeleteAllPresentationModelsOfTypeCommand\n        var pms = TestHelper.clientDolphin.findAllPresentationModelByType(\"pmType\");\n        assert.equal(pms.length,2);\n\n        //call DeleteAllPresentationModelsOfTypeCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        pms = TestHelper.clientDolphin.findAllPresentationModelByType(\"pmType\");\n        assert.equal(pms.length,0); //both pm of pmType is deleted\n\n        //initialize again\n        TestHelper.initialize();\n        //sending dummyType\n        serverCommand = new DeleteAllPresentationModelsOfTypeCommand(\"dummyType\");\n        TestHelper.clientConnector.handle(serverCommand);\n        var pms = TestHelper.clientDolphin.findAllPresentationModelByType(\"pmType\");\n        assert.equal(pms.length,2);// nothing is deleted\n    });\n\n    it('handle ValueChangedCommand', () => {\n        TestHelper.initialize();\n        var serverCommand:ValueChangedCommand = new ValueChangedCommand(TestHelper.attr1.id,0,10);\n\n        //before calling ValueChangedCommand\n        var attribute = TestHelper.clientDolphin.getClientModelStore().findAttributeById(TestHelper.attr1.id);\n        assert.equal(attribute.getValue, TestHelper.attr1.getValue);\n        assert.equal(attribute.getValue(),0);\n\n        //call ValueChangedCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        attribute = TestHelper.clientDolphin.getClientModelStore().findAttributeById(TestHelper.attr1.id);\n        assert.equal(attribute.getValue(), TestHelper.attr1.getValue());\n        assert.equal(attribute.getValue(),10);\n    });\n\n    it('handle switch PresentationModelCommand', () => {\n        TestHelper.initialize();\n        var serverCommand:SwitchPresentationModelCommand = new SwitchPresentationModelCommand(\"pmId1\",\"pmId2\");\n\n        //before calling SwitchPresentationModelCommand\n        var pms = TestHelper.clientDolphin.findAllPresentationModelByType(\"pmType\");\n        assert.notEqual(pms[0].getAttributes()[0].getValue(), pms[1].getAttributes()[0].getValue());\n\n        //call SwitchPresentationModelCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        pms = TestHelper.clientDolphin.findAllPresentationModelByType(\"pmType\");\n        // Attribute of same property (\"prop1\", )  should be equal\n        assert.equal(pms[0].getAttributes()[0].getValue(), pms[1].getAttributes()[0].getValue());\n\n        //other attributes should be unaffected\n        assert.notEqual(pms[0].getAttributes()[1].getValue(), pms[1].getAttributes()[1].getValue());\n    });\n\n    it('handle initialize attribute command', () => {\n        TestHelper.initialize();\n        //new PM with existing attribute qualifier\n        var serverCommand: InitializeAttributeCommand = new  InitializeAttributeCommand(\"newPm\",\"newPmType\",\"newProp\",\"qual1\",\"newValue\");\n        //before calling InitializeAttributeCommand\n        var attribute = TestHelper.clientDolphin.getClientModelStore().findAllAttributesByQualifier(\"qual1\");\n        assert.equal(attribute[0].getValue(), 0);\n        assert.equal(TestHelper.clientDolphin.listPresentationModelIds().length, 2);\n\n        //call InitializeAttributeCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        attribute = TestHelper.clientDolphin.getClientModelStore().findAllAttributesByQualifier(\"qual1\");\n        assert.equal(attribute[0].getValue(), \"newValue\");// same attribute value will change\n        assert.equal(TestHelper.clientDolphin.listPresentationModelIds().length, 3);\n\n        //existing PM with existing attribute qualifier\n        var serverCommand: InitializeAttributeCommand = new  InitializeAttributeCommand(\"pmId1\",\"pmType1\",\"newProp\",\"qual3\",\"newValue\");\n        //before calling InitializeAttributeCommand\n        var attribute = TestHelper.clientDolphin.getClientModelStore().findAllAttributesByQualifier(\"qual3\");\n        assert.equal(attribute[0].getValue(), 5);\n        assert.equal(TestHelper.clientDolphin.listPresentationModelIds().length, 3);\n\n        //call InitializeAttributeCommand\n        TestHelper.clientConnector.handle(serverCommand);\n        attribute = TestHelper.clientDolphin.getClientModelStore().findAllAttributesByQualifier(\"qual3\");\n        assert.equal(attribute[0].getValue(), \"newValue\");// same attribute value will change\n        assert.equal(TestHelper.clientDolphin.listPresentationModelIds().length, 3);// no PM added\n    });\n\n});\n\nclass TestHelper{\n    static transmitter:TestTransmitter;\n    static clientDolphin:ClientDolphin;\n    static clientConnector:ClientConnector;\n    static clientModelStore:ClientModelStore;\n    static attr1:ClientAttribute;// to access for id\n    static attr3:ClientAttribute;// to access for id\n\n    static initialize(){\n        var serverCommand:Command[]=[];//to test\n        this.transmitter = new TestTransmitter(undefined, serverCommand);\n        this.clientDolphin = new ClientDolphin();\n        this.clientConnector = new ClientConnector(this.transmitter,this.clientDolphin);\n        this.clientModelStore = new ClientModelStore(this.clientDolphin);\n        this.clientDolphin.setClientModelStore(this.clientModelStore);\n        this.clientDolphin.setClientConnector(this.clientConnector);\n\n        this.attr1 = new ClientAttribute(\"prop1\", \"qual1\", 0);\n        var attr2 = new ClientAttribute(\"prop2\", \"qual2\", 0);\n\n        this.attr3 = new ClientAttribute(\"prop1\", \"qual3\", 5);\n        var attr4 = new ClientAttribute(\"prop4\", \"qual4\", 5);\n\n        this.clientDolphin.presentationModel(\"pmId1\", \"pmType\",this.attr1,attr2);\n        this.clientDolphin.presentationModel(\"pmId2\", \"pmType\",this.attr3,attr4);\n    }\n}\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientConnector } from \"../../js/dolphin/ClientConnector\";\nimport ClientDolphin from \"../../js/dolphin/ClientDolphin\";\nimport { ClientModelStore } from \"../../js/dolphin/ClientModelStore\";\nimport { ClientPresentationModel } from \"../../js/dolphin/ClientPresentationModel\";\nimport NoTransmitter from \"../../js/dolphin/NoTransmitter\";\n\n\n\nimport { expect } from 'chai';\n\ndescribe('ClientDolphinTests', () => {\n\n    var clientDolphin:ClientDolphin;\n    beforeEach(() =>{\n        clientDolphin = new ClientDolphin();\n        var clientModelStore:ClientModelStore = new ClientModelStore(clientDolphin);\n        clientDolphin.setClientModelStore(clientModelStore);\n        clientDolphin.setClientConnector(new ClientConnector(new NoTransmitter(), clientDolphin));\n    });\n\n    it('Attributes length should be equal to 0', () => {\n\n        var pm1:ClientPresentationModel = clientDolphin.presentationModel(\"myId1\", \"myType\");\n        expect(pm1.id).to.equal('myId1');\n        expect(pm1.getAttributes().length).to.equal(0);\n    });\n\n    it('Attributes length should be equal to 2', () => {\n\n        var ca1 = new ClientAttribute(\"prop1\", \"qual1\", \"val\");\n        var ca2 = new ClientAttribute(\"prop2\", \"qual2\", \"val\");\n\n        var pm2:ClientPresentationModel = clientDolphin.presentationModel(\"myId2\", \"myType\", ca1, ca2);\n        expect(pm2.id).to.equal('myId2');\n        expect(pm2.getAttributes().length).to.equal(2);\n    });\n\n});","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientConnector, OnSuccessHandler, Transmitter } from \"../../js/dolphin/ClientConnector\";\nimport ClientDolphin from \"../../js/dolphin/ClientDolphin\";\nimport { ClientModelStore, Type } from \"../../js/dolphin/ClientModelStore\";\nimport { ClientPresentationModel } from \"../../js/dolphin/ClientPresentationModel\";\nimport Command from \"../../js/dolphin/Command\";\nimport { ModelStoreEvent } from \"../../js/dolphin/ClientModelStore\";\nimport SignalCommand from \"../../js/dolphin/SignalCommand\";\n\nimport { expect } from 'chai';\n\n\nclass TestTransmitter implements Transmitter {\n    constructor(public clientCommands, public serverCommands) {\n    }\n\n    signal(command:SignalCommand) : void { /* do nothing */; }\n    reset(successHandler:OnSuccessHandler) : void { /** do nothing */ }\n\n    transmit(commands:Command[], onDone:(result:Command[]) => void):void {\n        this.clientCommands = commands;\n        onDone(this.serverCommands);\n    }\n}\n\n\ndescribe('ClientModelStoreTests', () => {\n\n    var clientDolphin:ClientDolphin;\n    var clientModelStore:ClientModelStore;\n    beforeEach(() =>{\n        clientDolphin = new ClientDolphin();\n        var serverCommand:Command[]=[];//to test\n        var transmitter = new TestTransmitter(undefined, serverCommand);\n        var clientConnector = new ClientConnector(transmitter,clientDolphin);\n        clientModelStore = new ClientModelStore(clientDolphin);\n        clientDolphin.setClientConnector(clientConnector);\n        clientDolphin.setClientModelStore(clientModelStore);\n    });\n\n    it('should be abel add and remove PresentationModel', () => {\n\n        var type:Type;\n        var pm:ClientPresentationModel;\n        clientModelStore.onModelStoreChange((evt:ModelStoreEvent) => {\n            type = evt.eventType;\n            pm = evt.clientPresentationModel;\n        })\n\n        var pm1 = new ClientPresentationModel(\"id1\", \"type\");\n        var pm2 = new ClientPresentationModel(\"id2\", \"type\");\n        clientModelStore.add(pm1);\n\n        expect(type).to.equal(Type.ADDED);\n        expect(pm).to.equal(pm1);\n\n        clientModelStore.add(pm2);\n        expect(type).to.equal(Type.ADDED);\n        expect(pm).to.equal(pm2);\n\n\n        var ids:string[] = clientModelStore.listPresentationModelIds();\n        expect(ids.length).to.equal(2);\n        expect(ids[1]).to.equal(\"id2\");\n\n        var pms:ClientPresentationModel[] = clientModelStore.listPresentationModels();\n        expect(pms.length).to.equal(2);\n        expect(pms[0]).to.equal(pm1);\n\n        var pm = clientModelStore.findPresentationModelById(\"id2\");\n        expect(pm).to.equal(pm2);\n        expect(clientModelStore.containsPresentationModel(\"id1\")).to.be.true;\n\n        clientModelStore.remove(pm1);\n        expect(type).to.equal(Type.REMOVED);\n        expect(pm).to.equal(pm1);\n\n        var ids:string[] = clientModelStore.listPresentationModelIds();\n        expect(ids.length).to.equal(1);\n        expect(ids[0]).to.equal(\"id2\");\n\n        var pms:ClientPresentationModel[] = clientModelStore.listPresentationModels();\n        expect(pms.length).to.equal(1);\n        expect(pms[0]).to.equal(pm2);\n\n        expect(clientModelStore.containsPresentationModel(\"id1\")).to.be.false;\n    });\n\n\n\n    it('should be listen for PresentationModel changes by type', () => {\n\n        var type:Type;\n        var pm:ClientPresentationModel;\n        // only listen for a specific type\n        clientModelStore.onModelStoreChangeForType(\"type\", (evt:ModelStoreEvent) => {\n            type = evt.eventType;\n            pm = evt.clientPresentationModel;\n        })\n\n        var pm1 = new ClientPresentationModel(\"id1\", \"type\");\n        var pm2 = new ClientPresentationModel(\"id2\", \"type\");\n        var pm3 = new ClientPresentationModel(\"id3\", \"some other type\");\n\n        clientModelStore.add(pm1);\n        expect(type).to.equal(Type.ADDED);\n        expect(pm).to.equal(pm1);\n\n        clientModelStore.add(pm2);\n        expect(type).to.equal(Type.ADDED);\n        expect(pm).to.equal(pm2);\n\n        clientModelStore.add(pm3);\n        expect(pm).to.equal(pm2); // adding pm3 did not change the last pm !!!\n\n        // but it is in the model store\n        var ids:string[] = clientModelStore.listPresentationModelIds();\n        expect(ids.length).to.equal(3);\n        expect(ids[2]).to.equal(\"id3\");\n\n        var pms:ClientPresentationModel[] = clientModelStore.listPresentationModels();\n        expect(pms.length).to.equal(3);\n        expect(pms[0]).to.equal(pm1);\n\n        var pm = clientModelStore.findPresentationModelById(\"id3\");\n        expect(pm).to.equal(pm3);\n        expect(clientModelStore.containsPresentationModel(\"id3\")).to.be.true;\n\n        clientModelStore.remove(pm1);\n        expect(type).to.equal(Type.REMOVED);\n        expect(pm).to.equal(pm1);\n\n        clientModelStore.remove(pm3); // listener ist _not_ triggered!\n        expect(pm).to.equal(pm1);\n    });\n\n    it('should be add and remove PresentationModel by type', () => {\n\n        var pm1 = new ClientPresentationModel(\"id1\", \"type\");\n        var pm2 = new ClientPresentationModel(\"id2\", \"type\");\n\n        clientModelStore.addPresentationModelByType(pm1);\n        var pms:ClientPresentationModel[] = clientModelStore.findAllPresentationModelByType(pm1.presentationModelType);\n\n        expect(pms.length).to.equal(1);\n        expect(pms[0].id).to.equal(\"id1\");\n\n        clientModelStore.addPresentationModelByType(pm2);\n        var pms = clientModelStore.findAllPresentationModelByType(pm1.presentationModelType);\n        expect(pms.length).to.equal(2);\n        expect(pms[0].id).to.equal(\"id1\");\n        expect(pms[1].id).to.equal(\"id2\");\n\n        clientModelStore.removePresentationModelByType(pm1);\n        var pms = clientModelStore.findAllPresentationModelByType(pm1.presentationModelType);\n\n        expect(pms.length).to.equal(1);\n        expect(pms[0].id).to.equal(\"id2\");\n    });\n\n    it('should be add and remove AttributeById', () => {\n\n        var attr1 = new ClientAttribute(\"prop1\", \"qual1\", 0);\n        var attr2 = new ClientAttribute(\"prop2\", \"qual2\", 0);\n\n        clientModelStore.addAttributeById(attr1);\n        clientModelStore.addAttributeById(attr2);\n\n        var result1 = clientModelStore.findAttributeById(attr1.id);\n        expect(result1).to.equal(attr1);\n\n        var result2 = clientModelStore.findAttributeById(attr2.id);\n        expect(result2).to.equal(attr2);\n\n        clientModelStore.removeAttributeById(attr1);\n        var result1 = clientModelStore.findAttributeById(attr1.id);\n        expect(result1).to.equal(undefined);\n    });\n\n    it('should be add and remove ClientAttribute by qualifier', () => {\n\n        var attr1 = new ClientAttribute(\"prop1\", \"qual1\", 0);\n        var attr2 = new ClientAttribute(\"prop2\", \"qual2\", 0);\n\n        var attr3 = new ClientAttribute(\"prop3\", \"qual1\", 0);\n        var attr4 = new ClientAttribute(\"prop4\", \"qual2\", 0);\n\n\n        clientModelStore.addAttributeByQualifier(attr1);\n        clientModelStore.addAttributeByQualifier(attr2);\n        clientModelStore.addAttributeByQualifier(attr3);\n        clientModelStore.addAttributeByQualifier(attr4);\n\n        var clientAttrs1:ClientAttribute[] = clientModelStore.findAllAttributesByQualifier(\"qual1\");\n        expect(clientAttrs1.length).to.equal(2);\n        expect(clientAttrs1[0].getQualifier()).to.equal(\"qual1\");\n        expect(clientAttrs1[1].getQualifier()).to.equal(\"qual1\");\n\n\n        var clientAttrs2:ClientAttribute[] = clientModelStore.findAllAttributesByQualifier(\"qual2\");\n        expect(clientAttrs2.length).to.equal(2);\n        expect(clientAttrs2[0].getQualifier()).to.equal(\"qual2\");\n        expect(clientAttrs2[1].getQualifier()).to.equal(\"qual2\");\n\n        clientModelStore.removeAttributeByQualifier(attr1);\n        var clientAttrs1:ClientAttribute[] = clientModelStore.findAllAttributesByQualifier(\"qual1\");\n        expect(clientAttrs1.length).to.equal(1);\n        expect(clientAttrs1[0].getQualifier()).to.equal(\"qual1\");\n        expect(clientAttrs1[1]).to.equal(undefined);\n    });\n\n});","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientPresentationModel, InvalidationEvent } from \"../../js/dolphin/ClientPresentationModel\";\n\nimport { assert } from 'chai';\n\n\ndescribe('ClientPresentationModelTests', () => {\n\n    it('create pm with automatic id', () => {\n        var pm1 = new ClientPresentationModel(undefined,undefined);\n        var pm2 = new ClientPresentationModel(undefined,undefined);\n        assert.notEqual(pm1.id, pm2.id);\n    });\n\n    it('create pm with given id', () => {\n        var pm1 = new ClientPresentationModel(\"MyId\",undefined);\n        assert.equal(pm1.id, \"MyId\");\n    });\n\n    it('create pm with given type', () => {\n        var pm1 = new ClientPresentationModel(undefined,\"MyType\");\n        assert.equal(pm1.presentationModelType, \"MyType\");\n    });\n\n    it('adding client attributes', () => {\n        var pm1 = new ClientPresentationModel(undefined,undefined);\n        assert.equal(pm1.getAttributes().length, 0);\n        var firstAttribute = new ClientAttribute(\"prop\", \"qual\", 0);\n        pm1.addAttribute(firstAttribute);\n        assert.equal(pm1.getAttributes().length, 1);\n        assert.equal(pm1.getAttributes()[0], firstAttribute);\n    });\n\n\n    it('invalidate ClientPresentationModel event', () => {\n        var pm1 = new ClientPresentationModel(undefined,undefined);\n        var clientAttribute = new ClientAttribute(\"prop\", \"qual\", 0);\n        pm1.addAttribute(clientAttribute);\n        var source;\n        pm1.onInvalidated((event:InvalidationEvent) => {\n            source=event.source;\n        });\n        clientAttribute.setValue(\"newValue\");\n        assert.equal(pm1,source);\n    });\n\n\n    it('find attribute by id', () => {\n        var pm = new ClientPresentationModel(undefined,undefined);\n        var ca1 = new ClientAttribute(\"prop1\",\"qual1\",\"value1\");\n\n        pm.addAttribute(ca1);\n        var result = pm.findAttributeById(ca1.id);\n        assert.equal(ca1,result);\n        // find by invalid id\n        result=pm.findAttributeById(\"no-such-id\");\n        assert.equal(result, null);\n    });\n\n\n    it('find attribute by qualifier', () => {\n        var pm = new ClientPresentationModel(undefined,undefined);\n        var ca1 = new ClientAttribute(\"prop1\",\"qual1\",\"value1\");\n\n        pm.addAttribute(ca1);\n        var result = pm.findAttributeByQualifier(\"qual1\");\n        assert.equal(ca1,result);\n        // find by invalid qualifier\n        result=pm.findAttributeByQualifier(\"dummy\");\n        assert.equal(result, null);\n    });\n\n\n    it('simple copy', () => {\n\n        var ca1 = new ClientAttribute(\"prop1\",\"qual1\",\"value1\");\n        var ca2 = new ClientAttribute(\"prop2\",\"qual2\",\"value2\");\n        var pm1 = new ClientPresentationModel(\"pmId\",\"pmType\");\n        pm1.addAttribute(ca1);\n        pm1.addAttribute(ca2);\n\n        var pm2 = pm1.copy();\n        assert.notEqual(pm1.id, pm2.id);\n        assert.equal(true, pm2.clientSideOnly);\n\n        assert.equal(pm1.presentationModelType, pm2.presentationModelType) // not sure this is a good idea\n        assert.equal(pm1.getAttributes().length, pm2.getAttributes().length)\n        assert.equal(pm1.getAt('prop2').getValue(), pm2.getAt('prop2').getValue()) // a spy would be nice here\n    });\n});\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport AttributeCreatedNotification from \"../../js/dolphin/AttributeCreatedNotification\";\nimport AttributeMetadataChangedCommand from \"../../js/dolphin/AttributeMetadataChangedCommand\";\nimport CallNamedActionCommand from \"../../js/dolphin/CallNamedActionCommand\";\nimport ChangeAttributeMetadataCommand from \"../../js/dolphin/ChangeAttributeMetadataCommand\";\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientPresentationModel } from \"../../js/dolphin/ClientPresentationModel\";\nimport Codec from \"../../js/dolphin/Codec\";\nimport CreatePresentationModelCommand from \"../../js/dolphin/CreatePresentationModelCommand\";\nimport GetPresentationModelCommand from \"../../js/dolphin/GetPresentationModelCommand\";\nimport DataCommand from \"../../js/dolphin/DataCommand\";\nimport DeleteAllPresentationModelsOfTypeCommand from \"../../js/dolphin/DeleteAllPresentationModelsOfTypeCommand\";\nimport DeletedAllPresentationModelsOfTypeNotification from \"../../js/dolphin/DeletedAllPresentationModelsOfTypeNotification\";\nimport DeletedPresentationModelNotification from \"../../js/dolphin/DeletedPresentationModelNotification\";\nimport DeletePresentationModelCommand from \"../../js/dolphin/DeletePresentationModelCommand\";\nimport EmptyNotification from \"../../js/dolphin/EmptyNotification\";\nimport InitializeAttributeCommand from \"../../js/dolphin/InitializeAttributeCommand\";\nimport NamedCommand from \"../../js/dolphin/NamedCommand\";\nimport SignalCommand from \"../../js/dolphin/SignalCommand\";\nimport SwitchPresentationModelCommand from \"../../js/dolphin/SwitchPresentationModelCommand\";\nimport ValueChangedCommand from \"../../js/dolphin/ValueChangedCommand\";\n\nimport { expect } from 'chai';\n\n\ndescribe('Codec Test', () => {\n\n    it('test codec create PresentationModel', () => {\n\n        var pm = new ClientPresentationModel(\"MyId\", \"MyType\");\n        var clientAttribute1 = new ClientAttribute(\"prop1\", \"qual1\", 0);\n        var clientAttribute2 = new ClientAttribute(\"prop2\", \"qual2\", 0);\n        pm.addAttribute(clientAttribute1);\n        pm.addAttribute(clientAttribute2);\n        var createPMCommand = new CreatePresentationModelCommand(pm);\n\n        var codec = new Codec();\n\n        var coded = codec.encode(createPMCommand);\n        var decoded = codec.decode(coded);\n\n        expect(createPMCommand.toString() === decoded.toString()).to.be.true;\n    });\n\n    it('test empty', () => {\n        expect(CodecTestHelper.testSoManyCommandsEncoding(0)).to.be.true;\n    });\n\n    it('test one', () => {\n        expect(CodecTestHelper.testSoManyCommandsEncoding(1)).to.be.true;\n    });\n\n    it('test many', () => {\n        expect(CodecTestHelper.testSoManyCommandsEncoding(10)).to.be.true;\n    });\n\n    it('test coding commands', () => {\n\n        expect(CodecTestHelper.testCodingCommand(new AttributeCreatedNotification(\"pmId\", \"5\", \"prop\", \"äöüéàè\", \"qualifier\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new AttributeMetadataChangedCommand(\"5\", \"name\", \"value\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new CallNamedActionCommand(\"some-action\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new CreatePresentationModelCommand(new ClientPresentationModel(\"MyId\", \"MyType\")))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new ChangeAttributeMetadataCommand(\"5\", \"name\", \"value\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new GetPresentationModelCommand(\"pmId\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new DataCommand(\"test\")));\n        expect(CodecTestHelper.testCodingCommand(new DeleteAllPresentationModelsOfTypeCommand(\"type\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new DeletedAllPresentationModelsOfTypeNotification(\"type\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new DeletedPresentationModelNotification(\"pmId\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new DeletePresentationModelCommand(\"pmId\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new EmptyNotification())).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new InitializeAttributeCommand(\"pmId\", \"prop\", \"qualifier\", \"value\", \"pmType\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new NamedCommand(\"name\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new SignalCommand(\"signal\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new SwitchPresentationModelCommand(\"pmId\", \"sourcePmId\"))).to.be.true;\n        expect(CodecTestHelper.testCodingCommand(new ValueChangedCommand(\"5\", \"oldValue\", \"newValue\"))).to.be.true;\n    });\n});\n\nclass CodecTestHelper {\n\n    static testSoManyCommandsEncoding(count:number):boolean {\n        var codec:Codec = new Codec();\n        var commands:AttributeCreatedNotification[] = [];\n\n        for (var i = 0; i < count; i++) {\n            commands.push(new AttributeCreatedNotification(i.toString(), \"\" + i * count, \"prop\" + i, \"value\" + i, null));\n        }\n\n        var coded = codec.encode(commands);\n        var decoded = codec.decode(coded);\n\n        if (commands.toString() === decoded.toString()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    static testCodingCommand(command:any) {\n        var codec:Codec = new Codec();\n        var coded = codec.encode(command);\n        var decoded = codec.decode(coded);\n        if (command.toString() === decoded.toString()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\n\nimport { CommandAndHandler, OnFinishedHandler } from \"../../js/dolphin/ClientConnector\";\nimport { BlindCommandBatcher, NoCommandBatcher } from \"../../js/dolphin/CommandBatcher\";\nimport ValueChangedCommand from \"../../js/dolphin/ValueChangedCommand\";\n\n\nimport { expect } from 'chai';\n\ndescribe('CommandBatcherTests', () => {\n\n    it('Batcher Does Not Batch', () => {\n\n        var whateverCommandAndHandler : CommandAndHandler = {command: null, handler: null};\n        var queue = [ whateverCommandAndHandler, whateverCommandAndHandler, whateverCommandAndHandler ];\n\n        var batcher = new NoCommandBatcher();\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(1);\n        expect(queue.length).to.equal(2);\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(1);\n        expect(queue.length).to.equal(1);\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(1);\n        expect(queue.length).to.equal(0);\n    });\n\n    it('Simple Blind Batching', () => {\n\n        var whateverCommandAndHandler : CommandAndHandler = { command: { id:\"x\" }, handler: null };\n        var queue = [ whateverCommandAndHandler, whateverCommandAndHandler, whateverCommandAndHandler ];\n\n        var batcher = new BlindCommandBatcher();\n\n        var result = batcher.batch(queue);\n\n        expect(result.length).to.equal(3);\n        expect(queue.length).to.equal(0);\n    });\n\n\n    it('Blind Batching With Non Blind', () => {\n\n        var blind   : CommandAndHandler = { command: { id:\"x\"}, handler: null };\n        var finisher: OnFinishedHandler = { onFinished : null, onFinishedData: null };\n        var handled : CommandAndHandler = { command: { id:\"x\"}, handler: finisher };\n\n        var queue = [ handled, blind, blind, handled, blind, handled ]; // batch sizes 1, 3, 2\n\n        var batcher = new BlindCommandBatcher();\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(1);\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(3);\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(2);\n\n        expect(result[0]).to.equal(blind); // make sure we have the right sequence\n        expect(result[1]).to.equal(handled);\n\n        expect(queue.length).to.equal(0);\n    });\n\n    it('Blind Folding', () => {\n\n        var cmd1    : ValueChangedCommand = new ValueChangedCommand(\"1\", 0, 1);\n        var cmd2    : ValueChangedCommand = new ValueChangedCommand(\"2\", 0, 1); // other id, will be batched\n        var cmd3    : ValueChangedCommand = new ValueChangedCommand(\"1\", 1, 2); // will be folded\n\n        var queue = [\n            { command: cmd1, handler: null },\n            { command: cmd2, handler: null },\n            { command: cmd3, handler: null }\n        ];\n        var unfolded = queue[1];\n\n        var batcher = new BlindCommandBatcher();\n\n        var result = batcher.batch(queue);\n        expect(result.length).to.equal(2);\n\n        expect(result[0].command['attributeId']).to.equal(\"1\");\n        expect(result[0].command['oldValue']).to.equal(0);\n        expect(result[0].command['newValue']).to.equal(2);\n        expect(result[1]).to.equal(unfolded);\n\n        expect(queue.length).to.equal(0);\n\n    });\n\n});\n","// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport { ClientAttribute } from \"../../js/dolphin/ClientAttribute\";\nimport { ClientPresentationModel } from \"../../js/dolphin/ClientPresentationModel\";\nimport CreatePresentationModelCommand from \"../../js/dolphin/CreatePresentationModelCommand\";\n\nimport { assert } from 'chai';\n\n\ndescribe('CreatePresentationModelCommandTests', () => {\n\n    it('create PresentationModelCommand with given parameter', () => {\n\n        var pm = new ClientPresentationModel(\"MyId\",\"MyType\");\n        var clientAttribute1 = new ClientAttribute(\"prop1\", \"qual1\", 0);\n        var clientAttribute2 = new ClientAttribute(\"prop2\", \"qual2\", 0);\n        pm.addAttribute(clientAttribute1);\n        pm.addAttribute(clientAttribute2);\n        var createPMCommand = new CreatePresentationModelCommand(pm);\n        assert.equal(createPMCommand.id,\"CreatePresentationModel\");\n        assert.equal(createPMCommand.className,\"org.opendolphin.core.comm.CreatePresentationModelCommand\");\n        assert.equal(createPMCommand.pmId,\"MyId\");\n        assert.equal(createPMCommand.pmType,\"MyType\");\n\n        assert.equal(createPMCommand.attributes.length,2);\n        assert.equal(createPMCommand.attributes[0].propertyName,\"prop1\");\n        assert.equal(createPMCommand.attributes[1].propertyName,\"prop2\");\n    });\n\n});\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport ClientDolphin from \"../../js/dolphin/ClientDolphin\";\nimport DolphinBuilder from \"../../js/dolphin/DolphinBuilder\";\n\nimport { assert } from 'chai';\n\ndescribe('DolphinBuilderTest', () => {\n\n    it('defaults values', () => {\n\n        var builder = new DolphinBuilder();\n        assert.equal(builder.url_, undefined, \"ERROR: url_ must be 'undefined'\");\n        assert.equal(builder.reset_, false, \"ERROR: reset_ must be 'false'\");\n        assert.equal(builder.slackMS_, 300, \"ERROR: slackMS_ must be '300'\");\n        assert.equal(builder.maxBatchSize_, 50, \"ERROR: maxBatchSize_ must be '50'\");\n        assert.equal(builder.errorHandler_, undefined, \"ERROR: errorHandler_ must be 'undefined'\");\n        assert.equal(builder.supportCORS_, false, \"ERROR: supportCORS_ must be 'false'\");\n    });\n\n    it('url', () => {\n        var url = 'http:8080//mydolphinapp';\n        var builder = new DolphinBuilder().url(url);\n        assert.equal(builder.url_, url, \"ERROR: url_ must be '\" + url + \"'\");\n    });\n\n    it('reset', () => {\n        var reset = true;\n        var builder = new DolphinBuilder().reset(reset);\n        assert.equal(builder.reset_, reset, \"ERROR: reset_ must be '\" + reset + \"'\");\n    });\n\n    it('slackMS', () => {\n        var slackMS = 400;\n        var builder = new DolphinBuilder().slackMS(slackMS);\n        assert.equal(builder.slackMS_, slackMS, \"ERROR: slackMS_ must be '\" + slackMS + \"'\");\n    });\n\n    it('max batch size', () => {\n        var maxBatchSize = 60;\n        var builder = new DolphinBuilder().maxBatchSize(maxBatchSize);\n        assert.equal(builder.maxBatchSize_, maxBatchSize, \"ERROR: maxBatchSize_ must be '\" + maxBatchSize + \"'\");\n    });\n\n    it('support CORS', () => {\n        var supportCORS = true;\n        var builder = new DolphinBuilder().supportCORS(supportCORS);\n        assert.equal(builder.supportCORS_, supportCORS, \"ERROR: supportCORS_ must be '\" + supportCORS + \"'\");\n    });\n\n    it('error handler', () => {\n        var errorHandler = function(evt) { };\n        var builder = new DolphinBuilder().errorHandler(errorHandler);\n        assert.equal(builder.errorHandler_, errorHandler, \"ERROR: errorHandler_ must be '\" + errorHandler + \"'\");\n    });\n\n    it('built client dolphin', () => {\n        var dolphin:ClientDolphin = new DolphinBuilder().build();\n        assert.notEqual(dolphin.getClientConnector(), undefined, \"ERROR: dolphin.clientConnector must be initialized\");\n        assert.notEqual(dolphin.getClientModelStore(), undefined, \"ERROR: dolphin.clientModelStore must be initialized\");\n        // TODO: how to test if 'HttpTransmitter' or 'NoTransmitter' is created when 'ClientTransmitter.transmitter' is private ?\n    });\n});\n","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport EmptyNotification from \"../../js/dolphin/EmptyNotification\";\n\nimport { expect } from 'chai';\n\ndescribe('EmptyNotificationTests', () => {\n\n    var emptyNotification;\n    beforeEach(() =>{\n        emptyNotification = new EmptyNotification();\n    });\n\n    it('id should  be equal to Empty', () => {\n        expect(emptyNotification.id).to.equal('Empty');\n    });\n\n    it('className should  be equal to org.opendolphin.core.comm.EmptyNotification', () => {\n        expect(emptyNotification.className).to.equal('org.opendolphin.core.comm.EmptyNotification');\n    });\n\n});","/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport NamedCommand from \"../../js/dolphin/NamedCommand\";\n\nimport { expect } from 'chai';\n\ndescribe('NamedCommandTests', () => {\n\n    var namedCommand;\n    beforeEach(() =>{\n        namedCommand = new NamedCommand(\"CustomId\");\n    });\n\n    it('id should be equal to CustomId', () => {\n        expect(namedCommand.id).to.equal('CustomId');\n    });\n\n    it('className should be equal to org.opendolphin.core.comm.NamedCommand', () => {\n        expect(namedCommand.className).to.equal('org.opendolphin.core.comm.NamedCommand');\n    });\n\n});\n","// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\n/// <reference path=\"../../../node_modules/@types/chai/index.d.ts\" />\n\nimport ValueChangedCommand from \"../../js/dolphin/ValueChangedCommand\";\n\nimport { expect } from 'chai';\n\ndescribe('ValueChangedCommandTests', () => {\n\n    var valueChangedCommand;\n    beforeEach(() =>{\n        valueChangedCommand = new ValueChangedCommand(\"10\", 10, 20);;\n    });\n\n    it('should create ValueChangedCommand with given parameter', () => {\n\n        expect(valueChangedCommand.id).to.equal('ValueChanged');\n        expect(valueChangedCommand.className).to.equal('org.opendolphin.core.comm.ValueChangedCommand');\n        expect(valueChangedCommand.attributeId).to.equal('10');\n        expect(valueChangedCommand.oldValue).to.equal(10);\n        expect(valueChangedCommand.newValue).to.equal(20);\n\n    });\n});\n\n"]}